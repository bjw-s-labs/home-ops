---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: cloudflared
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: cloudflared
  dependsOn:
    - name: externaldns-cloudflare
      namespace: network
  values:
    configMaps:
      config:
        data:
          config.yaml: |-
            originRequest:
              originServerName: ingress-ext.bjw-s.dev

            ingress:
              - hostname: bjw-s.dev
                service: https://envoy-external.{{ .Release.Namespace }}.svc.cluster.local
              - hostname: "*.bjw-s.dev"
                service: https://envoy-external.{{ .Release.Namespace }}.svc.cluster.local
              - service: http_status:404
    controllers:
      cloudflared:
        replicas: 2
        strategy: RollingUpdate
        pod:
          securityContext:
            runAsNonRoot: true
            runAsUser: 2000
            runAsGroup: 2000
        containers:
          app:
            image:
              repository: docker.io/cloudflare/cloudflared
              tag: 2025.8.1
            args:
              - tunnel
              - run
            env:
              NO_AUTOUPDATE: "true"
              TUNNEL_METRICS: 0.0.0.0:8080
              TUNNEL_ORIGIN_ENABLE_HTTP2: true
              TUNNEL_POST_QUANTUM: true
              TUNNEL_TRANSPORT_PROTOCOL: quic
            envFrom:
              - secretRef:
                  name: cloudflared-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ready
                    port: &port 8080
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
    persistence:
      config:
        type: configMap
        identifier: config
        globalMounts:
          - path: /etc/cloudflared/config.yaml
            subPath: config.yaml
            readOnly: true
    service:
      app:
        ports:
          http:
            port: *port
    serviceMonitor:
      app:
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 30s
