---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: system-monitoring
spec:
  interval: 5m
  chart:
    spec:
      chart: grafana
      version: 6.58.4
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
      interval: 5m
  timeout: 20m
  values:
    replicas: 3
    rbac:
      pspEnabled: false
    deploymentStrategy:
      type: Recreate

    image:
      repository: grafana/grafana

    env:
      GF_ANALYTICS_CHECK_FOR_UPDATES: false

      GF_GRAFANA_NET_URL: https://grafana.net
      GF_LOG_MODE: console
      # GF_PATHS_DATA: /var/lib/grafana/data
      # GF_PATHS_LOGS: /var/log/grafana
      # GF_PATHS_PLUGINS: /var/lib/grafana/plugins
      # GF_PATHS_PROVISIONING: /etc/grafana/provisioning
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
      GF_SECURITY_COOKIE_SAMESITE: grafana
      GF_SERVER_ROOT_URL: https://grafana.cluster-1.${INGRESS_DOMAIN}

      GF_EXPLORE_ENABLED: true
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_LOG_FILTERS: rendering:debug
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_DATE_FORMATS_FULL_DATE: "MMM Do, YYYY hh:mm:ss a"
      GF_SECURITY_ALLOW_EMBEDDING: true
      # Variables for Authentik Login
      GF_AUTH_GENERIC_OAUTH_ENABLED: "false"
      GF_AUTH_GENERIC_OAUTH_CLIENT_ID: ${AUTHENTIK_GRAFANA_CLIENT_ID}
      GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: ${AUTHENTIK_GRAFANA_CLIENT_SECRET}
      GF_AUTH_GENERIC_OAUTH_SCOPES: 'openid profile email'
      GF_AUTH_GENERIC_OAUTH_AUTH_URL: "https://auth.${INGRESS_DOMAIN}/application/o/authorize/"
      GF_AUTH_GENERIC_OAUTH_TOKEN_URL: "https://auth.${INGRESS_DOMAIN}/application/o/token/"
      GF_AUTH_GENERIC_OAUTH_API_URL: "https://auth.${INGRESS_DOMAIN}/application/o/userinfo/"

    admin:
      existingSecret: grafana-secrets
      userKey: adminUser
      passwordKey: adminPass

    grafana.ini:
      server:
        root_url: "https://grafana.${CLUSTER_NAME}.${INGRESS_DOMAIN}"
      paths:
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      analytics:
        check_for_updates: false
      log:
        mode: console
      grafana_net:
        url: https://grafana.net
      auth.ldap:
        enabled: true
        allow_sign_up: true
        config_file: /etc/grafana/ldap.toml
      auth:
        signout_redirect_url: "https://grafana.${CLUSTER_NAME}.${INGRESS_DOMAIN}/"
        oauth_auto_login: false
      auth.generic_oauth:
        enabled: false
      auth.basic:
        disable_login_form: false
      auth.anonymous:
        enabled: true
        org_name: HomeOps
        org_id: 1
        org_role: Viewer
    ldap:
      enabled: true
      existingSecret: grafana-secrets
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: "default"
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
          - name: "flux"
            orgId: 1
            folder: "flux"
            type: file
            updateIntervalSeconds: 10
            disableDeletion: false
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/flux
          # - name: "loki"
          #   orgId: 1
          #   folder: "loki"
          #   type: file
          #   updateIntervalSeconds: 10
          #   disableDeletion: false
          #   allowUiUpdates: true
          #   options:
          #     path: /var/lib/grafana/dashboards/loki
          - name: "media"
            orgId: 1
            folder: "media"
            type: file
            updateIntervalSeconds: 10
            disableDeletion: false
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/media
          - name: "networking"
            orgId: 1
            folder: "networking"
            type: file
            updateIntervalSeconds: 10
            disableDeletion: false
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/networking
          - name: "power"
            orgId: 1
            folder: "power"
            type: file
            updateIntervalSeconds: 10
            disableDeletion: false
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/power
          - name: "storage"
            orgId: 1
            folder: "storage"
            type: file
            updateIntervalSeconds: 10
            disableDeletion: false
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/storage
          - name: "thanos"
            orgId: 1
            folder: "thanos"
            type: file
            updateIntervalSeconds: 10
            disableDeletion: false
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/thanos
          - name: "kubernetes"
            orgId: 1
            folder: "kubernetes"
            type: file
            updateIntervalSeconds: 10
            disableDeletion: false
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/kubernetes

    datasources:
      datasources.yaml:
        apiVersion: 1
        # list of datasources that should be deleted from the database
        deleteDatasources:
          - name: Loki
            orgId: 1
          - name: Alertmanager
            orgId: 1
        datasources:
          - name: Prometheus
            uid: prometheus
            type: prometheus
            access: proxy
            url: http://prometheus-operated:9090/
            isDefault: true
          - name: InfluxDB
            uid: influxdb
            type: influxdb
            access: proxy
            url: http://influxdb-influxdb2:80
            jsonData:
              version: Flux
              organization: homelab
              defaultBucket: monitoring
              tlsSkipVerify: true
            secureJsonData:
              token: ${INFLUXDB_ADMIN_TOKEN}
          - name: Loki
            uid: loki
            type: loki
            access: proxy
            url: http://loki-gateway:80
          - name: Alertmanager
            uid: alertmanager
            type: alertmanager
            access: proxy
            url: http://kube-prometheus-stack-alertmanager:9093
            jsonData:
              implementation: prometheus

    dashboards:
      default:
        node-exporter-full:
          url: https://grafana.com/api/dashboards/1860/revisions/22/download
          datasource: Prometheus
        cert-manager:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/10347
        pve-exporter:
          gnetId: 10347
          revision: 3
          datasource: Prometheus
        # https://grafana.com/grafana/dashboards/11074
        vyos:
          url: https://raw.githubusercontent.com/dcplaya/home-ops/main/k8s/clusters/cluster-1/manifests/system-monitoring/grafana/vyos_dashboard.json
          datasource: Prometheus
          # gnetId: 11074
          # revision: 9
          # datasource: Prometheus

      flux:
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/control-plane.json
          datasource: Prometheus
        flux-logs:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/logs.json
          datasource: Loki

      storage:
        # Ref: https://grafana.com/grafana/dashboards/2842
        ceph-cluster:
          gnetId: 2842
          revision: 16
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/5336
        ceph-osd:
          gnetId: 5336
          revision: 9
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/5342
        ceph-pools:
          gnetId: 5342
          revision: 9
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/7845
        zfs:
          gnetId: 7845
          revision: 4
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/7845
        netdata:
          gnetId: 7107
          revision: 1
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/15356
        proxmox:
          gnetId: 15356
          revision: 13
          datasource: InfluxDB

      media:
        radarr:
          url: https://raw.githubusercontent.com/k8s-at-home/grafana-dashboards/main/radarr.json
          datasource: Prometheus
        sonarr:
          url: https://raw.githubusercontent.com/k8s-at-home/grafana-dashboards/main/sonarr.json
          datasource: Prometheus

      networking:
        blackbox:
          url: https://raw.githubusercontent.com/jr0dd/grafana-dashboards/main/blackbox.json
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/15513
        cert-manager:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
          datasource: Prometheus
        # cilium-agent:
        #   gnetId: 15513
        #   revision: 1
        #   datasource: Prometheus
        # # Ref: https://grafana.com/grafana/dashboards/15514
        # cilium-operator:
        #   gnetId: 15514
        #   revision: 1
        #   datasource: Prometheus
        # # Ref: https://grafana.com/grafana/dashboards/15515
        # cilium-hubble:
        #   gnetId: 15515
        #   revision: 1
        #   datasource: Prometheus
        # # Ref: https://grafana.com/grafana/dashboards/11315
        # unifi-client-insights:
        #   gnetId: 11315
        #   revision: 8
        #   datasource: Prometheus
        # # Ref: https://grafana.com/grafana/dashboards/11311
        # unifi-network-sites:
        #   gnetId: 11311
        #   revision: 4
        #   datasource: Prometheus
        # # Ref: https://grafana.com/grafana/dashboards/11314
        # unifi-uap-insights:
        #   gnetId: 11314
        #   revision: 9
        #   datasource: Prometheus
        # # Ref: https://grafana.com/grafana/dashboards/11312
        # unifi-usw-insights:
        #   gnetId: 11312
        #   revision: 8
        #   datasource: Prometheus
        # # Ref: https://grafana.com/grafana/dashboards/13665
        # speedtest:
        #   gnetId: 13665
        #   revision: 4
        #   datasource: Prometheus

      kubernetes:
        kubernetes-api-server:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-api-server.json
          datasource: Prometheus
        kubernetes-coredns:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-coredns.json
          datasource: Prometheus
        kubernetes-global:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-global.json
          datasource: Prometheus
        kubernetes-namespaces:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-namespaces.json
          datasource: Prometheus
        kubernetes-nodes:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-nodes.json
          datasource: Prometheus
        kubernetes-pods:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-pods.json
          datasource: Prometheus

#       thanos:
#         bucket-replicate:
#           url: https://raw.githubusercontent.com/thanos-io/thanos/main/examples/dashboards/bucket-replicate.json
#           datasource: Prometheus
#         compact:
#           url: https://raw.githubusercontent.com/thanos-io/thanos/main/examples/dashboards/compact.json
#           datasource: Prometheus
#         overview:
#           url: https://raw.githubusercontent.com/thanos-io/thanos/main/examples/dashboards/overview.json
#           datasource: Prometheus
#         query:
#           url: https://raw.githubusercontent.com/thanos-io/thanos/main/examples/dashboards/query.json
#           datasource: Prometheus
#         query-frontend:
#           url: https://raw.githubusercontent.com/thanos-io/thanos/main/examples/dashboards/query-frontend.json
#           datasource: Prometheus
#         receive:
#           url: https://raw.githubusercontent.com/thanos-io/thanos/main/examples/dashboards/receive.json
#           datasource: Prometheus
#         rule:
#           url: https://raw.githubusercontent.com/thanos-io/thanos/main/examples/dashboards/rule.json
#           datasource: Prometheus
#         sidecar:
#           url: https://raw.githubusercontent.com/thanos-io/thanos/main/examples/dashboards/sidecar.json
#           datasource: Prometheus
#         store:
#           url: https://raw.githubusercontent.com/thanos-io/thanos/main/examples/dashboards/store.json
#           datasource: Prometheus

    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
        # folderAnnotation: grafana_folder
        # provider:
        #   allowUiUpdates: true
        #   disableDelete: false
      datasources:
        enabled: true
        searchNamespace: ALL

    imageRenderer:
      enabled: true

    plugins:
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - vonage-status-panel
      - grafana-piechart-panel
      - grafana-polystat-panel
      - grafana-worldmap-panel
      - grafana-clock-panel
      - grafana-singlestat-panel
      - mxswat-separator-panel
      - farski-blendstat-panel
      - speakyourcode-button-panel
      - snuids-trafficlights-panel

    serviceMonitor:
      enabled: true

    ingress:
      enabled: true
      ingressClassName: "traefik"
      annotations:
        # kubernetes.io/ingress.class: traefik
        cert-manager.io/cluster-issuer: letsencrypt-production
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.middlewares: network-chain-external@kubernetescrd
        external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
        external-dns.alpha.kubernetes.io/target: ingress.${INGRESS_DOMAIN}
        external-dns/is-public: "true"
      hosts:
        - "grafana.${CLUSTER_NAME}.${INGRESS_DOMAIN}"
      tls:
        - secretName: grafana-${CLUSTER_NAME}-tls
          hosts:
            - "grafana.${CLUSTER_NAME}.${INGRESS_DOMAIN}"

    service:
      annotations:
        # Needed due to multiple replicas to allow me to login
        traefik.ingress.kubernetes.io/service.sticky.cookie: "true"
        traefik.ingress.kubernetes.io/service.sticky.cookie.name: grafana
        traefik.ingress.kubernetes.io/service.sticky.cookie.secure: "true"

    persistence:
      enabled: false

    podAnnotations:
      configmap.reloader.stakater.com/reload: "grafana"

    # Prevents replicas from running all on the same nodes
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - grafana
              topologyKey: kubernetes.io/hostname
