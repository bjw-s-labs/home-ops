---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: loki
  namespace: system-monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: loki
      version: 5.23.1
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    loki:
      structuredConfig:
        auth_enabled: false
        server:
          log_level: info
          http_listen_port: 3100
          grpc_listen_port: 9095
          grpc_server_max_recv_msg_size: 8388608
          grpc_server_max_send_msg_size: 8388608
        memberlist:
          join_members: ["loki-memberlist"]
        limits_config:
          retention_period: 14d
          enforce_metric_name: false
          reject_old_samples_max_age: 168h
          max_cache_freshness_per_query: 10m
          split_queries_by_interval: 15m
          per_stream_rate_limit: 64M
          per_stream_rate_limit_burst: 128M
          ingestion_rate_mb: 64
          ingestion_burst_size_mb: 1000
          shard_streams:
            enabled: true
        schema_config:
          configs:
            - from: "2021-08-01"
              store: boltdb-shipper
              object_store: s3
              schema: v11
              index:
                prefix: loki_index_
                period: 24h
        common:
          path_prefix: /var/loki
          replication_factor: 3
          storage:
            s3:
              s3: null
              insecure: true
              s3forcepathstyle: true
          ring:
            kvstore:
              store: memberlist
        ruler:
          enable_api: true
          enable_alertmanager_v2: true
          alertmanager_url: http://kube-prometheus-stack-alertmanager:9093
          storage:
            type: local
            local:
              directory: /rules
          rule_path: /tmp/scratch
          ring:
            kvstore:
              store: memberlist
        distributor:
          ring:
            kvstore:
              store: memberlist
        compactor:
          working_directory: /var/loki/boltdb-shipper-compactor
          shared_store: s3
          compaction_interval: 10m
          retention_enabled: true
          retention_delete_delay: 2h
          retention_delete_worker_count: 150
        ingester:
          max_chunk_age: 1h
          lifecycler:
            ring:
              kvstore:
                store: memberlist
        analytics:
          reporting_enabled: false
    gateway:
      replicas: 3
      # TODO: https://github.com/grafana/loki/pull/8187
      ingress:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          external-dns/is-public: "true"
          # external-dns.alpha.kubernetes.io/target: ingress.${INGRESS_DOMAIN}
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: network-chain-external@kubernetescrd
        hosts:
          - host: &host "loki.${CLUSTER_NAME}.${INGRESS_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - secretName: tls.loki
            hosts:
              - *host
    read:
      replicas: 3
      persistence:
        storageClass: ceph-block-external
      extraVolumeMounts:
        - name: rules
          mountPath: /rules
      extraVolumes:
        - name: rules
          emptyDir: {}
    write:
      replicas: 3
      persistence:
        storageClass: ceph-block-external
    backend:
      replicas: 3
      persistence:
        storageClass: ceph-block-external
      extraVolumeMounts:
        - name: rules
          mountPath: /rules/fake
        - name: scratch
          mountPath: /tmp/scratch
      extraVolumes:
        - name: rules
          configMap:
            name: loki-alerting-rules
        - name: scratch
          emptyDir: {}
    monitoring:
      serviceMonitor:
        enabled: false
        metricsInstance:
          enabled: false
      selfMonitoring:
        enabled: false
        grafanaAgent:
          installOperator: false
      lokiCanary:
        enabled: false
    test:
      enabled: false
  valuesFrom:
    - kind: Secret
      name: loki-secret
      valuesKey: S3_BUCKET_NAME
      targetPath: loki.structuredConfig.common.storage.s3.bucketnames
    - kind: Secret
      name: loki-secret
      valuesKey: S3_BUCKET_HOST
      targetPath: loki.structuredConfig.common.storage.s3.endpoint
    - kind: Secret
      name: loki-secret
      valuesKey: REGION
      targetPath: loki.structuredConfig.common.storage.s3.region
    - kind: Secret
      name: loki-secret
      valuesKey: S3_ACCESS_KEY
      targetPath: loki.structuredConfig.common.storage.s3.access_key_id
    - kind: Secret
      name: loki-secret
      valuesKey: S3_SECRET_KEY
      targetPath: loki.structuredConfig.common.storage.s3.secret_access_key