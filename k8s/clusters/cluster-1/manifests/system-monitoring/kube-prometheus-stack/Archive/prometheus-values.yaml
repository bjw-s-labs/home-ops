---
prometheus:
  ingress:
    enabled: true
    pathType: Prefix
    annotations:
      kubernetes.io/ingress.class: traefik
      cert-manager.io/cluster-issuer: letsencrypt-production
      external-dns.alpha.kubernetes.io/target: ipv4.${INGRESS_DOMAIN}
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.middlewares: network-chain-external@kubernetescrd
    hosts:
      - &host-prometheus prometheus.${CLUSTER_NAME}.${INGRESS_DOMAIN}
    tls:
      - secretName: prometheus-${CLUSTER_NAME}-tls
        hosts:
          - *host-prometheus

  thanosService:
    enabled: true
  thanosServiceMonitor:
    enabled: true
  thanosIngress:
    enabled: true
    pathType: Prefix
    ingressClassName: "traefik"
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-production
      external-dns.alpha.kubernetes.io/target: ipv4.${INGRESS_DOMAIN}
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.middlewares: network-chain-external@kubernetescrd
    hosts:
      - &host "thanos-sidecar.${CLUSTER_NAME}.${INGRESS_DOMAIN}"
    tls:
      - hosts:
          - *host

  prometheusSpec:
    replicas: 3
    replicaExternalLabelName: "__replica__"
    externalLabels:
      cluster: ${CLUSTER_NAME}
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false
    retention: 6h
    retentionSize: 7GB
    enableAdminAPI: true
    walCompression: true
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: ceph-block-external
          resources:
            requests:
              storage: 10Gi
    resources:
      requests:
        memory: 3072Mi
      limits:
        memory: 4096Mi

    thanos:
      image: quay.io/thanos/thanos:v0.28.0
      # renovate: datasource=docker depName=quay.io/thanos/thanos
      version: "v0.28.0"
      objectStorageConfig:
        name: thanos-objstore-secret
        key: objstore.yml

    additionalScrapeConfigs:
        - job_name: coredns
          scrape_interval: 1m
          scrape_timeout: 10s
          honor_timestamps: true
          static_configs:
            - targets:
                - "vyos.${INGRESS_DOMAIN}:9153"
        - job_name: node-exporter
          scrape_interval: 1m
          scrape_timeout: 10s
          honor_timestamps: true
          static_configs:
            - targets:
                - "nas00.${INGRESS_DOMAIN}:9100"
                - "pve.server.${INGRESS_DOMAIN}:9100"
        - job_name: "netdata-scrape"
          metrics_path: "/api/v1/allmetrics"
          params:
            format: [prometheus_all_hosts]
          honor_labels: true
          static_configs:
            - targets:
                - nas00.${INGRESS_DOMAIN}:19999