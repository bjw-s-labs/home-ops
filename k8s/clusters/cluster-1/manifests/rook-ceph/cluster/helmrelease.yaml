---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
  namespace: rook-ceph
spec:
  interval: 5m
  chart:
    spec:
      chart: rook-ceph-cluster
      version: v1.11.8
      sourceRef:
        kind: HelmRepository
        name: rook-ceph-charts
        namespace: flux-system
  values:
    toolbox:
      enabled: false

    monitoring:
      enabled: true

    # Times are in UTC
    configOverride: |
      [global]
      bdev_enable_discard = true
      bdev_async_discard = true

    cephClusterSpec:
      cephVersion:
        image: quay.io/ceph/ceph:v17.2.6
      healthCheck:
        livenessProbe:
          mon:
            probe:
              timeoutSeconds: 5
          mgr:
            probe:
              timeoutSeconds: 5
          osd:
            probe:
              timeoutSeconds: 5

        startupProbe:
          mon:
            probe:
              timeoutSeconds: 5
          mgr:
            probe:
              timeoutSeconds: 5
          osd:
            probe:
              timeoutSeconds: 5

      mgr:
        count: 2

      dashboard:
        enabled: true
        urlPrefix: /

      resources:
        mgr:
          limits:
            cpu: "2000m"
            memory: "2Gi"
          requests:
            cpu: "500m"
            memory: "512Mi"
        mon:
          limits:
            cpu: "2000m"
            memory: "2Gi"
          requests:
            cpu: "1000m"
            memory: "1Gi"
        osd:
          limits:
            cpu: "2000m"
            memory: "5Gi"
          requests:
            cpu: "1000m"
            memory: "4Gi"
        prepareosd:
          limits:
            cpu: "2000m"
            memory: "7000Mi"
          requests:
            cpu: "500m"
            memory: "1000Mi"
        mgr-sidecar:
          limits:
            cpu: "500m"
            memory: "100Mi"
          requests:
            cpu: "100m"
            memory: "40Mi"
        crashcollector:
          limits:
            cpu: "500m"
            memory: "60Mi"
          requests:
            cpu: "100m"
            memory: "60Mi"
        logcollector:
          limits:
            cpu: "500m"
            memory: "1Gi"
          requests:
            cpu: "100m"
            memory: "100Mi"
        cleanup:
          limits:
            cpu: "500m"
            memory: "1Gi"
          requests:
            cpu: "500m"
            memory: "100Mi"

      storage:
        useAllNodes: false
        useAllDevices: false
        config:
          osdsPerDevice: "1"
        nodes:
          - name: "work1"
            devices:
              - name: "/dev/disk/by-id/scsi-0QEMU_QEMU_HARDDISK_drive-scsi1"
          - name: "work2"
            devices:
              - name: "/dev/disk/by-id/scsi-0QEMU_QEMU_HARDDISK_drive-scsi1"
          - name: "work3"
            devices:
              - name: "/dev/disk/by-id/scsi-0QEMU_QEMU_HARDDISK_drive-scsi1"
          - name: "work4"
            devices:
              - name: "/dev/disk/by-id/scsi-0QEMU_QEMU_HARDDISK_drive-scsi1"

    ingress:
      dashboard:
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          # external-dns.alpha.kubernetes.io/target: ingress.${INGRESS_DOMAIN}
          external-dns/is-public: "true"
          # external-dns.alpha.kubernetes.io/target: ${CLOUDFLARE_TUNNEL_ID}.cfargotunnel.com
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: network-chain-external@kubernetescrd
        host:
          name: "rook.${CLUSTER_NAME}.${INGRESS_DOMAIN}"
          path: "/"
        tls:
          - secretName: tls.rook-ceph
            hosts:
              - "rook.${CLUSTER_NAME}.${INGRESS_DOMAIN}"

    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 3
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: false
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          mountOptions:
            - discard
          parameters:
            imageFormat: "2"
            imageFeatures: layering
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4

    cephFileSystems:
      - name: ceph-filesystem
        spec:
          metadataPool:
            replicated:
              size: 3
          dataPools:
            - failureDomain: host
              replicated:
                size: 3
          metadataServer:
            activeCount: 3
            activeStandby: true
        storageClass:
          enabled: true
          isDefault: false
          name: ceph-filesystem
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          mountOptions:
            - discard
          parameters:
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4

    cephObjectStores:
      - name: ceph-objectstore
        spec:
          metadataPool:
            failureDomain: host
            replicated:
              size: 3
          dataPool:
            failureDomain: host
            erasureCoded:
              dataChunks: 2
              codingChunks: 1
          preservePoolsOnDelete: true
          gateway:
            port: 80
            # resources:
            #   requests:
            #     cpu: 1000m
            #     memory: 1Gi
            #   limits:
            #     memory: 2Gi
            instances: 1
          healthCheck:
            bucket:
              interval: 60s
        storageClass:
          enabled: true
          name: ceph-bucket
          reclaimPolicy: Delete
          parameters:
            region: us-east-1
