---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app hyperhdr
  namespace: home-automation
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 0.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    global:
      nameOverride: *app
    fullnameOverride: *app
    image:
      repository:  ghcr.io/dcplaya/hyperhdr
      tag: "v18.0.0.0"

    podSecurityContext:
      runAsUser: 568
      runAsGroup: 100
      fsGroup: 568
      supplementalGroups:
        - 34
        - 100
      fsGroupChangePolicy: "OnRootMismatch"

    env:
      TZ: "${TIMEZONE}"

    service:
      main:
        type: LoadBalancer
        annotations:
          traefik.ingress.kubernetes.io/service.serversscheme: https
        loadBalancerIP: ${LB_HYPERHDR}
        ports:
          http:
            port: 8090
          jsonserver:
            port: 19444
          protocolbuffer:
            port: 19445

    probes:
      liveness:
        enabled: false
        custom: true
        ## The spec field contains the values for the default livenessProbe.
        ## If you selected custom: true, this field holds the definition of the livenessProbe.
        spec:
          exec:
            command:
              - /usr/bin/env
              - bash
              - -c
              - username=`grep -B 1 'username:' /config/config.yml | tail -n1 | awk '{ print $2}'` &&
                password=`grep -B 1 'password:' /config/config.yml | tail -n1 | awk '{ print $2}'` &&
                curl --fail $username:$password@localhost:3030/triggers/manual
          failureThreshold: 5
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10

    persistence:
      config:
        enabled: true
        existingClaim: hyperhdr-config-v1

    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: network-chain-external@kubernetescrd
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
          external-dns.alpha.kubernetes.io/target: ipv4.${INGRESS_DOMAIN}
          external-dns/is-public: "false"
          # external-dns.alpha.kubernetes.io/target: ${CLOUDFLARE_TUNNEL_ID}.cfargotunnel.com
          # external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
        hosts:
          - host: &host-cluster "hyperhdr.${CLUSTER_NAME}.${INGRESS_DOMAIN}"
            paths:
              - path: /
          - host: &host "hyperhdr.${INGRESS_DOMAIN}"
            paths:
              - path: /
        tls:
          - secretName: tls.hyperhdr
            hosts:
              - *host-cluster
              - *host

    resources:
      requests:
        memory: "1024M"
      limits:
        memory: "6000Mi"
