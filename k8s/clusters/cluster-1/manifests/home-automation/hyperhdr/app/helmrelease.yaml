---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app hyperhdr
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 3.0.4
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 15m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: uninstall
  uninstall:
    keepHistory: false
  values:
    global:
      nameOverride: *app
      fullnameOverride: *app

    controllers:
      hyperhdr:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          annotations:
            # k8s.v1.cni.cncf.io/networks: home-automation-iot-dhcp
            k8s.v1.cni.cncf.io/networks: |
              [{
                "name":"multus-iot",
                "namespace": "network",
                "ips": ["10.10.100.13/24"]
              }]
          # securityContext:
          #   runAsUser: ${APP_UID}
          #   runAsGroup: ${APP_GID}
          #   runAsNonRoot: false               # Must be run as root user or it fails to start
          #   fsGroup: ${APP_GID}
          #   fsGroupChangePolicy: "OnRootMismatch"
          #   supplementalGroups:
          #     - 34

        containers:
          app:
            image:
              repository: nocturno/hyper-hdr
              tag: "19.0.0.0"
              pullPolicy: IfNotPresent
            env:
              TZ: "${TIMEZONE}"
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            resources:
              requests:
                memory: "1024M"
              limits:
                memory: "6000M"

    service:
      app:
        controller: *app
        type: LoadBalancer
        annotations:
          traefik.ingress.kubernetes.io/service.serversscheme: https
          io.cilium/lb-ipam-ips: "${LB_HYPERHDR}"
        ports:
          http:
            port: 8090
          jsonserver:
            port: 19444
          protocolbuffer:
            port: 19445

    persistence:
      config:
        enabled: true
        existingClaim: ${VOLSYNC_CLAIM}

    ingress:
      app:
        enabled: true
        className: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: network-chain-external@kubernetescrd
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
          # external-dns.alpha.kubernetes.io/target: ingress.${INGRESS_DOMAIN}
          external-dns/is-public: "false"
          external-dns/powerdns: "true"
        hosts:
          - host: &host-cluster "hyperhdr.${CLUSTER_NAME}.${INGRESS_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
          - host: &host "hyperhdr.${INGRESS_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - secretName: tls.hyperhdr
            hosts:
              - *host-cluster
              - *host

