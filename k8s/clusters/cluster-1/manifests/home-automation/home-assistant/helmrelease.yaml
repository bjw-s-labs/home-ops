---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: home-assistant
  namespace: home-automation
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.3.2
      interval: 15m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  values:
    image:
      repository: ghcr.io/onedr0p/home-assistant
      tag: 2023.3.6@sha256:5f61d3fe876824d980c17f9a085a46b97ee838421abe50b43e4a8386292a35ad

    env:
      TZ: "${TIMEZONE}"
      HASS__INSTANCE_NAME: Home-Assistant
      HASS__PORT: &port 8123
      HASS__APPLICATION_URL: &host-cluster "home.${CLUSTER_NAME}.${INGRESS_DOMAIN}"
      HASS__LOG_LEVEL: info

    service:
      main:
        type: LoadBalancer
        loadBalancerIP: "${LB_HASS}"
        externalTrafficPolicy: Local
        ports:
          http:
            port: *port
          mdns-tcp:
            enabled: true
            port: 5353
            protocol: TCP
            targetPort: 5353
          mdns-udp:
            enabled: true
            port: 5353
            protocol: UDP
            targetPort: 5353

    nameOverride: "home-assistant"

    hostAliases:
      - ip: "10.200.1.50"
        hostnames:
          - "home.${INGRESS_DOMAIN}"

    podSecurityContext:
      runAsUser: 568
      runAsGroup: 100
      fsGroup: 568
      supplementalGroups:
        - 34
        - 100
        - 568
      fsGroupChangePolicy: "OnRootMismatch"

    podAnnotations:
      # k8s.v1.cni.cncf.io/networks: hass-iot-static,hass-iot-dhcp
      k8s.v1.cni.cncf.io/networks: hass-iot-static
      secret.reloader.stakater.com/reload: home-assistant-secrets

    probes:
      liveness:
        enabled: false
      readiness:
        enabled: false
      startup:
        enabled: false

    # dnsPolicy: ClusterFirstWithHostNet
    # dnsConfig:
    #   options:
    #     - name: ndots
    #       value: "1"

    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: network-chain-external@kubernetescrd
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
          external-dns.alpha.kubernetes.io/target: ipv4.${INGRESS_DOMAIN}
          external-dns/is-public: "true"
        hosts:
          - host: *host-cluster
            paths:
              - path: /
          - host: &host "home.${INGRESS_DOMAIN}"
            paths:
              - path: /
        tls:
          - secretName: tls.home-assistant-frontend
            hosts:
              - *host-cluster
              - *host

    envFrom:
      - secretRef:
          name: home-assistant-secrets

    persistence:
      config:
        enabled: true
        existingClaim: home-assistant-config
      backup:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${NAS_ADDRESS}"
            path: /Backups/Kubernetes/${CLUSTER_NAME}/Applications/home-assistant
        mountPath: /config/backups
        readOnly: false

    resources:
      requests:
        cpu: 75m
        memory: 512Mi
      limits:
        memory: 2000Mi

    # addons:
    #   codeserver:
    #     enabled: true
    #     image:
    #       repository: docker.io/codercom/code-server
    #       tag: 4.8.3
    #     env:
    #       TZ: "${TIMEZONE}"
    #     git:
    #       deployKeySecret: code-server
    #     workingDir: "/config"
    #     args:
    #       - --auth
    #       - "none"
    #       - --user-data-dir
    #       - "/config/.vscode"
    #       - --extensions-dir
    #       - "/config/.vscode"
    #     ingress:
    #       enabled: true
    #       ingressClassName: "traefik"
    #       annotations:
    #         cert-manager.io/cluster-issuer: letsencrypt-production
    #         traefik.ingress.kubernetes.io/router.entrypoints: websecure
    #         traefik.ingress.kubernetes.io/router.middlewares: "network-chain-global-auth@kubernetescrd"
    #         # traefik.ingress.kubernetes.io/router.middlewares: network-chain-external@kubernetescrd
    #         external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
    #         external-dns.alpha.kubernetes.io/target: ipv4.${INGRESS_DOMAIN}
    #         external-dns/is-public: "true"
    #       hosts:
    #         - host: &code-host-cluster "code.home.${CLUSTER_NAME}.${INGRESS_DOMAIN}"
    #           paths:
    #             - path: /
    #         - host: &code-host "code.home.${INGRESS_DOMAIN}"
    #           paths:
    #             - path: /
    #       tls:
    #         - secretName: tls.home-assistant-code
    #           hosts:
    #             - *code-host-cluster
    #             - *code-host
    #     volumeMounts:
    #       - name: config
    #         mountPath: /config
    #     resources:
    #       requests:
    #         cpu: 35m
    #         memory: 128Mi
    #       limits:
    #         memory: 512Mi

  # valuesFrom:
  #   - kind: Secret
  #     name: home-assistant
  #     valuesKey: postgresql_password
  #     targetPath: postgresql.postgresqlPassword
  #     optional: false
  #   - kind: Secret
  #     name: home-assistant
  #     valuesKey: postgresql_admin_password
  #     targetPath: postgresql.postgresqlPostgresPassword
  #     optional: false
