---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app frigate
  namespace: home-automation
spec:
  dependsOn:
    - name: emqx
      namespace: home-automation
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.6.0
      interval: 15m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    global:
      nameOverride: *app
      fullnameOverride: *app
    defaultPodOptions:
      nodeSelector:
        google.feature.node.kubernetes.io/coral: "true"

    controllers:
      main:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          #runAsUser: 1000
          #runAsGroup: 100
          fsGroup: 100
          supplementalGroups:
            - 1000
            - 100
          # - 568
          fsGroupChangePolicy: "OnRootMismatch"
          hostAliases:
            - ip: "10.200.1.50"
              hostnames:
                - "plex.${INGRESS_DOMAIN}"
                - "plex.${CLUSTER_NAME}.${INGRESS_DOMAIN}"

        containers:
          main:
            image:
              repository: ghcr.io/blakeblackshear/frigate
              tag: 0.13.0-rc1
              # tag: 0.12.1
              pullPolicy: IfNotPresent
            env:
              TZ: "${TIMEZONE}"
              FRIGATE__INSTANCE_NAME: Frigate
              FRIGATE__PORT: &port 5000
              FRIGATE__APPLICATION_URL: &host-cluster "frigate.${CLUSTER_NAME}.${INGRESS_DOMAIN}"
              FRIGATE__LOG_LEVEL: info
            envFrom:
              - secretRef:
                  name: frigate-secrets
            resources:
              requests:
                memory: 300Mi
                # gpu.intel.com/i915: 1
              limits:
                # gpu.intel.com/i915: 1
                memory: 1000Mi
            securityContext:
                  privileged: true
            annotations:
              configmap.reloader.stakater.com/reload: "frigate-config"
            # nodeSelector:
            #   google.feature.node.kubernetes.io/coral: "true"
            probes:
              liveness: &probe
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/version
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/version
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/version
                    port: *port
                  failureThreshold: 30
                  periodSeconds: 10

    service:
      main:
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: "${LB_FRIGATE}"
        ports:
          http:
            port: *port
          rtsp:
            enabled: "true"
            port: 8554
          api:
            enabled: "false"
            port: 1984
          srtp:
            enabled: "false"
            port: 8443
          webrtc:
            enabled: "false"
            port: 8555

    persistence:
      config:
        enabled: true
        type: configMap
        name: frigate-config
        advancedMounts:
          main:
            main:
              - path: /config/config.yml
                subPath: config.yaml
        readOnly: true
      data:
        enabled: true
        existingClaim: frigate-data
      data-new:
        enabled: true
        existingClaim: frigate-config-cluster-2
      media:
        enabled: true
        existingClaim: ceph-filesystem-security-home-automation
      usb:
        enabled: true
        type: hostPath
        hostPath: /dev/bus/usb
        hostPathType: Directory
        advancedMounts:
          main:
            main:
              - path: /dev/bus/usb
      cache:
        enabled: true
        type: emptyDir
        medium: Memory
        sizeLimit: 2Gi
        advancedMounts:
          main:
            main:
              - path: /dev/shm

    ingress:
      main:
        enabled: true
        className: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: network-chain-external@kubernetescrd
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
          # external-dns.alpha.kubernetes.io/target: ingress.${INGRESS_DOMAIN}
          external-dns/is-public: "false"
          external-dns/powerdns: "true"
        hosts:
          - host: &host "frigate.${INGRESS_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
          - host: *host-cluster
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - secretName: tls.frigate
            hosts:
              - *host
              - *host-cluster
