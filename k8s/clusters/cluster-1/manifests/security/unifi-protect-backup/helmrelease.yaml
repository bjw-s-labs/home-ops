---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: unifi-protect-backup
  namespace: security
spec:
  interval: 5m
  chart:
    spec:
      chart: radarr
      version: 16.0.1
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m

  values:
    fullnameOverride: unifi-protect-backup
    image:
      repository: ghcr.io/ep1cman/unifi-protect-backup
      tag: "0.7.0"

    # podSecurityContext:
    #   runAsUser: 568
    #   runAsGroup: 100
    #   fsGroup: 568
    #   supplementalGroups:
    #     - 34
    #     - 100
    #   fsGroupChangePolicy: "OnRootMismatch"

    env:
      TZ: "${TIMEZONE}"
      UFP_SSL_VERIFY: 'false'
      PORT: 443
      DETECTION_TYPES: 'motion,person,vehicle,ring'
      RCLONE_DESTINATION: 'security:/Unifi\ Protect'

    envFrom:
      - secretRef:
          name: unifi-protect-backup-secrets

    service:
      main:
        ports:
          http:
            port: 3030

    probes:
      liveness:
        enabled: false
        custom: true
        ## The spec field contains the values for the default livenessProbe.
        ## If you selected custom: true, this field holds the definition of the livenessProbe.
        spec:
          exec:
            command:
            - /usr/bin/env
            - bash
            - -c
            - username=`grep -B 1 'username:' /config/config.yml | tail -n1 | awk '{ print $2}'` && 
              password=`grep -B 1 'password:' /config/config.yml | tail -n1 | awk '{ print $2}'` && 
              curl --fail $username:$password@localhost:3030/triggers/manual
          failureThreshold: 5
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10

    persistence:
      config:
        enabled: false
        existingClaim: unifi-protect-backup-config
      rclone:
        enabled: true
        type: secret
        mountPath: /rclone
        readOnly: true

    ingress:
      main:
        enabled: false
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: network-rfc1918-ips@kubernetescrd
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
          external-dns.alpha.kubernetes.io/target: ipv4.${INGRESS_DOMAIN}
          external-dns/is-public: "false"
        hosts:
          - host: &host-cluster "ufp.${CLUSTER_NAME}.${INGRESS_DOMAIN}"
            paths:
              - path: /
          - host: &host "ufp.${INGRESS_DOMAIN}"
            paths:
              - path: /
        tls:
          - secretName: tls.unifi-protect-backup
            hosts:
              - *host-cluster
              - *host

    resources:
      requests:
        memory: "128M"
      limits:
        memory: "500Mi"
