---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app autoscan
  namespace: media
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 15m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    global:
      nameOverride: *app
      fullnameOverride: *app

    controllers:
      main:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          # securityContext:
          #   runAsUser: 568
          #   runAsGroup: 100
          #   fsGroup: 100
          #   supplementalGroups:
          #     - 34
          #     - 100
          #   fsGroupChangePolicy: "OnRootMismatch"
          hostAliases:
            - ip: "10.200.1.50"
              hostnames:
                - "plex.${INGRESS_DOMAIN}"
                - "plex.${CLUSTER_NAME}.${INGRESS_DOMAIN}"

        containers:
          main:
            image:
              repository: cloudb0x/autoscan
              tag: "1.4.0"
              pullPolicy: IfNotPresent
            env:
              TZ: "${TIMEZONE}"
            resources:
              requests:
                memory: "128M"
              limits:
                memory: "512G"
            probes:
              liveness:
                enabled: true
                custom: true
                ## The spec field contains the values for the default livenessProbe.
                ## If you selected custom: true, this field holds the definition of the livenessProbe.
                spec:
                  exec:
                    command:
                      - /usr/bin/env
                      - bash
                      - -c
                      - username=`grep -B 1 'username:' /config/config.yml | tail -n1 | awk '{ print $2}'` &&
                        password=`grep -B 1 'password:' /config/config.yml | tail -n1 | awk '{ print $2}'` &&
                        curl --fail $username:$password@localhost:3030/triggers/manual
                  failureThreshold: 5
                  initialDelaySeconds: 60
                  periodSeconds: 10
                  successThreshold: 1
                  timeoutSeconds: 10

    service:
      main:
        ports:
          http:
            port: 3030

    persistence:
      config:
        enabled: true
        existingClaim: autoscan-config
      configdata:
        enabled: false
        type: secret
        name: autoscan-secret
        defaultMode: 0550
        items:
          - key: config.yml
            path: config.yml
        advancedMounts:
          main:
            main:
              - path: /test/
        readOnly: true
      4kmovies:
        enabled: true
        existingClaim: cephfs-hdd-media-4kmovies
        advancedMounts:
          main:
            main:
              - path: /mnt/unionfs/Media/4KMovies/
        accessMode: ReadWriteMany
      4ktv:
        enabled: true
        existingClaim: cephfs-hdd-media-4ktv
        advancedMounts:
          main:
            main:
              - path: /mnt/unionfs/Media/4KTV/
        accessMode: ReadWriteMany
      music:
        enabled: true
        existingClaim: cephfs-hdd-media-music
        advancedMounts:
          main:
            main:
              - path: /mnt/unionfs/Media/Music/
        accessMode: ReadWriteMany
      movies:
        enabled: true
        existingClaim: cephfs-hdd-media-movies
        advancedMounts:
          main:
            main:
              - path: /mnt/unionfs/Media/Movies/
        accessMode: ReadWriteMany
      tvw:
        enabled: true
        existingClaim: cephfs-hdd-media-tv
        advancedMounts:
          main:
            main:
              - path: /mnt/unionfs/Media/TV
        accessMode: ReadWriteMany
      downloads:
        enabled: true
        existingClaim: cephfs-hdd-cache-media
        advancedMounts:
          main:
            main:
              - path: /mnt/unionfs/downloads
        accessMode: ReadWriteMany

    ingress:
      main:
        enabled: true
        className: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: network-chain-external@kubernetescrd
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
          external-dns.alpha.kubernetes.io/target: ingress.${INGRESS_DOMAIN}
          external-dns/is-public: "true"
          # external-dns.alpha.kubernetes.io/target: ${CLOUDFLARE_TUNNEL_ID}.cfargotunnel.com
          # external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
          external-dns/powerdns: "true"
        hosts:
          - host: &host-cluster "autoscan.${CLUSTER_NAME}.${INGRESS_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
          - host: &host "autoscan.${INGRESS_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - secretName: tls.autoscan
            hosts:
              - *host-cluster
              - *host
