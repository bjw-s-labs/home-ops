---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app plex-meta-manager
  namespace: media
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 1.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    global:
      nameOverride: *app
    fullnameOverride: plex-meta-manager
    image:
      repository: meisnate12/plex-meta-manager
      # tag: "v1.18.0"
      # pullPolicy: IfNotPresent
      tag: nightly
      pullPolicy: Always

    # podSecurityContext:
    #   runAsUser: 568
    #   runAsGroup: 100
    #   fsGroup: 568
    #   supplementalGroups:
    #     - 34
    #     - 100
    #   fsGroupChangePolicy: "OnRootMismatch"

    env:
      TZ: "${TIMEZONE}"
      PMM_CONFIG: /config/config.yml
      PMM_TIME: "06:00, 18:00"
      # Runs PMM immediately. Used to test
      PMM_RUN: true
      PMM_DEBUG: true
      PMM_READ_ONLY_CONFIG: true
      
#       PLEX_URL: http://plex.media:32400
#       PLEX_TOKEN: "${PLEX_TOKEN}"
# 
#       UPDATE_LEVEL: "show"
#       UPDATE_STRATEGY: "all"
#       TRIGGER_ON_PLAY: "true"
#       TRIGGER_ON_SCAN: "true"
#       TRIGGER_ON_ACTIVITY: "false"
#       REFRESH_LIBRARY_ON_SCAN: "true"
# 
#       SCHEDULER_ENABLE: "true"
#       SCHEDULER_SCHEDULE_TIME: "04:30"
# 
#       NOTIFICATIONS_ENABLE: "true"
#       # need to figure out how to do a list of env vars
#       # NOTIFICATIONS_APPRISE_CONFIGS
# 
#       DEBUG: "false"


    service:
      main:
        enabled: false
        ports:
          http:
            port: 3030
# 
#     hostAliases:
#       - ip: "10.200.1.50"
#         hostnames:
#           - "plex.${INGRESS_DOMAIN}"
#           - "plex.${CLUSTER_NAME}.${INGRESS_DOMAIN}"
# 
#     probes:
#       liveness:
#         enabled: false
#         custom: true
#         ## The spec field contains the values for the default livenessProbe.
#         ## If you selected custom: true, this field holds the definition of the livenessProbe.
#         spec:
#           exec:
#             command:
#               - /usr/bin/env
#               - bash
#               - -c
#               - username=`grep -B 1 'username:' /config/config.yml | tail -n1 | awk '{ print $2}'` &&
#                 password=`grep -B 1 'password:' /config/config.yml | tail -n1 | awk '{ print $2}'` &&
#                 curl --fail $username:$password@localhost:3030/triggers/manual
#           failureThreshold: 5
#           initialDelaySeconds: 60
#           periodSeconds: 10
#           successThreshold: 1
#           timeoutSeconds: 10

    persistence:
      config:
        enabled: true
        existingClaim: plex-meta-manager
      pmm-config:
        enabled: true
        type: configMap
        name: pmm-config
        subPath: config.yaml
        mountPath: /config/config.yml
        readOnly: false
      pmm-tv:
        enabled: true
        type: configMap
        name: pmm-tv
        subPath: tv.yaml
        mountPath: config/tv.yaml
        readOnly: false
      pmm-tv-overlay:
        enabled: true
        type: configMap
        name: pmm-tv-overlay
        subPath: tv_overlay.yaml
        mountPath: config/tv_overlay.yaml
        readOnly: false
      pmm-movies:
        enabled: true
        type: configMap
        name: pmm-movies
        subPath: movies.yaml
        mountPath: config/movies.yaml
        readOnly: false
      pmm-movies-overlay:
        enabled: true
        type: configMap
        name: pmm-movies-overlay
        subPath: movies_overlay.yaml
        mountPath: config/movies_overlay.yaml
        readOnly: false

    # resources:
    #   requests:
    #     cpu: 50m
    #     memory: "100M"
    #   limits:
    #     memory: "25G"
