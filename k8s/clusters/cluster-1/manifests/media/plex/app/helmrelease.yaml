---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: plex
  namespace: media
  labels:
    k10.kasten.io/filter: "plex"
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 15m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"
    image:
      # repository: plexinc/pms-docker
      # tag: plexpass
      repository: ghcr.io/onedr0p/plex-beta
      tag: 1.32.6.7371-b6a09ad81

    podSecurityContext:
      runAsUser: 568
      runAsGroup: 100
      fsGroup: 100
      supplementalGroups:
        - 34 # backup
        - 44 # videro
        - 109 # render
        - 100 # users
        - 1000
      fsGroupChangePolicy: "OnRootMismatch"

    env:
      TZ: "${TIMEZONE}"
      # PUID: "1000"
      # PGID: "100"
      ADVERTISE_IP: "https://plex.${CLUSTER_NAME}.${INGRESS_DOMAIN}:443,https://plex.${INGRESS_DOMAIN}:443,https://${LB_PLEX}:32400"
      # PLEX_PREFERENCE_1: "FriendlyName=plex-kubernetes"
      # PLEX_PREFERENCE_2: "EnableIPv6=0"
      # PLEX_PREFERENCE_3: "logDebug=0"
      # PLEX_PREFERENCE_4: "DisableTLSv1_0=1"
      # PLEX_PREFERENCE_5: "LanNetworksBandwidth=xxx.xxx.xxx.0/18\,xxx.xxx.xxx.0/24\,xxx.xxx.xxx.0/24"
      # PLEX_PREFERENCE_6: "TranscoderQuality=2"
      # PLEX_PREFERENCE_7: "TreatWanIpAsLocal=0"
      # PLEX_PREFERENCE_8: "TranscoderH264BackgroundPreset=fast"

    service:
      main:
        type: LoadBalancer
        annotations:
          traefik.ingress.kubernetes.io/service.serversscheme: https
          io.cilium/lb-ipam-ips: ${LB_PLEX}
        # loadBalancerIP: ${LB_PLEX}
        ports:
          http:
            port: 32400
        #   ssh:
        #     enabled: true
        #     port: 22
        #     protocol: TCP
        #     targetPort: 22
        externalTrafficPolicy: Cluster
      webtools:
        enabled: true
        type: NodePort
        ports:
          webtools:
            enabled: true
            port: 33400
            protocol: TCP
            targetPort: 33400
        externalTrafficPolicy: Cluster

    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          external-dns/is-public: "true"
          external-dns.alpha.kubernetes.io/target: ipv4.${INGRESS_DOMAIN}
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: network-chain-external@kubernetescrd
        hosts:
          - host: &host "plex.${INGRESS_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
          - host: &host-cluster "plex.${CLUSTER_NAME}.${INGRESS_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
          - host: &cheesee "cheesee.${INGRESS_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - secretName: tls.plex
            hosts:
              - *host
              - *host-cluster
              - *cheesee

    persistence:
      config:
        enabled: true
        existingClaim: plex-config-nvme
      transcode:
        enabled: true
        type: emptyDir
        # medium: Memory
      backup:
        enabled: true
        existingClaim: cephfs-hdd-backups-media
        subPath: ./Kubernetes/${CLUSTER_NAME}/Applications/plex
        mountPath: /config/Backups
      nfs-nas-media:
        enabled: false
        existingClaim: media-nfs-share-pvc
        mountPath: /mnt/unionfs
        readOnly: false
      # New mount location. Remove "-new" from the paths & names and disable nfs-nas-media above to switch
      4kmovies:
        enabled: true
        existingClaim: cephfs-hdd-media-4kmovies
        mountPath: /mnt/unionfs/Media/4KMovies/
        accessMode: ReadWriteMany
      4ktv:
        enabled: true
        existingClaim: cephfs-hdd-media-4ktv
        mountPath: /mnt/unionfs/Media/4KTV/
        accessMode: ReadWriteMany
      music:
        enabled: true
        existingClaim: cephfs-hdd-media-music
        mountPath: /mnt/unionfs/Media/Music/
        accessMode: ReadWriteMany
      movies:
        enabled: true
        existingClaim: cephfs-hdd-media-movies
        mountPath: /mnt/unionfs/Media/Movies/
        accessMode: ReadWriteMany
      tv-new:
        enabled: true
        type: nfs
        server: nas00.${INGRESS_DOMAIN}
        path: /mnt/NFS/Merged-Media/Media/TV/
        mountPath: /mnt/unionfs/Media/TV

    addons:
      promtail:
        enabled: true
        image:
          repository: grafana/promtail
          tag: 2.8.4
        loki: http://loki.system-monitoring.svc.cluster.local:3100/loki/api/v1/push
        logs:
          - name: promtail/plex
            path: "/config/Library/Application Support/Plex Media Server/Logs/*.log"
          - name: promtail/plex/plugins
            path: "/config/Library/Application Support/Plex Media Server/Logs/PMS Plugin Logs/*.log"
        volumeMounts:
          - name: config
            mountPath: /config
            readOnly: true
        securityContext:
          runAsUser: 568

    resources:
      requests:
        # cpu: 35m
        memory: 24Gi
        # gpu.intel.com/i915: 1
        # nvidia.com/gpu: 1
      limits:
        # gpu.intel.com/i915: 1
        # nvidia.com/gpu: 1
        memory: 32Gi

    # affinity:
    #   nodeAffinity:
    #     requiredDuringSchedulingIgnoredDuringExecution:
    #       nodeSelectorTerms:
            # - matchExpressions:
            #     - key: feature.node.kubernetes.io/custom-intel-gpu
            #       operator: In
            #       values:
            #         - "true"

    probes:
      # -- Liveness probe configuration
      # @default -- See below
      liveness:
        # -- Enable the liveness probe
        enabled: true
        # -- Set this to `true` if you wish to specify your own livenessProbe
        custom: false
        # -- The spec field contains the values for the default livenessProbe.
        # If you selected `custom: true`, this field holds the definition of the livenessProbe.
        # @default -- See below
        spec:
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3

      # -- Redainess probe configuration
      # @default -- See below
      readiness:
        # -- Enable the readiness probe
        enabled: true
        # -- Set this to `true` if you wish to specify your own readinessProbe
        custom: false
        # -- The spec field contains the values for the default readinessProbe.
        # If you selected `custom: true`, this field holds the definition of the readinessProbe.
        # @default -- See below
        spec:
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3

      # -- Startup probe configuration
      # @default -- See below
      startup:
        # -- Enable the startup probe
        enabled: false
        # -- Set this to `true` if you wish to specify your own startupProbe
        custom: false
        # -- The spec field contains the values for the default startupProbe.
        # If you selected `custom: true`, this field holds the definition of the startupProbe.
        # @default -- See below
        spec:
          initialDelaySeconds: 0
          timeoutSeconds: 1
          ## This means it has a maximum of 5*30=150 seconds to start up before it fails
          periodSeconds: 5
          failureThreshold: 30
