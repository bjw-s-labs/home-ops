---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: plex
  namespace: media
  labels:
    k10.kasten.io/filter: "plex"
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 15m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"
    image:
      # repository: plexinc/pms-docker
      # tag: plexpass
      repository: ghcr.io/onedr0p/plex-beta
      tag: 1.32.5.7328-2632c9d3a

    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      supplementalGroups:
        - 34 # backup
        - 44 # videro
        - 109 # render
        - 100 # users
        - 1000
      fsGroupChangePolicy: "OnRootMismatch"

    env:
      TZ: "${TIMEZONE}"
      # PUID: "1000"
      # PGID: "100"
      ADVERTISE_IP: "https://plex.${CLUSTER_NAME}.${INGRESS_DOMAIN}:443,https://plex.${INGRESS_DOMAIN}:443,https://${LB_PLEX}:32400"
      # PLEX_PREFERENCE_1: "FriendlyName=plex-kubernetes"
      # PLEX_PREFERENCE_2: "EnableIPv6=0"
      # PLEX_PREFERENCE_3: "logDebug=0"
      # PLEX_PREFERENCE_4: "DisableTLSv1_0=1"
      # PLEX_PREFERENCE_5: "LanNetworksBandwidth=xxx.xxx.xxx.0/18\,xxx.xxx.xxx.0/24\,xxx.xxx.xxx.0/24"
      # PLEX_PREFERENCE_6: "TranscoderQuality=2"
      # PLEX_PREFERENCE_7: "TreatWanIpAsLocal=0"
      # PLEX_PREFERENCE_8: "TranscoderH264BackgroundPreset=fast"

    service:
      main:
        type: LoadBalancer
        annotations:
          traefik.ingress.kubernetes.io/service.serversscheme: https
          io.cilium/lb-ipam-ips: ${LB_PLEX}
        # loadBalancerIP: ${LB_PLEX}
        ports:
          http:
            port: 32400
        #   ssh:
        #     enabled: true
        #     port: 22
        #     protocol: TCP
        #     targetPort: 22
        externalTrafficPolicy: Cluster
      webtools:
        enabled: true
        type: NodePort
        ports:
          webtools:
            enabled: true
            port: 33400
            protocol: TCP
            targetPort: 33400
        externalTrafficPolicy: Cluster

    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          external-dns/is-public: "true"
          external-dns.alpha.kubernetes.io/target: ipv4.${INGRESS_DOMAIN}
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: network-chain-external@kubernetescrd
        hosts:
          - host: &host "plex.${INGRESS_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
          - host: &host-cluster "plex.${CLUSTER_NAME}.${INGRESS_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
          - host: &foo "foo.${CLUSTER_NAME}.${INGRESS_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - secretName: tls.plex
            hosts:
              - *host
              - *host-cluster
              - *foo

    persistence:
      config:
        enabled: true
        existingClaim: plex-config-nvme

      transcode:
        enabled: true
        type: emptyDir
        # medium: Memory

      nfs-nas-media:
        enabled: true
        existingClaim: media-nfs-share-pvc
        mountPath: /mnt/unionfs
        readOnly: false

      backup:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${NAS_ADDRESS}"
            path: /Backups/Kubernetes/${CLUSTER_NAME}/Applications/plex
        mountPath: /config/Backups

      rclone-config:
        enabled: true
        type: secret
        name: rclone-secret
        subPath: configData
        mountPath: /config/rclone.conf
        readOnly: true
      shared-remote:
        enabled: true
        type: emptyDir
        mountPath: /mnt/remotes
        mountPropagation: HostToContainer
      shared-merged:
        enabled: false
        type: emptyDir
        mountPath: /mnt/unionfs-test
        mountPropagation: HostToContainer
      mergerfs-script:
        enabled: true
        type: configMap
        name: mergerfs-script
        mountPath: /scripts/mergerfs
        defaultMode: 0777
      nas00-media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${NAS_ADDRESS}"
            path: /Media
        mountPath: /mnt/remotes/nas00-media


    addons:
      promtail:
        enabled: true
        image:
          repository: grafana/promtail
          tag: 2.8.3
        loki: http://loki.system-monitoring.svc.cluster.local:3100/loki/api/v1/push
        logs:
          - name: promtail/plex
            path: "/config/Library/Application Support/Plex Media Server/Logs/*.log"
          - name: promtail/plex/plugins
            path: "/config/Library/Application Support/Plex Media Server/Logs/PMS Plugin Logs/*.log"
        volumeMounts:
          - name: config
            mountPath: /config
            readOnly: true
        securityContext:
          runAsUser: 568

    resources:
      requests:
        # cpu: 35m
        memory: 24Gi
        # gpu.intel.com/i915: 1
        # nvidia.com/gpu: 1
      limits:
        # gpu.intel.com/i915: 1
        # nvidia.com/gpu: 1
        memory: 32Gi

    # affinity:
    #   nodeAffinity:
    #     requiredDuringSchedulingIgnoredDuringExecution:
    #       nodeSelectorTerms:
            # - matchExpressions:
            #     - key: feature.node.kubernetes.io/custom-intel-gpu
            #       operator: In
            #       values:
            #         - "true"

    probes:
      # -- Liveness probe configuration
      # @default -- See below
      liveness:
        # -- Enable the liveness probe
        enabled: true
        # -- Set this to `true` if you wish to specify your own livenessProbe
        custom: false
        # -- The spec field contains the values for the default livenessProbe.
        # If you selected `custom: true`, this field holds the definition of the livenessProbe.
        # @default -- See below
        spec:
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3

      # -- Redainess probe configuration
      # @default -- See below
      readiness:
        # -- Enable the readiness probe
        enabled: true
        # -- Set this to `true` if you wish to specify your own readinessProbe
        custom: false
        # -- The spec field contains the values for the default readinessProbe.
        # If you selected `custom: true`, this field holds the definition of the readinessProbe.
        # @default -- See below
        spec:
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3

      # -- Startup probe configuration
      # @default -- See below
      startup:
        # -- Enable the startup probe
        enabled: false
        # -- Set this to `true` if you wish to specify your own startupProbe
        custom: false
        # -- The spec field contains the values for the default startupProbe.
        # If you selected `custom: true`, this field holds the definition of the startupProbe.
        # @default -- See below
        spec:
          initialDelaySeconds: 0
          timeoutSeconds: 1
          ## This means it has a maximum of 5*30=150 seconds to start up before it fails
          periodSeconds: 5
          failureThreshold: 30

    # sidecars:
    #   rclone-mount:
    #     name: rclone-mount
    #     image: mumiehub/rclone-mount:latest       
    #     securityContext:
    #       runAsUser: 0
    #       # fsGroupChangePolicy: "OnRootMismatch"
    #       # runAsUser: 568
    #       runAsGroup: 100
    #       fsGroup: 568
    #       supplementalGroups:
    #         - 34
    #         - 568
    #       fsGroupChangePolicy: "OnRootMismatch"
    #       privileged: true
    #     env:
    #       - name: TZ
    #         value: "${TIMEZONE}"
    #       # Inside the /config folder
    #       - name: ConfigName
    #         value: "rclone.conf"
    #       - name: RemotePath
    #         value: "google:"
    #       - name: MountPoint
    #         value: "/mnt/remotes/google"
    #       - name: MountCommands
    #         value: "--allow-other \
    #                 --rc \
    #                 --rc-addr=localhost:5572 \
    #                 --allow-non-empty \
    #                 --drive-skip-gdocs \
    #                 --vfs-read-chunk-size=64M \
    #                 --vfs-read-chunk-size-limit=2048M \
    #                 --buffer-size=64M \
    #                 --poll-interval=1m \
    #                 --dir-cache-time=168h \
    #                 --timeout=10m \
    #                 --drive-chunk-size=64M \
    #                 --umask=002"
    #                 # User Agent spaces makes rclone mount think its multiple mount commands and not a long string. Removing it for now
    #                 # --user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36 \
    #     volumeMounts:
    #       - name: rclone-config
    #         mountPath: /config/rclone.conf
    #         readOnly: true
    #         subPath: configData
    #       - name: shared-remote
    #         mountPath: /mnt/remotes
    #         mountPropagation: Bidirectional
    #   mergerfs:
    #     name: mergerfs
    #     image: ghcr.io/hotio/mergerfs:release-2.34.1
    #     command: ["/scripts/mergerfs/mergerfs-script.sh"]
    #     securityContext:
    #       runAsUser: 0
    #       # fsGroupChangePolicy: "OnRootMismatch"
    #       # runAsUser: 568
    #       runAsGroup: 100
    #       fsGroup: 568
    #       supplementalGroups:
    #         - 34
    #         - 568
    #       fsGroupChangePolicy: "OnRootMismatch"
    #       privileged: true
    #     env:
    #       - name: TZ
    #         value: "${TIMEZONE}"
    #     volumeMounts:
    #       - name: nas00-media
    #         mountPath: /mnt/remotes/nas00-media
    #       - name: shared-remote
    #         mountPath: /mnt/remotes
    #         mountPropagation: HostToContainer
    #       - name: shared-merged
    #         mountPath: /mnt/unionfs
    #         mountPropagation: Bidirectional
    #       - name: mergerfs-script
    #         mountPath: /scripts/mergerfs