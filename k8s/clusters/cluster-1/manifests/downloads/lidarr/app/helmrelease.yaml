---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: lidarr
  namespace: downloads
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.0.1
      interval: 15m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/lidarr
              tag: 1.3.5.3530
              pullPolicy: IfNotPresent

    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 100    # was 568 before app template upgrade
        fsGroup: 100
        supplementalGroups:
          - 34
          - 100
        fsGroupChangePolicy: "OnRootMismatch"

    env:
      TZ: "${TIMEZONE}"
      LIDARR__INSTANCE_NAME: Lidarr
      LIDARR__PORT: &port 8686
      LIDARR__APPLICATION_URL: &host-cluster "lidarr.${CLUSTER_NAME}.${INGRESS_DOMAIN}"
      LIDARR__LOG_LEVEL: info

    service:
      main:
        ports:
          http:
            port: *port

    persistence:
      config:
        enabled: true
        existingClaim: lidarr-config
      music:
        enabled: true
        existingClaim: cephfs-hdd-downloads-music
        mountPath: /mnt/unionfs/Media/Music/
        accessMode: ReadWriteMany
      backup:
        enabled: true
        existingClaim: cephfs-hdd-backups-lidarr
        mountPath: /config/Backups
      downloads:
        enabled: true
        existingClaim: cephfs-ssd-cache-downloads
        mountPath: /mnt/unionfs/downloads
        accessMode: ReadWriteMany

    ingress:
      main:
        enabled: true
        className: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: network-chain-external@kubernetescrd
        hosts:
          - host: *host-cluster
            paths:
              - path: /
          - host: &host "music.${INGRESS_DOMAIN}"
            paths:
              - path: /
        tls:
          - secretName: tls.lidarr
            hosts:
              - *host-cluster
              - *host

    resources:
      requests:
        cpu: "0.04"
        memory: "250M"
      limits:
        memory: "1000M"
