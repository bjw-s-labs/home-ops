---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: tdarr
  namespace: downloads
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    image:
      repository: ghcr.io/haveagitgat/tdarr_acc
      tag: 2.00.20.1
    env:
      TZ: "${TIMEZONE}"
      # PUID: "568"
      # PGID: "568"
      ffmpegPath: "/usr/local/bin/ffmpeg"
      TDARR_INSTANCE_NAME: Tdarr
      TDARR__PORT: &port 8265
      TDARR__APPLICATION_URL: &host-cluster "tdarr.${CLUSTER_NAME}.${INGRESS_DOMAIN}"
      TDARR__LOG_LEVEL: info
    service:
      main:
        ports:
          http:
            port: *port
          server:
            enabled: true
            protocol: TCP
            port: 8266
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: network-chain-external@kubernetescrd
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
          # external-dns.alpha.kubernetes.io/target: ingress.${INGRESS_DOMAIN}
          external-dns/is-public: "false"
        hosts:
          - host: *host-cluster
            paths:
              - path: /
          - host: &host "tdarr.${INGRESS_DOMAIN}"
            paths:
              - path: /
        tls:
          - secretName: tls.tdarr
            hosts:
              - *host-cluster
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: tdarr-config
        mountPath: /app/configs
      data:
        enabled: true
        existingClaim: tdarr-data
        mountPath: /app/server
      cache:
        enabled: true
        # existingClaim: tdarr-cache
        existingClaim: cephfs-hdd-cache-downloads
      nfs-nas-local-media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${NAS_ADDRESS}"
            path: /mnt/NFS/Media
        mountPath: /mnt/Media

    podSecurityContext:
      runAsUser: 0
      runAsGroup: 0
      fsGroup: 100
      supplementalGroups:
        - 34
        - 100
      fsGroupChangePolicy: "OnRootMismatch"
      capabilities:
        add:
          - CHOWN
    resources:
      requests:
        cpu: 10m
        memory: 250Mi