---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: radarr
  namespace: downloads
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      interval: 15m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"
    image:
      repository: ghcr.io/onedr0p/radarr-develop
      tag: 5.0.1.7993
      pullPolicy: IfNotPresent

    podSecurityContext:
      runAsUser: 568
      runAsGroup: 100
      fsGroup: 100
      supplementalGroups:
        - 34
        - 100
      fsGroupChangePolicy: "OnRootMismatch"

    env:
      TZ: "${TIMEZONE}"
      RADARR_INSTANCE_NAME: Radarr
      RADARR__PORT: &port 7878
      RADARR__APPLICATION_URL: &host-cluster "radarr.${CLUSTER_NAME}.${INGRESS_DOMAIN}"
      RADARR__LOG_LEVEL: info

    service:
      main:
        ports:
          http:
            port: *port

    hostAliases:
      - ip: "10.200.1.50"
        hostnames:
          - "autoscan.${CLUSTER_NAME}.${INGRESS_DOMAIN}"

    metrics:
      enabled: true
      serviceMonitor:
        interval: 3m
        scrapeTimeout: 1m
      prometheusRule:
        enabled: true
      exporter:
        image:
          repository: ghcr.io/onedr0p/exportarr
          tag: v1.5.3
        env:
          port: 9794
          additionalMetrics: true
          unknownQueueItems: true
    persistence:
      config:
        enabled: true
        existingClaim: radarr-config-nvme
      movies:
        enabled: true
        existingClaim: cephfs-hdd-downloads-movies
        mountPath: /mnt/unionfs/Media/Movies/
        accessMode: ReadWriteMany
      downloads:
        enabled: true
        existingClaim: cephfs-ssd-cache-downloads
        mountPath: /mnt/unionfs/downloads
        accessMode: ReadWriteMany
      backup:
        enabled: true
        existingClaim: cephfs-hdd-backups-radarr
        mountPath: /config/Backups

    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          # traefik.ingress.kubernetes.io/router.middlewares: "network-chain-global-auth@kubernetescrd"
          traefik.ingress.kubernetes.io/router.middlewares: network-chain-external@kubernetescrd
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
          external-dns.alpha.kubernetes.io/target: ingress.${INGRESS_DOMAIN}
          external-dns/is-public: "true"
        hosts:
          - host: *host-cluster
            paths:
              - path: /
          - host: &host "radarr.${INGRESS_DOMAIN}"
            paths:
              - path: /
        tls:
          - secretName: tls.radarr
            hosts:
              - *host-cluster
              - *host

    resources:
      requests:
        cpu: "0.04"
        memory: "256M"
      limits:
        memory: "6G"

    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - plex
              topologyKey: kubernetes.io/hostname
