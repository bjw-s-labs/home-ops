---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: sabnzbd
  namespace: downloads
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"
    image:
      repository: ghcr.io/onedr0p/sabnzbd
      # tag: 4.0.2@sha256:4bda9b942c0be7eb3603b7eb19b13af30dfd664fa8962df48fac159cec5fc031
      tag: 4.0.1
    env:
      TZ: America/Los_Angeles
      SABNZBD__PORT: &port 8080
      NZBGET__APPLICATION_URL: &host-cluster "sabnzbd.${CLUSTER_NAME}.${INGRESS_DOMAIN}"
      SABNZBD__HOST_WHITELIST_ENTRIES: >-
        sabnzbd,
        sabnzbd.downloads,
        sabnzbd.downloads.svc,
        sabnzbd.downloads.svc.cluster,
        sabnzbd.downloads.svc.cluster.local,
        sabnzbd.${INGRESS_DOMAIN},
        sabnzbd.${CLUSTER_NAME}.${INGRESS_DOMAIN}
    envFrom:
      - secretRef:
          name: sabnzbd-api-keys
    service:
      main:
        ports:
          http:
            port: *port
    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /api?mode=version
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: network-chain-external@kubernetescrd
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
          external-dns.alpha.kubernetes.io/target: ingress.${INGRESS_DOMAIN}
          external-dns/is-public: "true"
          # external-dns.alpha.kubernetes.io/target: ${CLOUDFLARE_TUNNEL_ID}.cfargotunnel.com
          # external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
        hosts:
          - host: *host-cluster
            paths:
              - path: /
          - host: &host "sabnzbd.${INGRESS_DOMAIN}"
            paths:
              - path: /
        tls:
          - secretName: tls.sabnzbd
            hosts:
              - *host-cluster
              - *host
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 100
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch
      supplementalGroups:
        - 568
      # privileged: true
    # Note: If downloading very large nzbs it might be worth using NFS for your download directory.
    persistence:
      config:
        enabled: true
        existingClaim: sabnzbd-config
      incomplete:
        enabled: true
        type: emptyDir
      backup:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${NAS_ADDRESS}"
            path: /Backups/Kubernetes/${CLUSTER_NAME}/Applications/sabnzbd
        mountPath: /config/Backups
      nfs-nas-media:
        enabled: true
        existingClaim: downloads-nfs-share-pvc
        mountPath: /mnt/unionfs
        readOnly: false
      rclone-config:
        enabled: true
        type: secret
        name: rclone-secret
        subPath: configData
        mountPath: /config/rclone.conf
        readOnly: false
      shared-remote:
        enabled: true
        type: emptyDir
        mountPath: /mnt/remotes
        mountPropagation: HostToContainer
      shared-merged:
        enabled: false
        type: emptyDir
        mountPath: /mnt/unionfs-test
        mountPropagation: HostToContainer
      mergerfs-script:
        enabled: true
        type: configMap
        name: mergerfs-script
        mountPath: /scripts/mergerfs
        defaultMode: 0777
      nas00-media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${NAS_ADDRESS}"
            path: /Media
        mountPath: /mnt/remotes/nas00-media

      
    # nodeSelector:
    #   node-role.kubernetes.io/worker: "true"
    resources:
      requests:
        cpu: 10m
        memory: 250Mi
      limits:
        memory: 8000Mi

    # sidecars:
    #   rclone-mount:
    #     name: rclone-mount
    #     image: mumiehub/rclone-mount:latest       
    #     securityContext:
    #       runAsUser: 0
    #       # fsGroupChangePolicy: "OnRootMismatch"
    #       # runAsUser: 568
    #       runAsGroup: 100
    #       fsGroup: 568
    #       supplementalGroups:
    #         - 34
    #         - 568
    #       fsGroupChangePolicy: "OnRootMismatch"
    #       privileged: true
    #     env:
    #       - name: TZ
    #         value: "${TIMEZONE}"
    #       # Inside the /config folder
    #       - name: ConfigName
    #         value: "rclone.conf"
    #       - name: RemotePath
    #         value: "google:"
    #       - name: MountPoint
    #         value: "/mnt/remotes/google"
    #       - name: MountCommands
    #         value: "--allow-other \
    #                 --rc \
    #                 --rc-addr=localhost:5572 \
    #                 --allow-non-empty \
    #                 --drive-skip-gdocs \
    #                 --vfs-read-chunk-size=64M \
    #                 --vfs-read-chunk-size-limit=512M \
    #                 --buffer-size=64M \
    #                 --poll-interval=1m \
    #                 --dir-cache-time=5m \
    #                 --timeout=10m \
    #                 --drive-chunk-size=64M \
    #                 --umask=002"
    #                 # User Agent spaces makes rclone mount think its multiple mount commands and not a long string. Removing it for now
    #                 # --user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36 \
    #     volumeMounts:
    #       - name: rclone-config
    #         mountPath: /config/rclone.conf
    #         readOnly: true
    #         subPath: configData
    #       - name: shared-remote
    #         mountPath: /mnt/remotes
    #         mountPropagation: Bidirectional
    #   mergerfs:
    #     name: mergerfs
    #     image: ghcr.io/hotio/mergerfs:release-2.34.1
    #     command: ["/scripts/mergerfs/mergerfs-script.sh"]
    #     securityContext:
    #       runAsUser: 0
    #       # fsGroupChangePolicy: "OnRootMismatch"
    #       # runAsUser: 568
    #       runAsGroup: 100
    #       fsGroup: 568
    #       supplementalGroups:
    #         - 34
    #         - 568
    #       privileged: true
    #     env:
    #       - name: TZ
    #         value: "${TIMEZONE}"
    #     volumeMounts:
    #       - name: nas00-media
    #         mountPath: /mnt/remotes/nas00-media
    #       - name: shared-remote
    #         mountPath: /mnt/remotes
    #         mountPropagation: HostToContainer
    #       - name: shared-merged
    #         mountPath: /mnt/unionfs
    #         mountPropagation: Bidirectional
    #       - name: mergerfs-script
    #         mountPath: /scripts/mergerfs