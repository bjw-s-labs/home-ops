---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: sabnzbd
  namespace: downloads
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"
    image:
      repository: ghcr.io/onedr0p/sabnzbd
      # tag: 4.0.2@sha256:4bda9b942c0be7eb3603b7eb19b13af30dfd664fa8962df48fac159cec5fc031
      tag: 4.0.3
    env:
      TZ: America/Los_Angeles
      SABNZBD__PORT: &port 8080
      NZBGET__APPLICATION_URL: &host-cluster "sabnzbd.${CLUSTER_NAME}.${INGRESS_DOMAIN}"
      SABNZBD__HOST_WHITELIST_ENTRIES: >-
        sabnzbd,
        sabnzbd.downloads,
        sabnzbd.downloads.svc,
        sabnzbd.downloads.svc.cluster,
        sabnzbd.downloads.svc.cluster.local,
        sabnzbd.${INGRESS_DOMAIN},
        sabnzbd.${CLUSTER_NAME}.${INGRESS_DOMAIN}
    envFrom:
      - secretRef:
          name: sabnzbd-api-keys
    service:
      main:
        ports:
          http:
            port: *port
    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /api?mode=version
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: network-chain-external@kubernetescrd
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
          external-dns.alpha.kubernetes.io/target: ingress.${INGRESS_DOMAIN}
          external-dns/is-public: "true"
          # external-dns.alpha.kubernetes.io/target: ${CLOUDFLARE_TUNNEL_ID}.cfargotunnel.com
          # external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
        hosts:
          - host: *host-cluster
            paths:
              - path: /
          - host: &host "sabnzbd.${INGRESS_DOMAIN}"
            paths:
              - path: /
        tls:
          - secretName: tls.sabnzbd
            hosts:
              - *host-cluster
              - *host
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 100
      fsGroup: 100
      fsGroupChangePolicy: OnRootMismatch
      supplementalGroups:
        - 568
      # privileged: true
    # Note: If downloading very large nzbs it might be worth using NFS for your download directory.
    persistence:
      config:
        enabled: true
        existingClaim: sabnzbd-config
      incomplete:
        enabled: true
        type: emptyDir
      backup:
        enabled: true
        existingClaim: cephfs-hdd-backups-sabnzbd
        mountPath: /config/Backups
      4kmovies:
        enabled: true
        existingClaim: cephfs-hdd-downloads-4kmovies
        mountPath: /mnt/unionfs/Media/4KMovies/
        accessMode: ReadWriteMany
      4ktv:
        enabled: true
        existingClaim: cephfs-hdd-downloads-4ktv
        mountPath: /mnt/unionfs/Media/4KTV/
        accessMode: ReadWriteMany
      music:
        enabled: true
        existingClaim: cephfs-hdd-downloads-music
        mountPath: /mnt/unionfs/Media/Music/
        accessMode: ReadWriteMany
      movies:
        enabled: true
        existingClaim: cephfs-hdd-downloads-movies
        mountPath: /mnt/unionfs/Media/Movies/
        accessMode: ReadWriteMany
      tv:
        enabled: true
        existingClaim: cephfs-hdd-downloads-tv
        mountPath: /mnt/unionfs/Media/TV
        accessMode: ReadWriteMany
      downloads:
        enabled: true
        existingClaim: cephfs-ssd-cache-downloads
        mountPath: /mnt/unionfs/downloads
        accessMode: ReadWriteMany
      downloads-ssd:
        enabled: false
        existingClaim: sabnzbd-nvme-cache
        mountPath: /mnt/unionfs/downloads
      
    # nodeSelector:
    #   node-role.kubernetes.io/worker: "true"
    resources:
      requests:
        cpu: 10m
        memory: 250Mi
      limits:
        memory: 8000Mi
