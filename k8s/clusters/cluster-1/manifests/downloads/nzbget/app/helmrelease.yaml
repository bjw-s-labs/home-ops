---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: nzbget
  namespace: downloads
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.3.2
      interval: 15m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  values:
    image:
      repository: ghcr.io/onedr0p/nzbget
      tag: "21.1"
      pullPolicy: IfNotPresent

    podSecurityContext:
      runAsUser: 568
      runAsGroup: 100
      fsGroup: 568
      supplementalGroups:
        - 100
      fsGroupChangePolicy: "OnRootMismatch"

    env:
      TZ: "${TIMEZONE}"
      NZBGET__INSTANCE_NAME: NZBGet
      NZBGET__PORT: &port 6789
      NZBGET__APPLICATION_URL: &host-cluster "nzbget.${CLUSTER_NAME}.${INGRESS_DOMAIN}"
      NZBGET__LOG_LEVEL: info

    service:
      main:
        ports:
          http:
            port: *port

    persistence:
      config:
        enabled: true
        existingClaim: nzbget-config
      nfs-nas-media:
        enabled: true
        existingClaim: downloads-nfs-share-pvc
        mountPath: /mnt/unionfs
        readOnly: false
      intermediate:
        enabled: true
        type: emptyDir
      rclone-config:
        enabled: true
        type: secret
        name: rclone-secret
        subPath: configData
        mountPath: /config/rclone.conf
        readOnly: true
      shared-remote:
        enabled: true
        type: emptyDir
        mountPath: /mnt/remotes
        mountPropagation: HostToContainer
      shared-merged:
        enabled: true
        type: emptyDir
        mountPath: /mnt/unionfs-test
        mountPropagation: HostToContainer
      mergerfs-script:
        enabled: true
        type: configMap
        name: mergerfs-script
        mountPath: /scripts/mergerfs
        defaultMode: 0777
      nas00-media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${NAS_ADDRESS}"
            path: /Media
        mountPath: /mnt/remotes/nas00-media

    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: network-chain-external@kubernetescrd
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
          external-dns.alpha.kubernetes.io/target: ipv4.${INGRESS_DOMAIN}
          external-dns/is-public: "true"
          # external-dns.alpha.kubernetes.io/target: ${CLOUDFLARE_TUNNEL_ID}.cfargotunnel.com
          # external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
        hosts:
          - host: *host-cluster
            paths:
              - path: /
          - host: &host "nzbget.${INGRESS_DOMAIN}"
            paths:
              - path: /
        tls:
          - secretName: tls.nzbget
            hosts:
              - *host-cluster
              - *host

    resources:
      requests:
        memory: "500M"
      limits:
        memory: "2500M"

    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - plex
              topologyKey: kubernetes.io/hostname

    sidecars:
      rclone-mount:
        name: rclone-mount
        image: mumiehub/rclone-mount:latest       
        securityContext:
          runAsUser: 0
          fsGroupChangePolicy: "OnRootMismatch"
          privileged: true
        env:
          - name: TZ
            value: "${TIMEZONE}"
          # Inside the /config folder
          - name: ConfigName
            value: "rclone.conf"
          - name: RemotePath
            value: "google:"
          - name: MountPoint
            value: "/mnt/remotes/google"
          - name: MountCommands
            value: "--allow-other \
                    --rc \
                    --rc-addr=localhost:5572 \
                    --allow-non-empty \
                    --drive-skip-gdocs \
                    --vfs-read-chunk-size=64M \
                    --vfs-read-chunk-size-limit=512M \
                    --buffer-size=64M \
                    --poll-interval=1m \
                    --dir-cache-time=5m \
                    --timeout=10m \
                    --drive-chunk-size=64M \
                    --umask=002"
                    # User Agent spaces makes rclone mount think its multiple mount commands and not a long string. Removing it for now
                    # --user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36 \
        volumeMounts:
          - name: rclone-config
            mountPath: /config/rclone.conf
            readOnly: true
            subPath: configData
          - name: shared-remote
            mountPath: /mnt/remotes
            mountPropagation: Bidirectional
      mergerfs:
        name: mergerfs
        image: ghcr.io/hotio/mergerfs:release-2.34.1
        command: ["/scripts/mergerfs/mergerfs-script.sh"]
        securityContext:
          runAsUser: 0
          fsGroupChangePolicy: "OnRootMismatch"
          privileged: true
        env:
          - name: TZ
            value: "${TIMEZONE}"
        volumeMounts:
          - name: nas00-media
            mountPath: /mnt/remotes/nas00-media
          - name: shared-remote
            mountPath: /mnt/remotes
            mountPropagation: HostToContainer
          - name: shared-merged
            mountPath: /mnt/unionfs
            mountPropagation: Bidirectional
          - name: mergerfs-script
            mountPath: /scripts/mergerfs