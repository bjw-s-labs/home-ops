---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: overseerr
  namespace: downloads
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.6.0
      interval: 15m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 100 
            fsGroup: 100
            # supplementalGroups:
            #   - 34
            #   - 100
            fsGroupChangePolicy: "OnRootMismatch"
          hostAliases:
            - ip: "10.200.1.50"
              hostnames:
                - "sonarr.${CLUSTER_NAME}.${INGRESS_DOMAIN}"
                - "sonarr-4k.${CLUSTER_NAME}.${INGRESS_DOMAIN}"
                - "radarr.${CLUSTER_NAME}.${INGRESS_DOMAIN}"
                - "radarr-4k.${CLUSTER_NAME}.${INGRESS_DOMAIN}"

        containers:
          main:
            image:
              repository: ghcr.io/sct/overseerr
              tag: 1.33.2
              pullPolicy: IfNotPresent
            env:
              TZ: "${TIMEZONE}"
              OVERSEERR__INSTANCE_NAME: Overseer
              OVERSEERR__PORT: &port 5055
              OVERSEERR__APPLICATION_URL: &host-cluster "overseerr.${CLUSTER_NAME}.${INGRESS_DOMAIN}"
              OVERSEERR__LOG_LEVEL: info
            resources:
              requests:
                memory: "256M"
              limits:
                memory: "2048M"

    service:
      main:
        ports:
          http:
            port: *port

    persistence:
      config:
        enabled: true
        existingClaim: overseerr-config-nvme
        advancedMounts:
          main:
            main:
              - path: /app/config
      backup:
        enabled: true
        existingClaim: ceph-filesystem-backups-overseerr
        advancedMounts:
          main:
            main:
              - path: /app/config/Backups

    ingress:
      main:
        enabled: true
        className: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: network-chain-external@kubernetescrd
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
          external-dns.alpha.kubernetes.io/target: ingress.${INGRESS_DOMAIN}
          external-dns/is-public: "true"
          external-dns/powerdns: "true"
        hosts:
          - host: *host-cluster
            paths:
              - path: /
                service:
                  name: main
                  port: http
          - host: &host "request.${INGRESS_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
          - host: &hosts "requests.${INGRESS_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - secretName: tls.overseerr
            hosts:
              - *host-cluster
              - *host
              - *hosts
