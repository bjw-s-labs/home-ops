---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helmrelease_v2beta1.json
# apiVersion: helm.toolkit.fluxcd.io/v2beta1
# kind: HelmRelease
# metadata:
#   name: &app k8s-gateway
#   namespace: network
# spec:
#   interval: 15m
#   chart:
#     spec:
#       chart: app-template
#       version: 1.3.2
#       sourceRef:
#         kind: HelmRepository
#         name: bjw-s
#         namespace: flux-system
#   maxHistory: 3
#   install:
#     createNamespace: true
#     remediation:
#       retries: 3
#   upgrade:
#     cleanupOnFail: true
#     remediation:
#       retries: 3
#   uninstall:
#     keepHistory: false
#   values:
#     controller:
#       replicas: 3
#       strategy: RollingUpdate
#     image:
#       repository: quay.io/oriedge/k8s_gateway
#       tag: v0.3.3
#     args: ["-conf", "/etc/coredns/Corefile"]
#     service:
#       main:
#         type: LoadBalancer
#         loadBalancerIP: ${LB_K8S_GATEWAY}
#         externalTrafficPolicy: Local
#         ports:
#           http:
#             enabled: false
#           metrics:
#             enabled: true
#             port: 9153
#           dns:
#             enabled: true
#             port: 53
#             targetPort: 1053
#             protocol: UDP
#     serviceMonitor:
#       main:
#         enabled: true
#         endpoints:
#           - port: metrics
#             scheme: http
#             path: /metrics
#             interval: 1m
#             scrapeTimeout: 10s
#     probes:
#       readiness:
#         custom: true
#         spec:
#           httpGet:
#             path: /ready
#             port: 8181
#       liveness:
#         custom: true
#         spec:
#           httpGet:
#             path: /health
#             port: 8080
#       startup:
#         enabled: false
#     serviceAccount:
#       create: true
#       name: *app
#     persistence:
#       config:
#         enabled: true
#         type: configMap
#         name: k8s-gateway-configmap # overriden by kustomizeconfig
#         subPath: Corefile
#         mountPath: /etc/coredns/Corefile
#         readOnly: true
#     topologySpreadConstraints:
#       - maxSkew: 1
#         topologyKey: kubernetes.io/hostname
#         whenUnsatisfiable: DoNotSchedule
#         labelSelector:
#           matchLabels:
#             app.kubernetes.io/name: *app

---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: k8s-gateway
  namespace: network
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 1.3.2
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  values:
    image:
      repository: quay.io/oriedge/k8s_gateway
      tag: v0.3.3
      pullPolicy: IfNotPresent

    podAnnotations:
      configmap.reloader.stakater.com/reload: "k8s-gateway-config"

    args: ["-conf", "/etc/coredns/Corefile"]

    configMaps:
      config:
        enabled: true
        data:
          Corefile: |
            .:1053 {
              errors
              log
              health {
                lameduck 5s
              }
              ready
              k8s_gateway ${INGRESS_DOMAIN} {
                apex k8s-gateway.networking
                resources Ingress Service
                ttl 300
              }
              prometheus 0.0.0.0:9153
              loop
              reload
              loadbalance
            }
    serviceAccount:
      create: true
      name: k8s-gateway

    service:
      main:
        type: LoadBalancer
        externalTrafficPolicy: Local
        loadBalancerIP: "${LB_K8S_GATEWAY}"
        externalIPs:
          - "${LB_K8S_GATEWAY}"
        ports:
          http:
            enabled: false
          dns:
            enabled: true
            port: 53
            targetPort: 1053
            protocol: UDP

    persistence:
      config:
        enabled: true
        type: configMap
        name: k8s-gateway-config
        mountPath: /etc/coredns
        readOnly: true

    probes:
      readiness:
        custom: true
        spec:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
      liveness:
        custom: true
        spec:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
      startup:
        custom: true
        spec:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP

    resources: {}