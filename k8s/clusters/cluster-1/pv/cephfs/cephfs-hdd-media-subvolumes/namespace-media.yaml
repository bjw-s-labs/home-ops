# ---
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: cephfs-hdd-media-4kmovies
# spec:
#   accessModes:
#     - ReadWriteMany
#   capacity:
#     storage: 200T
#   storageClassName: "cephfs-hdd-storage"
#   csi:
#     driver: rook-ceph.cephfs.csi.ceph.com 
#     nodeStageSecretRef:
#       # node stage secret name
#       name: rook-csi-cephfs-node
#       # node stage secret namespace where above secret is created
#       namespace: rook-ceph-external 
#     volumeAttributes:
#       # Required options from storageclass parameters need to be added in volumeAttributes
#       "clusterID": "rook-ceph-external"
#       "fsName": "cephfs-hdd"
#       "pool": "hdd-ec-storage-data"
#       "staticVolume": "true"
#       "rootPath": /volumes/_nogroup/media/87018d3c-91fd-48be-a318-e1d09391abd0/4KMovies
#     # volumeHandle can be anything, need not to be same
#     # as PV name or volume name. keeping same for brevity
#     volumeHandle: cephfs-hdd-media-4kmovies
#   persistentVolumeReclaimPolicy: Retain
#   volumeMode: Filesystem
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: cephfs-hdd-media-4kmovies
#   namespace: media
#   labels:
#     backup: "false"
# spec:
#   accessModes:
#   - ReadWriteMany
#   storageClassName: "cephfs-hdd-storage"
#   resources:
#     requests:
#       storage: 200T
#   volumeMode: Filesystem
#   # volumeName should be same as PV name
#   volumeName: cephfs-hdd-media-4kmovies
# ---
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: cephfs-hdd-media-4ktv
# spec:
#   accessModes:
#     - ReadWriteMany
#   capacity:
#     storage: 200T
#   storageClassName: "cephfs-hdd-storage"
#   csi:
#     driver: rook-ceph.cephfs.csi.ceph.com 
#     nodeStageSecretRef:
#       # node stage secret name
#       name: rook-csi-cephfs-node
#       # node stage secret namespace where above secret is created
#       namespace: rook-ceph-external 
#     volumeAttributes:
#       # Required options from storageclass parameters need to be added in volumeAttributes
#       "clusterID": "rook-ceph-external"
#       "fsName": "cephfs-hdd"
#       "pool": "hdd-ec-storage-data"
#       "staticVolume": "true"
#       "rootPath": /volumes/_nogroup/media/87018d3c-91fd-48be-a318-e1d09391abd0/4KTV
#     # volumeHandle can be anything, need not to be same
#     # as PV name or volume name. keeping same for brevity
#     volumeHandle: cephfs-hdd-media-4ktv
#   persistentVolumeReclaimPolicy: Retain
#   volumeMode: Filesystem
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: cephfs-hdd-media-4ktv
#   namespace: media
#   labels:
#     backup: "false"
# spec:
#   accessModes:
#   - ReadWriteMany
#   storageClassName: "cephfs-hdd-storage"
#   resources:
#     requests:
#       storage: 200T
#   volumeMode: Filesystem
#   # volumeName should be same as PV name
#   volumeName: cephfs-hdd-media-4ktv
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: cephfs-hdd-media-movies
spec:
  accessModes:
    - ReadWriteMany
  capacity:
    storage: 200T
  storageClassName: "cephfs-hdd-storage"
  csi:
    driver: rook-ceph.cephfs.csi.ceph.com 
    nodeStageSecretRef:
      # node stage secret name
      name: rook-csi-cephfs-node
      # node stage secret namespace where above secret is created
      namespace: rook-ceph-external 
    volumeAttributes:
      # Required options from storageclass parameters need to be added in volumeAttributes
      "clusterID": "rook-ceph-external"
      "fsName": "cephfs-hdd"
      "pool": "hdd-ec-storage-data"
      "staticVolume": "true"
      "rootPath": /volumes/_nogroup/media/87018d3c-91fd-48be-a318-e1d09391abd0/Movies
    # volumeHandle can be anything, need not to be same
    # as PV name or volume name. keeping same for brevity
    volumeHandle: cephfs-hdd-media-movies
  persistentVolumeReclaimPolicy: Retain
  volumeMode: Filesystem
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: cephfs-hdd-media-movies
  namespace: media
  labels:
    backup: "false"
spec:
  accessModes:
  - ReadWriteMany
  storageClassName: "cephfs-hdd-storage"
  resources:
    requests:
      storage: 200T
  volumeMode: Filesystem
  # volumeName should be same as PV name
  volumeName: cephfs-hdd-media-movies
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: cephfs-hdd-media-tv
spec:
  accessModes:
    - ReadWriteMany
  capacity:
    storage: 200T
  storageClassName: "cephfs-hdd-storage"
  csi:
    driver: rook-ceph.cephfs.csi.ceph.com 
    nodeStageSecretRef:
      # node stage secret name
      name: rook-csi-cephfs-node
      # node stage secret namespace where above secret is created
      namespace: rook-ceph-external 
    volumeAttributes:
      # Required options from storageclass parameters need to be added in volumeAttributes
      "clusterID": "rook-ceph-external"
      "fsName": "cephfs-hdd"
      "pool": "hdd-ec-storage-data"
      "staticVolume": "true"
      "rootPath": /volumes/_nogroup/media/87018d3c-91fd-48be-a318-e1d09391abd0/TV
    # volumeHandle can be anything, need not to be same
    # as PV name or volume name. keeping same for brevity
    volumeHandle: cephfs-hdd-media-tv
  persistentVolumeReclaimPolicy: Retain
  volumeMode: Filesystem
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: cephfs-hdd-media-tv
  namespace: media
  labels:
    backup: "false"
spec:
  accessModes:
  - ReadWriteMany
  storageClassName: "cephfs-hdd-storage"
  resources:
    requests:
      storage: 200T
  volumeMode: Filesystem
  # volumeName should be same as PV name
  volumeName: cephfs-hdd-media-tv
# ---
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: cephfs-hdd-media-music
# spec:
#   accessModes:
#     - ReadWriteMany
#   capacity:
#     storage: 200T
#   storageClassName: "cephfs-hdd-storage"
#   csi:
#     driver: rook-ceph.cephfs.csi.ceph.com 
#     nodeStageSecretRef:
#       # node stage secret name
#       name: rook-csi-cephfs-node
#       # node stage secret namespace where above secret is created
#       namespace: rook-ceph-external 
#     volumeAttributes:
#       # Required options from storageclass parameters need to be added in volumeAttributes
#       "clusterID": "rook-ceph-external"
#       "fsName": "cephfs-hdd"
#       "pool": "hdd-ec-storage-data"
#       "staticVolume": "true"
#       "rootPath": /volumes/_nogroup/media/87018d3c-91fd-48be-a318-e1d09391abd0/Music
#     # volumeHandle can be anything, need not to be same
#     # as PV name or volume name. keeping same for brevity
#     volumeHandle: cephfs-hdd-media-music
#   persistentVolumeReclaimPolicy: Retain
#   volumeMode: Filesystem
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: cephfs-hdd-media-music
#   namespace: media
#   labels:
#     backup: "false"
# spec:
#   accessModes:
#   - ReadWriteMany
#   storageClassName: "cephfs-hdd-storage"
#   resources:
#     requests:
#       storage: 200T
#   volumeMode: Filesystem
#   # volumeName should be same as PV name
#   volumeName: cephfs-hdd-media-music
############################################################
#        Cluster 2 Ceph PVs
############################################################
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: ceph-filesystem-media-4kmovies
spec:
  accessModes:
    - ReadWriteMany
  capacity:
    storage: 124T
  storageClassName: "ceph-filesystem-storage"
  csi:
    driver: rook-ceph.cephfs.csi.ceph.com 
    nodeStageSecretRef:
      # node stage secret name
      name: rook-csi-cephfs-node
      # node stage secret namespace where above secret is created
      namespace: rook-ceph-cluster-2
    volumeAttributes:
      # Required options from storageclass parameters need to be added in volumeAttributes
      "clusterID": "rook-ceph-cluster-2"
      "fsName": "ceph-filesystem"
      "pool": "ceph-filesystem-erasurecoded"
      "staticVolume": "true"
      "rootPath": /volumes/media/4KMovies
    # volumeHandle can be anything, need not to be same
    # as PV name or volume name. keeping same for brevity
    volumeHandle: ceph-filesystem-media-4kmovies
  persistentVolumeReclaimPolicy: Retain
  volumeMode: Filesystem
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ceph-filesystem-media-4kmovies
  namespace: media
  labels:
    backup: "false"
spec:
  accessModes:
  - ReadWriteMany
  storageClassName: "ceph-filesystem-storage"
  resources:
    requests:
      storage: 124T
  volumeMode: Filesystem
  # volumeName should be same as PV name
  volumeName: ceph-filesystem-media-4kmovies
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: ceph-filesystem-media-4ktv
spec:
  accessModes:
    - ReadWriteMany
  capacity:
    storage: 124T
  storageClassName: "ceph-filesystem-storage"
  csi:
    driver: rook-ceph.cephfs.csi.ceph.com 
    nodeStageSecretRef:
      # node stage secret name
      name: rook-csi-cephfs-node
      # node stage secret namespace where above secret is created
      namespace: rook-ceph-cluster-2 
    volumeAttributes:
      # Required options from storageclass parameters need to be added in volumeAttributes
      "clusterID": "rook-ceph-cluster-2"
      "fsName": "ceph-filesystem"
      "pool": "ceph-filesystem-erasurecoded"
      "staticVolume": "true"
      "rootPath": /volumes/media/4KTV
    # volumeHandle can be anything, need not to be same
    # as PV name or volume name. keeping same for brevity
    volumeHandle: ceph-filesystem-media-4ktv
  persistentVolumeReclaimPolicy: Retain
  volumeMode: Filesystem
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ceph-filesystem-media-4ktv
  namespace: media
  labels:
    backup: "false"
spec:
  accessModes:
  - ReadWriteMany
  storageClassName: "ceph-filesystem-storage"
  resources:
    requests:
      storage: 124T
  volumeMode: Filesystem
  # volumeName should be same as PV name
  volumeName: ceph-filesystem-media-4ktv
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: ceph-filesystem-media-music
spec:
  accessModes:
    - ReadWriteMany
  capacity:
    storage: 124T
  storageClassName: "ceph-filesystem-storage"
  csi:
    driver: rook-ceph.cephfs.csi.ceph.com 
    nodeStageSecretRef:
      # node stage secret name
      name: rook-csi-cephfs-node
      # node stage secret namespace where above secret is created
      namespace: rook-ceph-cluster-2
    volumeAttributes:
      # Required options from storageclass parameters need to be added in volumeAttributes
      "clusterID": "rook-ceph-cluster-2"
      "fsName": "ceph-filesystem"
      "pool": "ceph-filesystem-erasurecoded"
      "staticVolume": "true"
      "rootPath": /volumes/media/Music
    # volumeHandle can be anything, need not to be same
    # as PV name or volume name. keeping same for brevity
    volumeHandle: ceph-filesystem-media-music
  persistentVolumeReclaimPolicy: Retain
  volumeMode: Filesystem
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ceph-filesystem-media-music
  namespace: downloads
  labels:
    backup: "false"
spec:
  accessModes:
  - ReadWriteMany
  storageClassName: "ceph-filesystem-storage"
  resources:
    requests:
      storage: 124T
  volumeMode: Filesystem
  # volumeName should be same as PV name
  volumeName: ceph-filesystem-media-music