
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app frigate
spec:
  dependsOn:
  - name: emqx
    namespace: home-automation
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.7.1
      interval: 15m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: uninstall
  rollback:
    recreate: true
    cleanupOnFail: true
  uninstall:
    keepHistory: false
  values:
    global:
      nameOverride: *app
      fullnameOverride: *app

    controllers:
      frigate:
        annotations:
          reloader.stakater.com/auto: "true"
          configmap.reloader.stakater.com/reload: "frigate-config"

        containers:
          app:
            image:
              repository: ghcr.io/blakeblackshear/frigate
              tag: 0.15.0@sha256:dc77295ccc5a7258510ab6b1d9d5b7a339027305e2d29224338534febc4d1e89
              # tag: 0.12.1
              pullPolicy: IfNotPresent
            env:
              TZ: "${TIMEZONE}"
              FRIGATE__INSTANCE_NAME: Frigate
              FRIGATE__PORT: &port 8971
              FRIGATE__APPLICATION_URL: &host "frigate.${INGRESS_DOMAIN}"
              FRIGATE__LOG_LEVEL: info
            envFrom:
            - secretRef:
                name: frigate-secrets
            resources:
              requests:
                memory: 2G
              limits:
                gpu.intel.com/i915: 1
                memory: 6G
            securityContext:
              privileged: true
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/version
                    port: 5000
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes

    defaultPodOptions:
      # securityContext:
      #   # runAsNonRoot: true
      #   # runAsUser: ${APP_UID}
      #   # runAsGroup: ${APP_GID}
      #   fsGroup: ${APP_GID}
      #   fsGroupChangePolicy: OnRootMismatch
      #   supplementalGroups: [34, 44, 100, 109, 10000]
      #   seccompProfile: { type: RuntimeDefault }
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values: ["plex"]
            # Blank selector selects all namespaces. Null namespace selector locks it to the same namespace as the HR
            namespaces: ["media", "downloads", "home-automation"]
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        google.feature.node.kubernetes.io/coral: "true"
        intel.feature.node.kubernetes.io/gpu: "true"

    service:
      app:
        controller: *app
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: "${LB_FRIGATE}"
        ports:
          http:
            port: *port
          rtsp:
            enabled: true
            port: 8554
          go2rtc:
            enabled: true
            port: 1984
          srtp:
            enabled: false
            port: 8443
          webrtc:
            enabled: false
            port: 8555

    persistence:
      config:
        enabled: true
        existingClaim: ${VOLSYNC_CLAIM}
        advancedMounts:
          frigate:
            app:
            - path: /config
              subPath: config
            - path: /data
              subPath: data
      cert:
        enabled: true
        type: secret
        name: frigate-cert
        # defaultMode: 0600
        advancedMounts:
          frigate:
            app:
            - subPath: "tls.crt"
              path: "/etc/letsencrypt/live/frigate/fullchain.pem"
              readOnly: true
            - subPath: "tls.key"
              path: "/etc/letsencrypt/live/frigate/privkey.pem"
              readOnly: true
      media:
        enabled: true
        existingClaim: ceph-filesystem-${APP}-security-footage
        advancedMounts:
          frigate:
            app:
            - path: /media
      usb:
        enabled: true
        type: hostPath
        hostPath: /dev/bus/usb
        hostPathType: Directory
        advancedMounts:
          frigate:
            app:
            - path: /dev/bus/usb
      cache:
        enabled: true
        type: emptyDir
        medium: Memory
        sizeLimit: 2Gi
        advancedMounts:
          frigate:
            app:
            - path: /dev/shm

    ingress:
      app:
        enabled: true
        className: "internal-nginx"
        annotations:
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        hosts:
        - host: *host
          paths:
          - path: /
            service:
              identifier: app
              port: http
        tls:
        - hosts:
          - *host
