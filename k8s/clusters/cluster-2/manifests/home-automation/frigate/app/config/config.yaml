---
# yaml-language-server: $schema=https://demo.frigate.video/api/config/schema.json
logger:
  default: info
  # logs:
  #   frigate.record: debug

birdseye:
  enabled: false

mqtt:
  host: "{FRIGATE_MQTT_SERVER}"
  # host: 10.200.2.59
  port: 1883
  topic_prefix: frigate
  user: "{FRIGATE_MQTT_USERNAME}"
  password: "{FRIGATE_MQTT_PASSWORD}"

database:
  path: /data/frigate.db

detectors:
  coral:
    type: edgetpu
    device: usb

ffmpeg:
  global_args: ["-hide_banner", "-loglevel", "warning"]
  hwaccel_args: preset-vaapi
  # hwaccel_args: preset-intel-qsv-h265
  # hwaccel_args: ["-hwaccel", "vaapi", "-hwaccel_device", "/dev/dri/renderD128", "-hwaccel_output_format", "yuv420p"]

# Global snapshots configuration
snapshots:
  enabled: true
  timestamp: false
  bounding_box: true
  retain:
    default: 14

record:
  sync_recordings: true
  enabled: true
  retain:
    days: 3
    mode: motion

objects:
  track:
    - person
    - dog
    - car
    - cat
    - bird
    - bicycle
    - deer
  filters:
    person:
      min_area: 5000
      max_area: 100000
      threshold: 0.7

semantic_search:
  # Optional: Enable semantic search
  enabled: True
  # Optional: Re-index embeddings database from historical tracked objects 
  reindex: True
  # Optional: Set the model size used for embeddings. (default: shown below)
  # NOTE: small model runs on CPU and large model runs on GPU
  model_size: "large"

# Optional: Configuration for AI generated tracked object descriptions
# NOTE: Semantic Search must be enabled for this to do anything.
# WARNING: Depending on the provider, this will send thumbnails over the internet
# to Google or OpenAI's LLMs to generate descriptions. It can be overridden at
# the camera level (enabled: False) to enhance privacy for indoor cameras.
genai:
  # Optional: Enable AI description generation (default: shown below)
  enabled: False
  # Required if enabled: Provider must be one of ollama, gemini, or openai
  provider: ollama
  # Required if provider is ollama. May also be used for an OpenAI API compatible backend with the openai provider.
  base_url: http://localhost::11434
  # Required if gemini or openai
  api_key: "{FRIGATE_GENAI_API_KEY}"
  # Optional: The default prompt for generating descriptions. Can use replacement
  # variables like "label", "sub_label", "camera" to make more dynamic. (default: shown below)
  prompt: "Describe the {label} in the sequence of images with as much detail as possible. Do not describe the background."
  # Optional: Object specific prompts to customize description results
  # Format: {label}: {prompt}
  object_prompts:
    person: "My special person prompt."

# Optional: Restream configuration
# Uses https://github.com/AlexxIT/go2rtc (v1.2.0)
go2rtc:
  streams:
    server_room_hq:
      - rtsp://{FRIGATE_MQTT_USERNAME}:{FRIGATE_MQTT_PASSWORD}@{FRIGATE_CAMERA_1_HOST}:554/cam/realmonitor?channel=1&subtype=0
    server_room_lq:
      - rtsp://{FRIGATE_MQTT_USERNAME}:{FRIGATE_MQTT_PASSWORD}@{FRIGATE_CAMERA_1_HOST}:554/cam/realmonitor?channel=1&subtype=1
    front_door_hq:
      - rtsp://{FRIGATE_MQTT_USERNAME}:{FRIGATE_MQTT_PASSWORD}@{FRIGATE_CAMERA_2_HOST}:554/h264Preview_01_main
    front_door_lq:
      - rtsp://{FRIGATE_MQTT_USERNAME}:{FRIGATE_MQTT_PASSWORD}@{FRIGATE_CAMERA_2_HOST}:554/h264Preview_01_sub
    outside_garage_hq:
      - rtsp://{FRIGATE_MQTT_USERNAME}:{FRIGATE_MQTT_PASSWORD}@{FRIGATE_CAMERA_3_HOST}:554/cam/realmonitor?channel=1&subtype=0
    outside_garage_lq:
      - rtsp://{FRIGATE_MQTT_USERNAME}:{FRIGATE_MQTT_PASSWORD}@{FRIGATE_CAMERA_3_HOST}:554/cam/realmonitor?channel=1&subtype=1
    driveway_hq:
      - rtsp://{FRIGATE_MQTT_USERNAME}:{FRIGATE_MQTT_PASSWORD}@{FRIGATE_CAMERA_4_HOST}:554/cam/realmonitor?channel=1&subtype=0
    driveway_lq:
      - rtsp://{FRIGATE_MQTT_USERNAME}:{FRIGATE_MQTT_PASSWORD}@{FRIGATE_CAMERA_4_HOST}:554/cam/realmonitor?channel=1&subtype=1

# Specify camera's
cameras:
  server_room:
    ffmpeg:
      output_args:
        record: preset-record-generic-audio-copy
      inputs:
        - path: rtsp://127.0.0.1:8554/server_room_hq?video=copy&audio=aac
          input_args: preset-rtsp-restream
          roles:
            - record
        - path: rtsp://127.0.0.1:8554/server_room_lq?video=copy
          input_args: preset-rtsp-restream
          roles:
            - detect
    detect:
      width: 704
      height: 480
      fps: 30
  front_door:
    ffmpeg:
      output_args:
        record: preset-record-generic-audio-copy
      inputs:
        - path: rtsp://127.0.0.1:8554/front_door_hq?video=copy&audio=aac
          input_args: preset-rtsp-restream
          roles:
            - record
        - path: rtsp://127.0.0.1:8554/front_door_lq?video=copy
          input_args: preset-rtsp-restream
          roles:
            - detect
    detect:
      width: 640
      height: 480
      fps: 15
    objects:
      track:
        - person
        - dog
        - cat
        - bird
        - bicycle
        - deer
  outside_garage:
    ffmpeg:
      output_args:
        record: preset-record-generic-audio-copy
      inputs:
        - path: rtsp://127.0.0.1:8554/outside_garage_hq?video=copy&audio=aac
          input_args: preset-rtsp-restream
          roles:
            - record
        - path: rtsp://127.0.0.1:8554/outside_garage_lq?video=copy
          input_args: preset-rtsp-restream
          roles:
            - detect
    detect:
      width: 704
      height: 480
      fps: 30
  driveway:
    ffmpeg:
      output_args:
        record: preset-record-generic-audio-copy
      inputs:
        - path: rtsp://127.0.0.1:8554/drivway_hq?video=copy&audio=aac
          input_args: preset-rtsp-restream
          roles:
            - record
        - path: rtsp://127.0.0.1:8554/driveway_lq?video=copy
          input_args: preset-rtsp-restream
          roles:
            - detect
    detect:
      width: 704
      height: 480
      fps: 30