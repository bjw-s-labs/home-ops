apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app esphome
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.7.2
      interval: 15m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: uninstall
  rollback:
    recreate: true
    cleanupOnFail: true
  uninstall:
    keepHistory: false
  values:
    controllers:
      esphome:
        annotations:
          secret.reloader.stakater.com/reload: esphome-secrets,esphome-deploykey
          reloader.stakater.com/auto: "true"
        pod:
          annotations:
            # DO NOT ENABLE
            # Enabling this adds an extra default route to the container. My IoT network is locked down tight and results in failed external DNS lookups
            # k8s.v1.cni.cncf.io/networks: home-automation-iot-dhcp
            k8s.v1.cni.cncf.io/networks: |
              [{
                "name":"multus-iot",
                "namespace": "network",
                "ips": ["10.10.100.12/24"],
                "mac": "aa:e9:02:a4:7e:78"
              }]
          securityContext:
            runAsUser: 0
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch

        containers:
          app:
            image:
              repository: esphome/esphome
              tag: 2025.2.2@sha256:3dfeee93031a057642f2d082fa6a938c72ad8ff30bb634c6bbe74f4a2986629a
              pullPolicy: IfNotPresent
            env:
              TZ: "${TIMEZONE}"
              ESPHOME_DASHBOARD_USE_PING: true
              ESPHOME__INSTANCE_NAME: ESPHome
              ESPHOME__PORT: &port 6052
              ESPHOME__APPLICATION_URL: &host "esphome.${INGRESS_DOMAIN}"
              ESPHOME__LOG_LEVEL: info
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            resources:
              requests:
                memory: "256M"
              limits:
                memory: "8G"
            ## DO NOT ADD THIS. Causes it to not be able to build due to permissions. Needs a custom container image
            # securityContext:
            #   allowPrivilegeEscalation: false
            #   readOnlyRootFilesystem: true
            #   capabilities:
            #     drop:
            #     - ALL
          code-server:
            image:
              repository: ghcr.io/coder/code-server
              tag: 4.97.2@sha256:6ff0e9cf5a553b3961ece200be75e21e8c887ed0ae28a7c28213722dccf74b0c
            args:
            - --auth
            - none
            - --disable-telemetry
            - --disable-update-check
            - --user-data-dir
            - /config/.code-server
            - --extensions-dir
            - /config/.code-server
            - --port
            - "12321"
            - /config
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 512Mi

    defaultPodOptions:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values: [ "multus" ]
            topologyKey: kubernetes.io/hostname
            namespaceSelector: {}

    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
          code-server:
            port: 12321

    persistence:
      config:
        enabled: true
        existingClaim: ${VOLSYNC_CLAIM}
        advancedMounts:
          esphome:
            app:
            - path: /config
            code-server:
            - path: /config
      cache:
        type: emptyDir
        advancedMounts:
          esphome:
            app:
            - path: /cache # ESPHome auto detect a folder at `/cache` and will use that instead
      deploy-key:
        type: secret
        name: esphome-deploykey
        defaultMode: 256
        advancedMounts:
          esphome:
            code-server:
            - path: /home/coder/.ssh/id_ed25519
              subPath: id_ed25519
            - path: /home/coder/.ssh/id_ed25519.pub
              subPath: id_ed25519.pub

    ingress:
      app:
        enabled: true
        className: "internal-nginx"
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: /$1
        #   cert-manager.io/cluster-issuer: letsencrypt-production
        #   external-dns.alpha.kubernetes.io/target: ingress.${INGRESS_DOMAIN}
        #   external-dns/is-public: "false"
        #   external-dns/powerdns: "true"
        hosts:
        - host: *host
          paths:
          - path: /(.*)
            service:
              identifier: app
              port: http
          - path: /code/(.*)
            service:
              identifier: app
              port: code-server
        tls:
        - hosts:
          - *host
