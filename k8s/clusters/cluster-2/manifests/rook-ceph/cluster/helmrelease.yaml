# yaml-language-server: $schema=https://github.com/fluxcd-community/flux2-schemas/raw/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
  namespace: rook-ceph
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: rook-ceph-cluster
      version: v1.16.5
      sourceRef:
        kind: HelmRepository
        name: rook-ceph-charts
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
  - name: rook-ceph-operator
    namespace: rook-ceph
  - name: snapshot-controller
    namespace: system
  values:
    monitoring:
      enabled: true
      createPrometheusRules: true
    ingress:
      dashboard:
        ingressClassName: "internal-nginx"
        # annotations:
        #   nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        #   nginx.ingress.kubernetes.io/configuration-snippet: |
        #     proxy_ssl_protocols TLSv1.3;
        host:
          name: &host "rook.${INGRESS_DOMAIN}"
          path: "/"
        tls:
        - hosts:
          - *host
    toolbox:
      enabled: true
      image: quay.io/ceph/ceph:v19.2.1
    # configOverride: |
    #   [global]
    #   bdev_enable_discard = true
    #   bdev_async_discard = true
    #   osd_class_update_on_start = false
    #   bluefs_buffered_io = false
    #   # Enables subdomain style S3 endpoints
    #   # Cannot enable for Rook Ceph. Causes issues with reconciling Cephobjectstores
    #   # rgw_dns_name = s3.cluster-2.elcarpenter.com
    #   # rgw_resolve_cname = true
    #   # ALERTMANAGER_API_HOST
    #   # PROMETHEUS_API_HOST
    #   [mon]
    #   mon_data_avail_warn = 20
    #   [osd]
    #   bluestore_min_alloc_size_hdd = 65536
    #   osd_max_backfills = 6
    #   osd_recovery_max_active_hdd = 16
    #   # Default is false. Set to true to auto repair inconsensistencies on EC & bluestore pools
    #   osd_scrub_auto_repair = true
    #   # Default is 5
    #   osd_scrub_auto_repair_num_errors = 5
    #   # WPQ should help in cases where a few OSDs are more overloaded than others.
    #   osd_op_queue = wpq
    #   # Increase deep scrub to allow HDDs time to get scrubbed. Default is 604800 (7 days)
    #   # Currently set to 4 weeks
    #   osd deep scrub interval = 2419200
    #   # Scrubbing does not happen when the system load, as defined by getloadavg() / number of online CPUs, is higher than this defined number.
    #   osd_scrub_load_threshold = 2
    configOverride: |
      [osd]
      osd_max_backfills = 6
      osd_recovery_max_active_hdd = 16
      # Default is false. Set to true to auto repair inconsensistencies on EC & bluestore pools
      osd_scrub_auto_repair = true

    cephClusterSpec:
      cephVersion:
        image: quay.io/ceph/ceph:v19.2.1
      cephConfig:
        global:
          bdev_enable_discard: "true" # quote
          bdev_async_discard_threads: "1" # quote   4 caused nodes to overload CPU
          osd_class_update_on_start: "false" # quote
          # Cant enable due to `Module 'diskprediction_local' has failed: No module named 'sklearn.svm.classes'`
          # device_failure_prediction_mode: local # requires mgr module
        mgr:
          mgr/crash/warn_recent_interval: "7200" # 2h
        osd:
          bluestore_min_alloc_size_hdd: "65536"
          osd_max_backfill: "6"
          osd_recovery_max_active_hdd: "16"
      mgr:
        count: 2
        allowMultiplePerNode: false
        modules:
        # Several modules should not need to be included in this list. The "dashboard" and "monitoring" modules
        # are already enabled by other settings in the cluster CR.
        - name: pg_autoscaler
          enabled: true
        # Start non-default
        - name: rook
          enabled: true
        - name: insights
          enabled: true
        - name: diskprediction_local
          enabled: false # Causes a error, see above about device failure     

      mon:
        count: 3
        allowMultiplePerNode: false
      network:
        provider: host
        addressRanges:
          public:
          - "10.200.40.0/24"
          cluster:
          - "10.200.2.0/24"
        connections:
          requireMsgr2: true
        # Allows monitors to get external services
        multiClusterService:
          enabled: false
      placement:
        prepareosd:
          tolerations:
          - key: storage-node
            operator: Exists
            effect: "NoSchedule"
        osd:
          tolerations:
          - key: storage-node
            operator: Exists
            effect: "NoSchedule"
        mon:
          tolerations:
          - key: node-role.kubernetes.io/control-plane
            operator: Exists
            effect: "NoSchedule"
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: node-role.kubernetes.io/control-plane
                  operator: Exists
      resources:
        osd:
          limits:
            # cpu: 1000m
            memory: 3072Mi
          requests:
            cpu: 500m
            memory: 1024Mi
        crashcollector:
          requests:
            cpu: "1m"
      crashCollector:
        disable: false
      csi:
        readAffinity:
          enabled: true
      dashboard:
        enabled: true
        urlPrefix: /
        ssl: false
        prometheusEndpoint: http://kube-prometheus-stack-prometheus.monitoring.svc:9090
      # The option to automatically remove OSDs that are out and are safe to destroy.
      removeOSDsIfOutAndSafeToRemove: true
      storage:
        useAllNodes: false
        useAllDevices: false
        config:
          osdsPerDevice: "1"
        nodes:
        - name: work1
          devices:
          # HDDs
          - name: "/dev/disk/by-id/ata-TOSHIBA_MG08ACA16TE_6180A056FVGG"
            config:
              metadataDevice: "/dev/disk/by-id/ata-OCZ_INTREPID_3800_A22L7061515001100"
          - name: "/dev/disk/by-id/ata-TOSHIBA_MG08ACA16TE_71K0A0Q4FVGG"
            config:
              metadataDevice: "/dev/disk/by-id/ata-OCZ_INTREPID_3800_A22L7061515001100"
        - name: work2
          devices:
          # HDDs
          - name: "/dev/disk/by-id/ata-ST16000NM005G-2KH133_ZL2EJL04"
            config:
              metadataDevice: "/dev/disk/by-id/ata-VK0800GDJYA_BTWL341407WN800RGN"
          - name: "/dev/disk/by-id/ata-ST18000NM000J-2TV103_ZR5061XS"
            config:
              metadataDevice: "/dev/disk/by-id/ata-VK0800GDJYA_BTWL341407WN800RGN"
        - name: work3
          devices:
          # HDDs
          - name: "/dev/disk/by-id/ata-ST16000NM001G-2KK103_ZL2JTCBF"
            config:
              metadataDevice: "/dev/disk/by-id/ata-CT2000MX500SSD1_2138E5D37C37"
          - name: "/dev/disk/by-id/ata-ST18000NM000J-2TV103_ZR5060G7"
            config:
              metadataDevice: "/dev/disk/by-id/ata-CT2000MX500SSD1_2138E5D37C37"
        - name: work4
          devices:
          # HDDs
          - name: "/dev/disk/by-id/ata-TOSHIBA_MG08ACA16TE_71K0A0NNFVGG"
            config:
              metadataDevice: "/dev/disk/by-id/ata-MTFDDAK1T9TCB_171516BD04C2"
          - name: "/dev/disk/by-id/ata-ST18000NM000J-2TV103_WR500Y0J"
            config:
              metadataDevice: "/dev/disk/by-id/ata-MTFDDAK1T9TCB_171516BD04C2"
        - name: work9
          devices:
          # NVMe
          - name: "/dev/disk/by-id/nvme-ADATA_SX8200PNP_2K302L2E11RJ"

        - name: n100-04
          devices:
          # HDDs
          - name: "/dev/disk/by-id/usb-ST16000N_M000J-2TW103_00000000006E-0:1"
            config:
              metadataDevice: "/dev/disk/by-id/nvme-ADATA_SX8200PNP_2K1020024662"
          - name: "/dev/disk/by-id/usb-ST16000N_M001G-2KK103_00000000006E-0:0"
            config:
              metadataDevice: "/dev/disk/by-id/nvme-ADATA_SX8200PNP_2K1020024662"
          # NVMe
          - name: "/dev/disk/by-id/nvme-Samsung_SSD_990_EVO_1TB_S7M3NL0XA13919R"

        - name: n100-05
          devices:
          # HDDs
          - name: "/dev/disk/by-id/ata-ST16000NM000J-2TW103_WRS05FXH"
            config:
              metadataDevice: "/dev/disk/by-id/nvme-ADATA_SX8200PNP_2K1520024111"
          - name: "/dev/disk/by-id/ata-ST16000NM001G-2KK103_ZL2JT6BZ"
            config:
              metadataDevice: "/dev/disk/by-id/nvme-ADATA_SX8200PNP_2K1520024111"
          # NVMe
          - name: "/dev/disk/by-id/nvme-Samsung_SSD_990_EVO_1TB_S7M3NL0XA03063W"

        - name: n100-06
          devices:
          # HDDs
          - name: "/dev/disk/by-id/ata-TOSHIBA_MG08ACA16TE_6180A008FVGG"
            config:
              metadataDevice: "/dev/disk/by-id/nvme-ADATA_SX8200PNP_2K1020026193"
          - name: "/dev/disk/by-id/ata-TOSHIBA_MG08ACA16TE_6180A028FVGG"
            config:
              metadataDevice: "/dev/disk/by-id/nvme-ADATA_SX8200PNP_2K1020026193"
          # NVMe
          - name: "/dev/disk/by-id/nvme-WDC_WDS100T2B0C-00PXH0_211603A00104"

        - name: n100-07
          devices:
          # HDDs
          - name: "/dev/disk/by-id/ata-ST16000NM001G-2KK103_ZL2N7J9V"
            config:
              metadataDevice: "/dev/disk/by-id/nvme-SAMSUNG_MZVKW512HMJP-000H1_S34CNX0J600772"
          - name: "/dev/disk/by-id/ata-TOSHIBA_MG08ACA16TE_6180A067FVGG"
            config:
              metadataDevice: "/dev/disk/by-id/nvme-SAMSUNG_MZVKW512HMJP-000H1_S34CNX0J600772"
          # NVMe
          - name: "/dev/disk/by-id/nvme-INTEL_SSDPEKNW010T8_BTNH933518TQ1P0B"

    cephBlockPools:
    - name: ceph-blockpool-nvme
      spec:
        deviceClass: nvme
        failureDomain: host
        replicated:
          size: 2
      storageClass:
        enabled: true
        name: ceph-blockpool-nvme
        isDefault: true
        reclaimPolicy: Delete
        allowVolumeExpansion: true
        mountOptions: [ "discard" ]
        parameters:
          imageFormat: "2"
          imageFeatures: layering
          # Cannot enable without creating a new blockpool. Will do this on next rebuild
          # imageFeatures: layering,exclusive-lock,object-map,fast-diff,deep-flatten
          csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
          csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
          csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
          csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
          csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
          csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
          csi.storage.k8s.io/fstype: ext4
    cephBlockPoolsVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-blockpool
      isDefault: true
      deletionPolicy: Delete

    cephFileSystems:
    - name: &cephFileSystemName ceph-filesystem
      spec:
        # Default is true. Setting to false will allow the ceph-operator to delete the pools when deleting the filesystem
        preservePoolsOnDelete: false
        metadataPool:
          failureDomain: host
          deviceClass: nvme
          replicated:
            size: 3
        dataPools:
        - name: data0
          failureDomain: host
          deviceClass: hdd
          replicated:
            size: 3
        - name: erasurecoded
          failureDomain: host
          deviceClass: hdd
          erasureCoded:
            dataChunks: 6
            codingChunks: 2
        metadataServer:
          activeCount: 1
          activeStandby: true
          priorityClassName: system-cluster-critical
          placement:
            topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: ceph-mds
                  app.kubernetes.io/part-of: *cephFileSystemName
          resources:
            requests:
              cpu: 100m
              memory: 1Gi
            limits:
              memory: 4Gi
      storageClass:
        enabled: true
        isDefault: false
        name: ceph-filesystem
        pool: erasurecoded
        reclaimPolicy: Delete
        allowVolumeExpansion: true
        parameters:
          csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
          csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
          csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
          csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
          csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
          csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
          csi.storage.k8s.io/fstype: ext4
    cephFileSystemVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-filesystem
      isDefault: false
      deletionPolicy: Delete
    cephObjectStores:
    - name: &cephObjectStoreName ceph-objectstore-1
      spec:
        deviceClass: nvme
        metadataPool:
          deviceClass: nvme
          failureDomain: host
          replicated:
            size: 2
        dataPool:
          deviceClass: nvme
          failureDomain: host
          replicated:
            size: 2
        preservePoolsOnDelete: false
        gateway:
          port: 80
          resources:
            requests:
              cpu: 250m
              memory: 1Gi
            limits:
              memory: 3Gi
          instances: 2
          placement:
            topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: ceph-rgw
                  app.kubernetes.io/part-of: *cephObjectStoreName
        healthCheck:
          bucket:
            interval: 60s
      storageClass:
        enabled: true
        name: ceph-bucket
        reclaimPolicy: Delete
        parameters:
          region: us-east-1
      ingress:
        enabled: true
        ingressClassName: "internal-nginx"
        host:
          name: &host-s3 "s3.${INGRESS_DOMAIN}"
          path: "/"
        tls:
        - hosts:
          - *host-s3
