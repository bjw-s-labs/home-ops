# yaml-language-server: $schema=https://github.com/fluxcd-community/flux2-schemas/raw/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
  namespace: rook-ceph
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: rook-ceph-cluster
      version: v1.14.8
      sourceRef:
        kind: HelmRepository
        name: rook-ceph-charts
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
  - name: rook-ceph-operator
    namespace: rook-ceph
  - name: snapshot-controller
    namespace: system
  values:
    monitoring:
      enabled: true
      createPrometheusRules: true
    ingress:
      dashboard:
        ingressClassName: "internal-nginx"
        # annotations:
        #   nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        #   nginx.ingress.kubernetes.io/configuration-snippet: |
        #     proxy_ssl_protocols TLSv1.3;
        host:
          name: &host "rook.${CLUSTER_NAME}.${INGRESS_DOMAIN}"
          path: "/"
        tls:
        - hosts:
          - *host
    toolbox:
      enabled: true
      image: quay.io/ceph/ceph:v18.2.2
    configOverride: |
      [global]
      bdev_enable_discard = true
      bdev_async_discard = true
      osd_class_update_on_start = false
      bluefs_buffered_io = false
      # Enables subdomain style S3 endpoints
      # Cannot enable for Rook Ceph. Causes issues with reconciling Cephobjectstores
      # rgw_dns_name = s3.cluster-2.elcarpenter.com
      # rgw_resolve_cname = true

      [mon]
      mon_data_avail_warn = 20

      [osd]
      bluestore_min_alloc_size_hdd = 65536
      osd_max_backfills = 6
      osd_recovery_max_active_hdd = 16
      # Default is false. Set to true to auto repair inconsensistencies on EC & bluestore pools
      osd_scrub_auto_repair = true
      # Default is 5
      osd_scrub_auto_repair_num_errors = 5
      # WPQ should help in cases where a few OSDs are more overloaded than others.
      osd_op_queue = wpq
      # Increase deep scrub to allow HDDs time to get scrubbed. Default is 604800 (7 days)
      # Currently set to 3 weeks
      osd deep scrub interval = 1814400

    cephClusterSpec:
      cephVersion:
        image: quay.io/ceph/ceph:v18.2.2
      mgr:
        count: 2
        allowMultiplePerNode: false
        modules:
        # Several modules should not need to be included in this list. The "dashboard" and "monitoring" modules
        # are already enabled by other settings in the cluster CR.
        - name: pg_autoscaler
          enabled: true
        # Start non-default
        - name: rook
          enabled: true

      mon:
        count: 3
        allowMultiplePerNode: false
      network:
        provider: host
        addressRanges:
          public:
          - "10.200.40.0/24"
          cluster:
          - "10.200.2.0/24"
        # Allows monitors to get external services
        multiClusterService:
          enabled: false
      placement:
        prepareosd:
          tolerations:
          - key: storage-node
            operator: Exists
            effect: "NoSchedule"
        osd:
          tolerations:
          - key: storage-node
            operator: Exists
            effect: "NoSchedule"
        mon:
          tolerations:
          - key: node-role.kubernetes.io/control-plane
            operator: Exists
            effect: "NoSchedule"
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: node-role.kubernetes.io/control-plane
                  operator: Exists
      resources:
        mgr:
          limits:
            cpu: 1500m
            memory: 1024Mi
          requests:
            cpu: 500m
            memory: 256Mi
        mon:
          limits:
            cpu: 1000m
            memory: 1280Mi
          requests:
            cpu: 100m
            memory: 256Mi
        osd:
          limits:
            # cpu: 1000m
            memory: 3072Mi
          requests:
            cpu: 500m
            memory: 1024Mi
        # prepareosd:
        #   limits:
        #     cpu: 1000m
        #     memory: 400Mi
        #   requests:
        #     cpu: 100m
        #     memory: 200Mi
        mgr-sidecar:
          limits:
            cpu: 500m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 40Mi
        crashcollector:
          limits:
            cpu: 100m
            memory: 220M
          requests:
            cpu: 15m
            memory: 64M
        logcollector:
          limits:
            cpu: "500m"
            memory: "1Gi"
          requests:
            cpu: "100m"
            memory: "100Mi"
        cleanup:
          limits:
            cpu: "500m"
            memory: "1Gi"
          requests:
            cpu: "100m"
            memory: "100Mi"
        exporter:
          limits:
            cpu: "500m"
            memory: "128Mi"
          requests:
            cpu: "50m"
            memory: "50Mi"
      crashCollector:
        disable: false
      dashboard:
        enabled: true
        urlPrefix: /
        ssl: false
        prometheusEndpoint: http://kube-prometheus-stack-prometheus.monitoring.svc:9090
      # The option to automatically remove OSDs that are out and are safe to destroy.
      removeOSDsIfOutAndSafeToRemove: true
      storage:
        useAllNodes: false
        useAllDevices: false
        config:
          osdsPerDevice: "1"
        nodes:
        - name: work1
          devices:
          # HDDs
          - name: "/dev/disk/by-id/ata-TOSHIBA_MG08ACA16TE_6180A056FVGG"
            config:
              metadataDevice: "/dev/disk/by-id/ata-OCZ_INTREPID_3800_A22L7061515001100"
          - name: "/dev/disk/by-id/ata-TOSHIBA_MG08ACA16TE_71K0A0Q4FVGG"
            config:
              metadataDevice: "/dev/disk/by-id/ata-OCZ_INTREPID_3800_A22L7061515001100"
        - name: work2
          devices:
          # HDDs
          - name: "/dev/disk/by-id/ata-ST16000NM005G-2KH133_ZL2EJL04"
            config:
              metadataDevice: "/dev/disk/by-id/ata-VK0800GDJYA_BTWL341407WN800RGN"
          - name: "/dev/disk/by-id/ata-ST18000NM000J-2TV103_ZR5061XS"
            config:
              metadataDevice: "/dev/disk/by-id/ata-VK0800GDJYA_BTWL341407WN800RGN"
              # SSDs
              # - name: "/dev/disk/by-id/ata-Samsung_SSD_860_EVO_500GB_S598NJ0NA65760N"
        - name: work3
          devices:
          # HDDs
          - name: "/dev/disk/by-id/ata-ST16000NM001G-2KK103_ZL2JTCBF"
            config:
              metadataDevice: "/dev/disk/by-id/ata-CT2000MX500SSD1_2138E5D37C37"
          - name: "/dev/disk/by-id/ata-ST18000NM000J-2TV103_ZR5060G7"
            config:
              metadataDevice: "/dev/disk/by-id/ata-CT2000MX500SSD1_2138E5D37C37"
          # SSDs
          - name: "/dev/disk/by-id/ata-Samsung_SSD_860_EVO_500GB_S598NJ0NA65754E"
        - name: work4
          devices:
          # HDDs
          - name: "/dev/disk/by-id/ata-TOSHIBA_MG08ACA16TE_71K0A0NNFVGG"
            config:
              metadataDevice: "/dev/disk/by-id/ata-MTFDDAK1T9TCB_171516BD04C2"
          - name: "/dev/disk/by-id/ata-ST18000NM000J-2TV103_WR500Y0J"
            config:
              metadataDevice: "/dev/disk/by-id/ata-MTFDDAK1T9TCB_171516BD04C2"
        - name: work5
          devices:
          # HDDs
          - name: "/dev/disk/by-id/ata-ST16000NM001G-2KK103_ZL2N7J9V"
            config:
              metadataDevice: "/dev/disk/by-id/ata-Samsung_SSD_860_EVO_500GB_S598NJ0NA65749Z"
          - name: "/dev/disk/by-id/ata-TOSHIBA_MG08ACA16TE_6180A067FVGG"
            config:
              metadataDevice: "/dev/disk/by-id/ata-Samsung_SSD_860_EVO_500GB_S598NJ0NA65749Z"
        - name: work6
          devices:
          # HDDs
          - name: "/dev/disk/by-id/ata-TOSHIBA_MG08ACA16TE_6180A008FVGG"
            config:
              metadataDevice: "/dev/disk/by-id/ata-VK0800GDJYA_BTWL342500JH800RGN"
          - name: "/dev/disk/by-id/ata-TOSHIBA_MG08ACA16TE_6180A028FVGG"
            config:
              metadataDevice: "/dev/disk/by-id/ata-VK0800GDJYA_BTWL342500JH800RGN"
        - name: work7
          devices:
          # HDDs
          - name: "/dev/disk/by-id/ata-ST16000NM000J-2TW103_WRS05FXH"
            config:
              metadataDevice: "/dev/disk/by-id/ata-Samsung_SSD_860_EVO_500GB_S598NJ0NA65759X"
          - name: "/dev/disk/by-id/ata-ST16000NM001G-2KK103_ZL2JT6BZ"
            config:
              metadataDevice: "/dev/disk/by-id/ata-Samsung_SSD_860_EVO_500GB_S598NJ0NA65759X"
          # SSDs
          - name: "/dev/disk/by-id/ata-VK0800GDJYA_BTWL4203006R800RGN"
        - name: work8
          deviceFilter: ^sd[a-c]
        - name: work9
          devices:
          # NVMe
          - name: "/dev/disk/by-id/nvme-ADATA_SX8200PNP_2K302L2E11RJ"
        - name: work10
          devices:
          # NVMe
          - name: "/dev/disk/by-id/nvme-INTEL_SSDPEKNW010T8_BTNH933518TQ1P0B"
        - name: work11
          devices:
          # NVMe
          - name: "/dev/disk/by-id/nvme-WDC_WDS100T2B0C-00PXH0_211603A00104"
    cephBlockPools:
    # - name: ceph-blockpool
    #   spec:
    #     deviceClass: ssd
    #     failureDomain: host
    #     replicated:
    #       size: 2
    #   storageClass:
    #     enabled: true
    #     name: ceph-block
    #     isDefault: false
    #     reclaimPolicy: Delete
    #     allowVolumeExpansion: true
    #     mountOptions: ["discard"]
    #     parameters:
    #       imageFormat: "2"
    #       imageFeatures: layering
    #       csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
    #       csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
    #       csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
    #       csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
    #       csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
    #       csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
    #       csi.storage.k8s.io/fstype: ext4
    - name: ceph-blockpool-nvme
      spec:
        deviceClass: nvme
        failureDomain: host
        replicated:
          size: 2
      storageClass:
        enabled: true
        name: ceph-blockpool-nvme
        isDefault: true
        reclaimPolicy: Delete
        allowVolumeExpansion: true
        mountOptions: ["discard"]
        parameters:
          imageFormat: "2"
          imageFeatures: layering
          csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
          csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
          csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
          csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
          csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
          csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
          csi.storage.k8s.io/fstype: ext4
    cephBlockPoolsVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-blockpool
      isDefault: false
      deletionPolicy: Delete

    cephFileSystems:
    - name: &cephFileSystemName ceph-filesystem
      spec:
        # Default is true. Setting to false will allow the ceph-operator to delete the pools when deleting the filesystem
        preservePoolsOnDelete: false
        metadataPool:
          failureDomain: host
          deviceClass: nvme
          replicated:
            size: 2
        dataPools:
        - name: data0
          failureDomain: host
          deviceClass: hdd
          replicated:
            size: 3
        - name: erasurecoded
          failureDomain: host
          deviceClass: hdd
          erasureCoded:
            dataChunks: 6
            codingChunks: 2
            # - name: erasurecoded-ssd
            #   failureDomain: host
            #   deviceClass: ssd
            #   erasureCoded:
            #     dataChunks: 6
            #     codingChunks: 2
            #   quota:
            #     maxSize: 500G
        metadataServer:
          activeCount: 2
          activeStandby: true
          placement:
            topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: ceph-mds
                  app.kubernetes.io/part-of: *cephFileSystemName
          resources:
            requests:
              cpu: 1000m
              memory: 512Mi
            limits:
              cpu: 2000m
              memory: 4Gi
      storageClass:
        enabled: true
        isDefault: false
        name: ceph-filesystem
        pool: erasurecoded
        reclaimPolicy: Delete
        allowVolumeExpansion: true
        parameters:
          csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
          csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
          csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
          csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
          csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
          csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
          csi.storage.k8s.io/fstype: ext4
    cephFileSystemVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-filesystem
      isDefault: false
      deletionPolicy: Delete
    cephObjectStores: {}
    # cephObjectStores:
    # - name: &cephObjectStoreName ceph-objectstore-1
    #   spec:
    #     deviceClass: nvme
    #     metadataPool:
    #       deviceClass: nvme
    #       failureDomain: host
    #       replicated:
    #         size: 3
    #     dataPool:
    #       deviceClass: nvme
    #       failureDomain: host
    #       erasureCoded:
    #         dataChunks: 2
    #         codingChunks: 1
    #     preservePoolsOnDelete: false
    #     gateway:
    #       port: 80
    #       resources:
    #         requests:
    #           cpu: 250m
    #           memory: 1Gi
    #         limits:
    #           memory: 3Gi
    #       instances: 2
    #       placement:
    #         topologySpreadConstraints:
    #         - maxSkew: 1
    #           topologyKey: kubernetes.io/hostname
    #           whenUnsatisfiable: DoNotSchedule
    #           labelSelector:
    #             matchLabels:
    #               app.kubernetes.io/name: ceph-rgw
    #               app.kubernetes.io/part-of: *cephObjectStoreName
    #     healthCheck:
    #       bucket:
    #         interval: 60s
    #   storageClass:
    #     enabled: true
    #     name: ceph-bucket
    #     reclaimPolicy: Delete
    #     parameters:
    #       region: us-east-1
    #   ingress:
    #     enabled: true
    #     ingressClassName: "internal-nginx"
    #     host:
    #       name: &host-s3 "s3.${CLUSTER_NAME}.${INGRESS_DOMAIN}"
    #       path: "/"
    #     tls:
    #     - hosts:
    #       - *host-s3
# 
