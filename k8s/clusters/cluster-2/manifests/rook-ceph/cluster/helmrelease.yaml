---
# yaml-language-server: $schema=https://github.com/fluxcd-community/flux2-schemas/raw/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
  namespace: rook-ceph
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: rook-ceph-cluster
      version: v1.13.7
      sourceRef:
        kind: HelmRepository
        name: rook-ceph-charts
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: rook-ceph-operator
      namespace: rook-ceph
    - name: snapshot-controller
      namespace: system
  values:
    monitoring:
      enabled: true
      createPrometheusRules: true
    ingress:
      dashboard:
        ingressClassName: "internal-nginx"
        annotations:
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_ssl_protocols TLSv1.3;
        host:
          name: &host "rook.${CLUSTER_NAME}.${INGRESS_DOMAIN}"
          path: "/"
        tls:
          - hosts:
              - *host
    toolbox:
      enabled: true
      image: quay.io/ceph/ceph:v18.2.2
    configOverride: |
      [global]
      bdev_enable_discard = true
      bdev_async_discard = true
      osd_class_update_on_start = false
      bluefs_buffered_io = false
      # Enables subdomain style S3 endpoints
      # Cannot enable for Rook Ceph. Causes issues with reconciling Cephobjectstores
      # rgw_dns_name = s3.cluster-2.elcarpenter.com
      # rgw_resolve_cname = true

      [mon]
      mon_data_avail_warn = 20

      [osd]
      bluestore_min_alloc_size_hdd = 65536
      osd_max_backfills = 4
      osd_recovery_max_active_hdd = 16
      # Default is false. Set to true to auto repair inconsensistencies on EC & bluestore pools
      osd_scrub_auto_repair = true
      # Default is 5
      osd_scrub_auto_repair_num_errors = 5

    cephClusterSpec:
      cephVersion:
        image: quay.io/ceph/ceph:v18.2.2
        # image: registry.gitlab.onlineterroir.com/ceph/ceph:v18.2.1_patched_v1
      mgr:
        count: 2
        allowMultiplePerNode: false
        modules:
          # Several modules should not need to be included in this list. The "dashboard" and "monitoring" modules
          # are already enabled by other settings in the cluster CR.
          - name: pg_autoscaler
            enabled: true
          # Start non-default
          - name: rook
            enabled: true

      mon:
        count: 3    # increase when more nodes are added
        allowMultiplePerNode: false
      network:
        provider: host
        addressRanges:
          public:
            - "10.200.40.0/24"
          cluster:
            - "10.200.2.0/24"
        # Allows monitors to get external services
        multiClusterService:
          enabled: false
      placement:
        # mon:
        #   nodeAffinity:
        #     requiredDuringSchedulingIgnoredDuringExecution:
        #       nodeSelectorTerms:
        #         - matchExpressions:
        #           - key: node-role.kubernetes.io/rook-mon-node
        #             operator: Exist
        prepareosd: 
          tolerations:
          - key: storage-node
            operator: Exists
            effect: "NoSchedule"
        osd: 
          tolerations:
          - key: storage-node
            operator: Exists
            effect: "NoSchedule"
      resources:
        mgr:
          limits:
            cpu: 1500m
            memory: 1024Mi
          requests:
            cpu: 500m
            memory: 256Mi
        mon:
          limits:
            cpu: 1000m
            memory: 1280Mi
          requests:
            cpu: 100m
            memory: 256Mi
        osd:
          limits:
            cpu: 1000m
            memory: 3072Mi
          requests:
            cpu: 500m
            memory: 1024Mi
        # prepareosd:
        #   limits:
        #     cpu: 1000m
        #     memory: 400Mi
        #   requests:
        #     cpu: 100m
        #     memory: 200Mi
        mgr-sidecar:
          limits:
            cpu: 500m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 40Mi
        crashcollector:
          limits:
            cpu: 100m
            memory: 220M
          requests:
            cpu: 15m
            memory: 64M
        logcollector:
          limits:
            cpu: "500m"
            memory: "1Gi"
          requests:
            cpu: "100m"
            memory: "100Mi"
        cleanup:
          limits:
            cpu: "500m"
            memory: "1Gi"
          requests:
            cpu: "100m"
            memory: "100Mi"
        exporter:
          limits:
            cpu: "500m"
            memory: "128Mi"
          requests:
            cpu: "50m"
            memory: "50Mi"
      crashCollector:
        disable: false
      dashboard:
        enabled: true
        urlPrefix: /
        ssl: true
        prometheusEndpoint: http://kube-prometheus-stack-prometheus.monitoring.svc:9090
      # The option to automatically remove OSDs that are out and are safe to destroy.
      removeOSDsIfOutAndSafeToRemove: true
      storage:
        useAllNodes: false
        useAllDevices: false
        config:
          osdsPerDevice: "1"
        nodes:
          - name: work1
            deviceFilter: ^sd[a-c]
          - name: work2
            deviceFilter: ^sd[a-c]
          - name: work3
            deviceFilter: ^sd[a-c]
          - name: work4
            deviceFilter: ^sd[a-d]
          - name: work5
            deviceFilter: ^sd[a-c]
          - name: work6
            deviceFilter: ^sd[a-c]
          - name: work7
            deviceFilter: ^sd[a-c]
          - name: work8
            deviceFilter: ^sd[a-c]
    cephBlockPools:
      - name: ceph-blockpool
        spec:
          deviceClass: ssd
          failureDomain: host
          replicated:
            size: 2
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          mountOptions: ["discard"]
          parameters:
            imageFormat: "2"
            imageFeatures: layering
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
    cephBlockPoolsVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-blockpool
      isDefault: false
      deletionPolicy: Delete

    cephFileSystems:
      - name: ceph-filesystem
        spec:
          # Default is true. Setting to false will allow the ceph-operator to delete the pools when deleting the filesystem
          preservePoolsOnDelete: false
          metadataPool:
            failureDomain: host
            deviceClass: ssd
            replicated:
              size: 3
          dataPools:
            - name: data0
              failureDomain: host
              deviceClass: hdd
              replicated:
                size: 3
            - name: erasurecoded
              failureDomain: host
              deviceClass: hdd
              erasureCoded:
                dataChunks: 6
                codingChunks: 2
            - name: erasurecoded-ssd
              failureDomain: host
              deviceClass: ssd
              erasureCoded:
                dataChunks: 6
                codingChunks: 2
              quota:
                maxSize: 500G
          metadataServer:
            activeCount: 1
            activeStandby: true
            placement:
              podAntiAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchExpressions:
                        - key: app
                          operator: In
                          values:
                            - rook-ceph-mds
                    # topologyKey: kubernetes.io/hostname will place MDS across different hosts
                    topologyKey: kubernetes.io/hostname

            resources:
              requests:
                cpu: 100m
                memory: 64M
              limits:
                cpu: 1000m
                memory: 1000M
        storageClass:
          enabled: true
          isDefault: false
          name: ceph-filesystem
          pool: erasurecoded
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          parameters:
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
    cephFileSystemVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-filesystem
      isDefault: false
      deletionPolicy: Delete
    cephObjectStores:
      - name: ceph-objectstore-1
        spec:
          deviceClass: ssd
          metadataPool:
            deviceClass: ssd
            failureDomain: host
            replicated:
              size: 3
          dataPool:
            deviceClass: ssd
            failureDomain: host
            erasureCoded:
              dataChunks: 2
              codingChunks: 1
          preservePoolsOnDelete: false
          gateway:
            port: 80
            resources:
              requests:
                cpu: 250m
                memory: 1Gi
              limits:
                memory: 2Gi
            instances: 1
            placement:
              podAntiAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchExpressions:
                        - key: app
                          operator: In
                          values:
                            - rook-ceph-rgw
                    # topologyKey: kubernetes.io/hostname will place RGW across different hosts
                    topologyKey: kubernetes.io/hostname
          healthCheck:
            bucket:
              interval: 60s
        storageClass:
          enabled: true
          name: ceph-bucket
          reclaimPolicy: Delete
          parameters:
            region: us-east-1
        ingress: 
          enabled: true
          ingressClassName: "internal-nginx"
          host:
            name: &host-s3 "s3.${CLUSTER_NAME}.${INGRESS_DOMAIN}"
            path: "/"
          tls:
            - hosts:
                - *host-s3