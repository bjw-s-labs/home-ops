# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.0.1/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app sabnzbd
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: uninstall
  rollback:
    recreate: true
    cleanupOnFail: true
  uninstall:
    keepHistory: false
  values:
    # defaultPodOptions:
    #   affinity:
    #     podAntiAffinity:
    #       requiredDuringSchedulingIgnoredDuringExecution:
    #       - labelSelector:
    #           matchExpressions:
    #           - key: google.feature.node.kubernetes.io/coral
    #             operator: Exists
    #         topologyKey: kubernetes.io/hostname
    #       - labelSelector:
    #           matchExpressions:
    #           - key: app.kubernetes.io/name
    #             operator: In
    #             values: ["plex"]
    #         topologyKey: kubernetes.io/hostname
    #         # Blank selector selects all namespaces. Null namespace selector locks it to the same namespace as the HR
    #         namespaces: ["media", "downloads", "home-automation"]
    #         # nodeSelector:
    #         #   kubernetes.io/arch: "amd64"
    controllers:
      sabnzbd:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            runAsUser: ${APP_UID}
            runAsGroup: ${APP_GID}
            runAsNonRoot: true
            fsGroup: ${APP_GID}
            fsGroupChangePolicy: "OnRootMismatch"
            supplementalGroups:
            - 34

        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/sabnzbd
              tag: 4.4.1
              pullPolicy: IfNotPresent
            env:
              TZ: "${TIMEZONE}"
              SABNZBD__PORT: &port 8080
              NZBGET__APPLICATION_URL: &host "sabnzbd.${INGRESS_DOMAIN}"
              SABNZBD__HOST_WHITELIST_ENTRIES: >-
                sabnzbd, sabnzbd.downloads, sabnzbd.downloads.svc, sabnzbd.downloads.svc.cluster, sabnzbd.downloads.svc.cluster.local, sabnzbd.${INGRESS_DOMAIN}
            envFrom:
            - secretRef:
                name: sabnzbd-api-keys
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api?mode=version
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            # resources:
            #   requests:
            #     memory: "512Mi"
            #     cpu: 200m
            #   limits:
            #     memory: "4G"

    service:
      app:
        controller: *app
        ports:
          http:
            port: *port

    persistence:
      config:
        enabled: true
        existingClaim: ${VOLSYNC_CLAIM}
      logs:
        type: emptyDir
        globalMounts:
        - path: /config/logs
      tmp:
        type: emptyDir
      backup:
        enabled: true
        existingClaim: ceph-filesystem-${APP}-backups
        advancedMounts:
          sabnzbd:
            app:
            - path: /config/Backups
      downloads:
        enabled: true
        existingClaim: ceph-filesystem-${APP}-downloads
        advancedMounts:
          sabnzbd:
            app:
            - path: /mnt/unionfs/downloads

    ingress:
      app:
        enabled: true
        className: "external-nginx"
        annotations:
          external-dns/is-public: "true"
          external-dns.alpha.kubernetes.io/target: "ingress-ext.${INGRESS_DOMAIN}"
        hosts:
        - host: *host
          paths:
          - path: /
            service:
              identifier: app
              port: http
        tls:
        - hosts:
          - *host
