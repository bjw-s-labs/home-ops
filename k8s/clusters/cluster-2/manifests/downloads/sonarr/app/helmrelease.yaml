---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.0.1/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app sonarr
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.3.2
      interval: 15m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: uninstall
  rollback:
    recreate: true
    cleanupOnFail: true
  uninstall:
    keepHistory: false
  values:
    global:
      nameOverride: *app

    defaultPodOptions:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values: ["plex"]
              # Blank selector selects all namespaces. Null namespace selector locks it to the same namespace as the HR
              namespaces: ["media", "downloads", "home-automation"]
              topologyKey: kubernetes.io/hostname
      # nodeSelector:
      #   google.feature.node.kubernetes.io/coral: "true"
      #   intel.feature.node.kubernetes.io/gpu: "true"

    controllers:
      sonarr:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            runAsUser: ${APP_UID}
            runAsGroup: ${APP_GID}
            runAsNonRoot: true
            fsGroup: ${APP_GID}
            fsGroupChangePolicy: "OnRootMismatch"
            supplementalGroups:
              - 34

        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/sonarr-develop
              tag: 4.0.8.2223
              pullPolicy: IfNotPresent
            env:
              TZ: "${TIMEZONE}"
              SONARR_INSTANCE_NAME: Sonarr
              SONARR__PORT: &port 8989
              SONARR__APPLICATION_URL: &host-cluster "sonarr.${CLUSTER_NAME}.${INGRESS_DOMAIN}"
              SONARR__LOG_LEVEL: info
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            resources:
              requests:
                cpu: 10m
                memory: "3G"
              limits:
                memory: "5G"

    service:
      app:
        controller: *app
        ports:
          http:
            port: *port

    persistence:
      config:
        enabled: true
        existingClaim: ${VOLSYNC_CLAIM}
      tv:
        enabled: true
        existingClaim: ceph-filesystem-${APP}-tv
        advancedMounts:
          sonarr:
            app:
              - path: /mnt/unionfs/Media/TV
      downloads:
        enabled: true
        existingClaim: ceph-filesystem-${APP}-downloads
        advancedMounts:
          sonarr:
            app:
              - path: /mnt/unionfs/downloads
      backup:
        enabled: true
        existingClaim: ceph-filesystem-${APP}-backups
        advancedMounts:
          sonarr:
            app:
              - path: /config/Backups

    ingress:
      app:
        enabled: true
        className: "external-nginx"
        annotations:
          external-dns/is-public: "true"
          external-dns.alpha.kubernetes.io/target: "ingress-ext.${CLUSTER_NAME}.${INGRESS_DOMAIN}"
        hosts:
          - host: *host-cluster
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
          - host: &host "sonarr.${INGRESS_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host-cluster
              - *host

