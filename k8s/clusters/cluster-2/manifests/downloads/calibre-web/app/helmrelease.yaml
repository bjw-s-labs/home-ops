# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.0.1/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app calibre-web
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.7.1
      interval: 15m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: uninstall
  rollback:
    recreate: true
    cleanupOnFail: true
  uninstall:
    keepHistory: false
  values:
    # defaultPodOptions:
    #   securityContext:
    #     runAsNonRoot: true
    #     runAsUser: ${APP_UID}
    #     runAsGroup: ${APP_GID}
    #     fsGroup: ${APP_GID}
    #     fsGroupChangePolicy: OnRootMismatch
    #     supplementalGroups: [34, 10000]
    #     seccompProfile: {type: RuntimeDefault}
    controllers:
      calibre-web:
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          app:
            image:
              repository: docker.io/crocodilestick/calibre-web-automated
              tag: V3.0.1
              pullPolicy: IfNotPresent
            env:
              TZ: "${TIMEZONE}"
              CALIBRE__INSTANCE_NAME: Calibre
              CALIBRE__PORT: &port 8083
              CALIBRE__APPLICATION_URL: &host "calibre.${INGRESS_DOMAIN}"
              CALIBRE__LOG_LEVEL: info
              PUID: ${APP_UID}
              PGID: ${APP_GID}
            probes:
              liveness: &probes
                enabled: false
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                memory: "250M"
              limits:
                memory: "600M"
          

    service:
      app:
        controller: *app
        ports:
          http:
            port: *port

    persistence:
      cache:
        type: emptyDir
      config:
        enabled: true
        existingClaim: ${VOLSYNC_CLAIM}

      # backup:
      #   enabled: true
      #   existingClaim: ceph-filesystem-${APP}-backups
      #   advancedMounts:
      #     bazarr:
      #       app:
      #       - path: /config/backup



    ingress:
      app:
        enabled: true
        className: "internal-nginx"
        # annotations:
        #   external-dns.alpha.kubernetes.io/target: "ingress-int.${INGRESS_DOMAIN}"
        hosts:
        - host: *host
          paths:
          - path: /
            pathType: Prefix
            service:
              identifier: app
              port: http
        tls:
        - hosts:
          - *host


