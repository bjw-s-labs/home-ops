---
apiVersion: metal.sidero.dev/v1alpha1
kind: ServerClass
metadata:
  name: cluster-1-control-plane
spec:
  configPatches:
    - op: replace
      path: /cluster/apiServer/image
      # renovate: docker-image
      value: registry.k8s.io/kube-apiserver:v1.27.1
    - op: replace
      path: /cluster/controllerManager/image
      # renovate: docker-image
      value: registry.k8s.io/kube-controller-manager:v1.27.0
    - op: replace
      path: /cluster/scheduler/image
      # renovate: docker-image
      value: registry.k8s.io/kube-scheduler:v1.27.0
    - op: replace
      path: /machine/kubelet/image
      # renovate: docker-image
      value: ghcr.io/siderolabs/kubelet:v1.27.0
    - op: add
      path: /cluster/coreDNS
      value:
        # renovate: docker-image
        image: docker.io/coredns/coredns:1.10.1

    # Override defaults to allow prometheus logging
    - op: add
      path: /cluster/controllerManager/extraArgs
      value:
        bind-address: 0.0.0.0

    # To allow non SSL Prometheus metrics
    # - op: add
    #   path: /cluster/etcd
    #   value:
    #     extraArgs:
    #       listen-metrics-urls: http://0.0.0.0:2381

    - op: replace
      path: /persist
      value: false

    - op: add
      path: /machine/kubelet/extraArgs
      value:
        rotate-server-certificates: true
        feature-gates: GracefulNodeShutdown=true,MixedProtocolLBService=true,EphemeralContainers=true,ServerSideApply=true

    - op: add
      path: /machine/kubelet/nodeIP
      value:
        validSubnets:
          - 10.200.1.0/24

    - op: add
      path: /cluster/scheduler/extraArgs
      value:
        feature-gates: GracefulNodeShutdown=true,MixedProtocolLBService=true,EphemeralContainers=true
        # Override defaults to allow prometheus logging
        bind-address: 0.0.0.0

    # need to change vector to run as a daemonset so it can access localhost logs
    - op: add
      path: /machine/install/extraKernelArgs
      value:
        - talos.logging.kernel=tcp://10.200.1.51:6050
    - op: add
      path: /machine/logging
      value:
        destinations:
          - endpoint: tcp://10.200.1.51:9302
            format: json_lines

    - op: add
      path: /machine/time
      value:
        disabled: true
        servers:
          - 10.255.253.1

    - op: add
      path: /machine/sysctls
      value:
        fs.inotify.max_user_watches: "1048576"
        fs.inotify.max_user_instances: "8192"

    - op: replace
      path: /cluster/proxy/disabled
      value: true

    - op: add
      path: /cluster/apiServer/extraArgs
      value:
        feature-gates: GracefulNodeShutdown=true,MixedProtocolLBService=true,EphemeralContainers=true

    - op: remove
      path: /cluster/apiServer/admissionControl

    - op: add
      path: /cluster/apiServer/certSANs
      value:
        - ${CLUSTER_1_API_IP}
        - cluster-1.${HARDWARE_DOMAIN}

    - op: add
      path: /machine/certSANs
      value:
        - ${CLUSTER_1_API_IP}
        - cluster-1.${HARDWARE_DOMAIN}

    - op: replace
      path: /cluster/network/cni
      value:
        name: "none"
        # name: "custom"
        # urls:
        #   - "https://raw.githubusercontent.com/dcplaya/home-ops/main/k8s/clusters/cluster-1/integrations/cni/install.yaml"
        #   - "https://raw.githubusercontent.com/dcplaya/home-ops/main/k8s/clusters/cluster-1/integrations/cni/values.yaml"
        #   - "https://raw.githubusercontent.com/dcplaya/home-ops/main/k8s/clusters/cluster-1/integrations/cni/kustomization.yaml"

    - op: replace
      path: /cluster/extraManifests
      value:
        - "https://raw.githubusercontent.com/alex1989hu/kubelet-serving-cert-approver/v0.6.1/deploy/ha-install.yaml"

  selector:
    matchLabels:
      control-plane: "true"
