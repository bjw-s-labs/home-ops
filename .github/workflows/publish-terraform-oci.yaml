---
name: "Publish Terraform as OCI"

on:
  workflow_dispatch:
  push:
    branches: ["main"]
    paths: ["provision/**"]

jobs:
  changed-files:
    name: Generate Build Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Generate Token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
        id: generate-token
        with:
          app_id: "${{ secrets.DCPLAYA_APP_ID }}"
          private_key: "${{ secrets.DCPLAYA_APP_PRIVATE_KEY }}"

      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          token: "${{ steps.generate-token.outputs.token }}"
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@af292f1e845a0377b596972698a8598734eb2796 # v40.0.0
        with:
          dir_names: true
          dir_names_max_depth: 2
          json: true
          files: |
            provision/**

      - name: List all changed files
        run: |
          echo '${{ steps.changed-files.outputs.all_changed_files }}'

      - id: set-matrix
        run: echo "matrix={\"project\":${{ steps.changed-files.outputs.all_changed_files }}}" >> "${GITHUB_OUTPUT}"

  publish-terraform:
    name: Publish OCI
    runs-on: ubuntu-latest
    permissions:
      packages: write
      id-token: write
    needs: [changed-files]
    strategy:
      matrix: ${{ fromJSON(needs.changed-files.outputs.matrix) }}
    steps:
      - name: Generate Token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
        id: generate-token
        with:
          app_id: "${{ secrets.DCPLAYA_APP_ID }}"
          private_key: "${{ secrets.DCPLAYA_APP_PRIVATE_KEY }}"

      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          token: "${{ steps.generate-token.outputs.token }}"

      - name: Setup Homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Setup Tools
        run: |
          brew install cosign fluxcd/tap/flux

      - name: Login to GitHub Container Registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate OCI tag
        id: generate-tag
        run: echo "tag=ghcr.io/${{ github.repository_owner }}/provision-$(basename ${{ matrix.project }})-oci:$(git rev-parse --short HEAD)" >> "${GITHUB_OUTPUT}"

      - name: Publish OCI
        run: |
          flux push artifact oci://${{ steps.generate-tag.outputs.tag }} \
              --path="./${{ matrix.project }}" \
              --source="$(git config --get remote.origin.url)" \
              --revision="$(git branch --show-current)/$(git rev-parse HEAD)"

      - name: Tag OCI
        run: flux tag artifact oci://${{ steps.generate-tag.outputs.tag }} --tag main

      # Note: This is not ready for primetime
      # - name: Sign the OCI artifact
      #   run: cosign sign ${{ steps.generate-tag.outputs.tag }}
      #   env:
      #     COSIGN_EXPERIMENTAL: 1

      # - name: Verify the pushed tags
      #   run: cosign verify ${{ steps.generate-tag.outputs.tag }}
      #   env:
      #     COSIGN_EXPERIMENTAL: 1
