clusterName: cluster-1
talosVersion: v1.5.5
kubernetesVersion: v1.28.3
endpoint: https://cluster-1.${secret_domain}:6443
# domain: cluster-1.${secret_domain}
allowSchedulingOnMasters: false
cniConfig:
  name: none
additionalApiServerCertSans:
  - cluster-1
additionalMachineCertSans:
  - cluster-1
  - cluster-1.${secret_domain}
clusterPodNets:
    - ${pod_cidr}
clusterSvcNets:
    - ${svc_cidr}
nodes:
    - hostname: cp1.cluster-1.${secret_domain}
      ipAddress: cp1.cluster-1.${secret_domain}
      controlPlane: true
      disableSearchDomain: true
      installDiskSelector:
        size: <= 200GB
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        - deviceSelector:
            hardwareAddr: "1c:69:7a:ae:55:58"
          dhcp: true
          mtu: 9000
    - hostname: cp2.cluster-1.${secret_domain}
      ipAddress: cp2.cluster-1.${secret_domain}
      controlPlane: true
      installDiskSelector:
        size: <= 200GB
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        - deviceSelector:
            hardwareAddr: "1c:69:7a:ae:55:22"
          dhcp: true
          mtu: 9000
    - hostname: cp3.cluster-1.${secret_domain}
      ipAddress: cp3.cluster-1.${secret_domain}
      controlPlane: true
      disableSearchDomain: true
      installDiskSelector:
        size: <= 200GB
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        - deviceSelector:
            hardwareAddr: "76:00:f6:96:c6:df"
          dhcp: true
          mtu: 9000
    - hostname: work1.cluster-1.${secret_domain}
      ipAddress: work1.cluster-1.${secret_domain}
      controlPlane: false
      disableSearchDomain: true
      installDiskSelector:
        size: <= 200GB
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        - deviceSelector:
            hardwareAddr: "72:f2:0d:00:ac:b4"
          dhcp: true
          mtu: 9000
        - deviceSelector:
            hardwareAddr: "da:29:dc:d9:75:f7"
          dhcp: false
          mtu: 9000
          vlans:
            - vlanId: 2
              dhcp: true
              mtu: 1500
              dhcpOptions:
                routeMetric: 2048
            - vlanId: 100
              dhcp: true
              mtu: 1500
              dhcpOptions:
                routeMetric: 4096
    - hostname: work2.cluster-1.${secret_domain}
      ipAddress: work2.cluster-1.${secret_domain}
      controlPlane: false
      disableSearchDomain: true
      installDiskSelector:
        size: <= 200GB
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        - deviceSelector:
            hardwareAddr: "b2:85:37:24:ef:85"
          dhcp: true
          mtu: 9000
        - deviceSelector:
            hardwareAddr: "32:30:76:5d:f8:76"
          dhcp: false
          mtu: 9000
          vlans:
            - vlanId: 2
              dhcp: true
              mtu: 1500
              dhcpOptions:
                routeMetric: 2048
            - vlanId: 100
              dhcp: true
              mtu: 1500
              dhcpOptions:
                routeMetric: 4096
    - hostname: work3.cluster-1.${secret_domain}
      ipAddress: work3.cluster-1.${secret_domain}
      controlPlane: false
      disableSearchDomain: true
      installDiskSelector:
        size: <= 200GB
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        - deviceSelector:
            hardwareAddr: "8e:ee:0b:19:f4:94"
          dhcp: true
          mtu: 9000
        - deviceSelector:
            hardwareAddr: "ce:26:91:bd:80:d8"
          dhcp: false
          mtu: 9000
          vlans:
            - vlanId: 2
              dhcp: true
              mtu: 1500
              dhcpOptions:
                routeMetric: 2048
            - vlanId: 100
              dhcp: true
              mtu: 1500
              dhcpOptions:
                routeMetric: 4096

controlPlane:
  patches:
    # Disable search domain everywhere
    - |-
      machine:
        network:
          disableSearchDomain: true

    # Configure NTP
    - |-
      machine:
        time:
          disabled: false
          servers:
            - 10.255.253.1

    # Enable KubePrism
    - |-
      machine:
        features:
          kubePrism:
            enabled: false
            port: 7445

    # Configure cluster loopback
    # - |-
    #   machine:
    #     network:
    #       extraHostEntries:
    #         - ip: ${clusterEndpointIP}
    #           aliases:
    #             - ${clusterName}.bjw-s.casa

    # Configure pull through cache
    # - |-
    #   machine:
    #     registries:
    #       mirrors:
    #         docker.io:
    #           endpoints:
    #             - https://zot.bjw-s.dev/v2/docker.io
    #           overridePath: true
    #         ghcr.io:
    #           endpoints:
    #             - https://zot.bjw-s.dev/v2/ghcr.io
    #           overridePath: true
    #         quay.io:
    #           endpoints:
    #             - https://zot.bjw-s.dev/v2/quay.io
    #           overridePath: true
    #         gcr.io:
    #           endpoints:
    #             - https://zot.bjw-s.dev/v2/gcr.io
    #           overridePath: true
    #         registry.k8s.io:
    #           endpoints:
    #             - https://zot.bjw-s.dev/v2/registry.k8s.io
    #           overridePath: true
    #         public.ecr.aws:
    #           endpoints:
    #             - https://zot.bjw-s.dev/v2/public.ecr.aws
    #           overridePath: true

    # Cluster configuration
    # - |-
    #   cluster:
    #     allowSchedulingOnMasters: true
    #     proxy:
    #       disabled: true

    # ETCD configuration
    - |-
      cluster:
        etcd:
          advertisedSubnets:
            - 10.200.1.0/24

    # Configure containerd
    - |-
      machine:
        files:
          - op: create
            path: /etc/cri/conf.d/20-customization.part
            content: |
              [plugins]
                [plugins."io.containerd.grpc.v1.cri"]
                  enable_unprivileged_ports = true
                  enable_unprivileged_icmp = true

    # Disable default API server admission plugins.
    - |-
      - op: remove
        path: /cluster/apiServer/admissionControl

    # Kubelet configuration
    - |-
      machine:
        kubelet:
          extraArgs:
            feature-gates: CronJobTimeZone=true,GracefulNodeShutdown=true,NewVolumeManagerReconstruction=false
            rotate-server-certificates: "true"
          extraConfig:
            maxPods: 150
          nodeIP:
            validSubnets:
                - 10.200.1.0/24

    # Custom sysctls
    - |-
      machine:
        sysctls:
          fs.inotify.max_user_watches: "1048576"
          fs.inotify.max_user_instances: "8192"









# controlPlane:
#     configPatches:
#         - op: add
#           path: /machine/network/disableSearchDomain
#           value: true
#         # - op: add
#         #   path: /machine/kubelet/extraArgs
#         #   value:
#         #     rotate-server-certificates: "true"
#         #     feature-gates: CronJobTimeZone=true,GracefulNodeShutdown=true,ServerSideApply=true
#         - op: add
#           path: /machine/install/extraKernelArgs
#           value:
#             - talos.logging.kernel=udp://vector.cluster-1.${secret_domain}:6003/
#         # - op: add
#         #   path: /cluster/coreDNS
#         #   value:
#         #     # renovate: docker-image
#         #     image: docker.io/coredns/coredns:1.10.0
#     patches:
#       # Enable KubePrism
#       - |-
#         machine:
#           features:
#             kubePrism:
#               enabled: true
#               port: 7445
#       # Configure containerd
#       - |-
#         machine:
#           files:
#             - op: create
#               path: /etc/cri/conf.d/20-customization.part
#               content: |
#                 [plugins]
#                   [plugins."io.containerd.grpc.v1.cri"]
#                     enable_unprivileged_ports = true
#                     enable_unprivileged_icmp = true
#       # Disable default API server admission plugins.
#       - |-
#         - op: remove
#           path: /cluster/apiServer/admissionControl
#       # Kubelet configuration
#       - |-
#         machine:
#           kubelet:
#             extraArgs:
#               feature-gates: CronJobTimeZone=true,GracefulNodeShutdown=true,NewVolumeManagerReconstruction=false
#               rotate-server-certificates: "true"
#             extraConfig:
#               maxPods: 150
#             nodeIP:
#               validSubnets:
#                   - 10.1.1.0/24
#       # Custom sysctls
#       - |-
#         machine:
#           sysctls:
#             fs.inotify.max_user_watches: "1048576"
#             fs.inotify.max_user_instances: "8192"
#     inlinePatch:
#       cluster:
#         apiServer:
#           disablePodSecurityPolicy: true
#           # admissionControl: []
#           certSANs:
#             - cluster-1
#             - cluster-1.${secret_domain}
#             # - 10.200.1.1
#         controllerManager:
#           extraArgs:
#             # Allows Prometheus to pull metrics
#             bind-address: 0.0.0.0
#         proxy:
#           disabled: true
#         scheduler:
#           extraArgs:
#               # Allows Prometheus to pull metrics
#               bind-address: 0.0.0.0
#         discovery:
#           enabled: true
#         etcd:
#           extraArgs:
#             election-timeout: "5000"
#             # Allows Prometheus to pull metrics
#             listen-metrics-urls: http://0.0.0.0:2381
#           advertisedSubnets:
#             - 10.200.1.0/24
#           listenSubnets:
#             - 10.200.1.0/24
#         # extraManifests:
#           # - https://raw.githubusercontent.com/alex1989hu/kubelet-serving-cert-approver/main/deploy/ha-install.yaml
#           # - https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml
#       machine:
#         certSANs:
#           - cluster-1.${secret_domain}
#           # - 10.200.1.1
#         # kubelet:
#         #   nodeIP:
#         #     validSubnets:
#         #       - 10.200.1.0/24
#           # extraArgs:
#           #   feature-gates: GracefulNodeShutdown=true,ServerSideApply=true
#           #   rotate-server-certificates: "true"
#         # sysctls:
#         #   fs.inotify.max_user_watches: "1048576"
#         #   fs.inotify.max_user_instances: "8192"
#         time:
#           disabled: false
#           servers:
#             - 10.255.253.1
# worker:
#   patches:
#     - |-
#       - op: add
#         path: /machine/install/extraKernelArgs
#         value:
#           - net.ifnames=0
#     - |-
#       machine:
#         time:
#           disabled: false
#           servers:
#             - 10.255.253.1
#     - |-
#       machine:
#         certSANs:
#           - cluster-1
#           - cluster-1.${secret_domain}
#     # Configure containerd
#     - |-
#       machine:
#         files:
#           - op: create
#             path: /etc/cri/conf.d/20-customization.part
#             content: |
#               [plugins]
#                 [plugins."io.containerd.grpc.v1.cri"]
#                   enable_unprivileged_ports = true
#                   enable_unprivileged_icmp = true
#     # Kubelet configuration
#     - |-
#       machine:
#         kubelet:
#           extraArgs:
#             feature-gates: CronJobTimeZone=true,GracefulNodeShutdown=true,NewVolumeManagerReconstruction=false
#             rotate-server-certificates: "true"
#           extraConfig:
#             maxPods: 150
#           nodeIP:
#             validSubnets:
#                 - 10.200.1.0/24
# 
#     # Custom sysctls
#     - |-
#       machine:
#         sysctls:
#           fs.inotify.max_user_watches: "1048576"
#           fs.inotify.max_user_instances: "8192"
#           # For CloudflareD QUIC, sets maximum receive buffer size to roughly 2.5 MB. 
#           # https://github.com/quic-go/quic-go/wiki/UDP-Receive-Buffer-Size
#           net.core.rmem_max: 2500000