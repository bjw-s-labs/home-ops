clusterName: cluster-2

talosVersion: v1.5.5
kubernetesVersion: v1.28.3

# Image URL rendered on https://factory.talos.dev
# customization:
#     extraKernelArgs:
#         - net.ifnames=0
talosImageURL: factory.talos.dev/installer/6905bc709e5947573a4ec2d11723b58882936d3d0e15c708f7d78f0c689684a5

endpoint: https://cluster-2.${secret_domain}:6443
# domain: cluster-2.${secret_domain}
allowSchedulingOnMasters: false
cniConfig:
  name: custom
  urls:
    - https://raw.githubusercontent.com/dcplaya/home-ops/main/talos/cluster-2-cillium/quick-install.yaml
clusterPodNets:
    - ${pod_cidr}
clusterSvcNets:
    - ${svc_cidr}

nodes:
    - hostname: cp1.cluster-2.${secret_domain}
      ipAddress: cp1.cluster-2.${secret_domain}
      controlPlane: true
      # Image URL rendered on https://factory.talos.dev
      # customization:
      #     extraKernelArgs:
      #         - net.ifnames=0
      #     systemExtensions:
      #         officialExtensions:
      #             - siderolabs/gvisor
      #             - siderolabs/qemu-guest-agent
      #             - siderolabs/intel-ucode    
      talosImageURL: factory.talos.dev/installer/8a2ad5c57a1985acd0d33b6bb0ad3f6b9bc77b3226a2b39e4381109cef58d4bd
      disableSearchDomain: true
      installDiskSelector:
        size: <= 50GB
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        - deviceSelector:
            hardwareAddr: "f6:ce:9a:7b:a7:b3"
          dhcp: true
          mtu: 9000

    - hostname: cp2.cluster-2.${secret_domain}
      ipAddress: cp2.cluster-2.${secret_domain}
      controlPlane: true
      # Image URL rendered on https://factory.talos.dev
      # customization:
      #     extraKernelArgs:
      #         - net.ifnames=0
      #     systemExtensions:
      #         officialExtensions:
      #             - siderolabs/gvisor
      #             - siderolabs/qemu-guest-agent
      #             - siderolabs/intel-ucode    
      talosImageURL: factory.talos.dev/installer/8a2ad5c57a1985acd0d33b6bb0ad3f6b9bc77b3226a2b39e4381109cef58d4bd
      installDiskSelector:
        size: <= 50GB
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        - deviceSelector:
            hardwareAddr: "06:5e:c2:d2:3f:c3"
          dhcp: true
          mtu: 9000

    - hostname: cp3.cluster-2.${secret_domain}
      ipAddress: cp3.cluster-2.${secret_domain}
      controlPlane: true
      # Image URL rendered on https://factory.talos.dev
      # customization:
      #     extraKernelArgs:
      #         - net.ifnames=0
      #     systemExtensions:
      #         officialExtensions:
      #             - siderolabs/gvisor
      #             - siderolabs/qemu-guest-agent
      #             - siderolabs/intel-ucode    
      talosImageURL: factory.talos.dev/installer/8a2ad5c57a1985acd0d33b6bb0ad3f6b9bc77b3226a2b39e4381109cef58d4bd
      disableSearchDomain: true
      installDiskSelector:
        size: <= 50GB
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        - deviceSelector:
            hardwareAddr: "da:82:bd:f5:37:5f"
          dhcp: true
          mtu: 9000
    - hostname: work1.cluster-2.${secret_domain}
      ipAddress: work1.cluster-2.${secret_domain}
      controlPlane: false
      disableSearchDomain: true
      installDiskSelector:
        size: <= 50GB
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        - deviceSelector:
            hardwareAddr: "d8:3a:dd:90:f0:ae"
          dhcp: true
          mtu: 9000
        # - deviceSelector:
        #     hardwareAddr: "da:29:dc:d9:75:f7"
        #   dhcp: false
        #   mtu: 9000
        #   vlans:
        #     - vlanId: 2
        #       dhcp: true
        #       mtu: 1500
        #       dhcpOptions:
        #         routeMetric: 2048
        #     - vlanId: 100
        #       dhcp: true
        #       mtu: 1500
        #       dhcpOptions:
        #         routeMetric: 4096
    - hostname: work2.cluster-2.${secret_domain}
      ipAddress: work2.cluster-2.${secret_domain}
      controlPlane: false
      disableSearchDomain: true
      installDiskSelector:
        size: <= 50GB
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        - deviceSelector:
            hardwareAddr: "d8:3a:dd:38:12:e4"
          dhcp: true
          mtu: 9000
        # - deviceSelector:
        #     hardwareAddr: "32:30:76:5d:f8:76"
        #   dhcp: false
        #   mtu: 9000
        #   vlans:
        #     - vlanId: 2
        #       dhcp: true
        #       mtu: 1500
        #       dhcpOptions:
        #         routeMetric: 2048
        #     - vlanId: 100
        #       dhcp: true
        #       mtu: 1500
        #       dhcpOptions:
        #         routeMetric: 4096
    - hostname: work3.cluster-2.${secret_domain}
      ipAddress: work3.cluster-2.${secret_domain}
      controlPlane: false
      disableSearchDomain: true
      installDiskSelector:
        size: <= 50GB
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        - deviceSelector:
            hardwareAddr: "d8:3a:dd:90:f1:e4"
          dhcp: true
          mtu: 9000
        # - deviceSelector:
        #     hardwareAddr: "ce:26:91:bd:80:d8"
        #   dhcp: false
        #   mtu: 9000
        #   vlans:
        #     - vlanId: 2
        #       dhcp: true
        #       mtu: 1500
        #       dhcpOptions:
        #         routeMetric: 2048
        #     - vlanId: 100
        #       dhcp: true
        #       mtu: 1500
        #       dhcpOptions:
        #         routeMetric: 4096
controlPlane:
    configPatches:
        - op: add
          path: /machine/kubelet/extraArgs
          value:
            rotate-server-certificates: "true"
            feature-gates: CronJobTimeZone=true,GracefulNodeShutdown=true,ServerSideApply=true
        # - op: add
        #   path: /machine/install/extraKernelArgs
        #   value:
        #     - talos.logging.kernel=udp://vector.cluster-2.${secret_domain}:6003/
        - op: add
          path: /cluster/coreDNS
          value:
            # renovate: docker-image
            image: docker.io/coredns/coredns:1.10.0
    inlinePatch:
      cluster:
        apiServer:
          disablePodSecurityPolicy: true
          admissionControl: []
          certSANs:
            - cluster-2
            - cluster-2.${secret_domain}
            - 10.200.2.1
        controllerManager:
          extraArgs:
            # Allows Prometheus to pull metrics
            bind-address: 0.0.0.0
        proxy:
          disabled: true
        scheduler:
          extraArgs:
              # Allows Prometheus to pull metrics
              bind-address: 0.0.0.0
        discovery:
          enabled: true
        etcd:
          extraArgs:
            election-timeout: "5000"
            # Allows Prometheus to pull metrics
            listen-metrics-urls: http://0.0.0.0:2381
          advertisedSubnets:
            - 10.200.2.0/24
          listenSubnets:
            - 10.200.2.0/24
        extraManifests:
          - https://raw.githubusercontent.com/alex1989hu/kubelet-serving-cert-approver/main/deploy/ha-install.yaml
          # - https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml
      machine:
        certSANs:
          - cluster-2.${secret_domain}
          - 10.200.2.1
        kubelet:
          nodeIP:
            validSubnets:
              - 10.200.2.0/24
          extraArgs:
            feature-gates: GracefulNodeShutdown=true,ServerSideApply=true
            rotate-server-certificates: "true"
        sysctls:
          fs.inotify.max_user_watches: "1048576"
          fs.inotify.max_user_instances: "8192"
        time:
          disabled: false
          servers:
            - 10.255.253.1
worker:
  patches:
    # - |-
    #   - op: add
    #     path: /machine/install/extraKernelArgs
    #     value:
    #       - net.ifnames=0
    # Kubelet configuration
    - |-
      machine:
        kubelet:
          extraArgs:
            feature-gates: CronJobTimeZone=true,GracefulNodeShutdown=true,NewVolumeManagerReconstruction=false
            rotate-server-certificates: "true"
          extraConfig:
            maxPods: 150
          nodeIP:
            validSubnets:
                - 10.200.2.0/24
    - |-
      machine:
        time:
          disabled: false
          servers:
            - 10.255.253.1
    - |-
      machine:
        certSANs:
          - cluster-2
          - cluster-2.${secret_domain}
          - 10.200.2.1
    # Custom sysctls
    - |-
      machine:
        sysctls:
          fs.inotify.max_user_watches: "1048576"
          fs.inotify.max_user_instances: "8192"
    # Enable KubePrism
    - |-
      machine:
        features:
          kubePrism:
            enabled: true
            port: 7445
    # Configure cluster loopback
    - |-
      machine:
        network:
          extraHostEntries:
            - ip: 10.200.2.1
              aliases:
                - cluster-2.${secret_domain}
    # Configure containerd
    - |-
      machine:
        files:
          - op: create
            path: /etc/cri/conf.d/20-customization.part
            content: |
              [plugins]
                [plugins."io.containerd.grpc.v1.cri"]
                  enable_unprivileged_ports = true
                  enable_unprivileged_icmp = true
    - |-
      machine:
        sysctls:
          # For CloudflareD QUIC, sets maximum receive buffer size to roughly 2.5 MB. 
          # https://github.com/quic-go/quic-go/wiki/UDP-Receive-Buffer-Size
          net.core.rmem_max: 2500000
    - |-
      cluster:
        extraManifests:
            - https://raw.githubusercontent.com/alex1989hu/kubelet-serving-cert-approver/main/deploy/ha-install.yaml
            # - https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml
