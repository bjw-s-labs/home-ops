clusterName: cluster-2

talosVersion: v1.6.6
kubernetesVersion: v1.29.1

# Image URL rendered on https://factory.talos.dev
# customization:
#     extraKernelArgs:
#         - net.ifnames=0
#     systemExtensions:
#         officialExtensions:
#             #- siderolabs/tailscale
#             - siderolabs/util-linux-tools
#             # - siderolabs/nut-client
#             # - siderolabs/stargz-snapshotter
talosImageURL: factory.talos.dev/installer/25a0f1b6a0d9395a006be275f1dd7137ddb2105c57c5d226baae9eace262cf09

endpoint: https://cluster-2.${secret_domain}:6443
# domain: cluster-2.${secret_domain}
allowSchedulingOnMasters: false
cniConfig:
  name: none
additionalApiServerCertSans: &san
  - cluster-2
  - cluster-2.${secret_domain}
  - "127.0.0.1" # KubePrism
additionalMachineCertSans: *san
clusterPodNets:
    - ${pod_cidr}
clusterSvcNets:
    - ${svc_cidr}

nodes:
    - hostname: cp1.cluster-2.${secret_domain}
      ipAddress: cp1.cluster-2.${secret_domain}
      controlPlane: true
      disableSearchDomain: true
      installDiskSelector:
        # size: '> 50GB'
        type: nvme
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        # 1G Internal Port
        - deviceSelector:
            driver: bcmgenet
          dhcp: false
          # mtu: 9000
          vlans:
            - &vlan2002
              vlanId: 2002
              dhcp: true

    - hostname: cp2.cluster-2.${secret_domain}
      ipAddress: cp2.cluster-2.${secret_domain}
      controlPlane: true
      disableSearchDomain: true
      installDiskSelector:
        type: nvme
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        # 1G Internal Port
        - deviceSelector:
            driver: bcmgenet
          dhcp: false
          # mtu: 9000
          vlans:
            - *vlan2002


    - hostname: cp3.cluster-2.${secret_domain}
      ipAddress: cp3.cluster-2.${secret_domain}
      controlPlane: true
      # Image URL rendered on https://factory.talos.dev
      # customization:
      #     extraKernelArgs:
      #         - net.ifnames=0
      #     systemExtensions:
      #         officialExtensions:
      #             - siderolabs/gvisor
      #             - siderolabs/qemu-guest-agent
      #             - siderolabs/intel-ucode    
      talosImageURL: factory.talos.dev/installer/25a0f1b6a0d9395a006be275f1dd7137ddb2105c57c5d226baae9eace262cf09
      disableSearchDomain: true
      installDiskSelector:
        size: <= 50GB
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        - deviceSelector:
            hardwareAddr: "da:82:bd:f5:37:5f"
          dhcp: true
          # mtu: 9000

    - hostname: work1.cluster-2.${secret_domain}
      ipAddress: work1.cluster-2.${secret_domain}
      controlPlane: false
      disableSearchDomain: true
      nodeLabels:
        node-role.kubernetes.io/rook-osd-node: "true"
      nodeTaints:
        storage-node: true:NoSchedule
      installDiskSelector:
        size: <= 50GB
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        # 1G Internal Port
        - deviceSelector:
            driver: bcmgenet
          dhcp: false
          # mtu: 9000
          vlans:
            - *vlan2002
        - deviceSelector:
            # Talos cant detect MAC address at boot, so it assigns a random one.
            # Using pciID to get a consistant naming scheme
            driver: r8169
          dhcp: false
          # mtu: 9000
          dhcpOptions:
            routeMetric: 4096
          vlans:
            - &vlan2040
              vlanId: 2040
              dhcp: true
              # mtu: 9000
              dhcpOptions:
                routeMetric: 2048

    - hostname: work2.cluster-2.${secret_domain}
      ipAddress: work2.cluster-2.${secret_domain}
      controlPlane: false
      disableSearchDomain: true
      nodeLabels:
        node-role.kubernetes.io/rook-osd-node: "true"
      nodeTaints:
        storage-node: true:NoSchedule
      installDiskSelector:
        size: <= 50GB
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        # 1G Internal Port
        - deviceSelector:
            driver: bcmgenet
          dhcp: false
          # mtu: 9000
          vlans:
            - *vlan2002
        # 2.5G PICe Port
        - deviceSelector:
            # Talos cant detect MAC address at boot, so it assigns a random one.
            # Using pciID to get a consistant naming scheme
            driver: r8169
          dhcp: false
          # mtu: 9000
          dhcpOptions:
            routeMetric: 4096
          vlans:
            - *vlan2040

    - hostname: work3.cluster-2.${secret_domain}
      ipAddress: work3.cluster-2.${secret_domain}
      controlPlane: false
      disableSearchDomain: true
      nodeLabels:
        node-role.kubernetes.io/rook-osd-node: "true"
      nodeTaints:
        storage-node: true:NoSchedule
      installDiskSelector:
        size: <= 50GB
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        # 1G Internal Port
        - deviceSelector:
            driver: bcmgenet
          dhcp: false
          # mtu: 9000
          vlans:
            - *vlan2002
        # 2.5G PICe Port
        - deviceSelector:
            # Talos cant detect MAC address at boot, so it assigns a random one.
            # Using pciID to get a consistant naming scheme
            driver: r8169
          dhcp: false
          # mtu: 9000
          dhcpOptions:
            routeMetric: 4096
          vlans:
            - *vlan2040

    - hostname: work4.cluster-2.${secret_domain}
      ipAddress: work4.cluster-2.${secret_domain}
      controlPlane: false
      disableSearchDomain: true
      nodeLabels:
        node-role.kubernetes.io/rook-osd-node: "true"
      nodeTaints:
        storage-node: true:NoSchedule
      installDiskSelector:
        size: <= 50GB
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        # 1G Internal Port
        - deviceSelector:
            driver: bcmgenet
          dhcp: false
          vlans:
            - *vlan2002
        # 2.5G PICe Port
        - deviceSelector:
            # Talos cant detect MAC address at boot, so it assigns a random one.
            # Using pciID to get a consistant naming scheme
            driver: r8169
          dhcp: false
          # mtu: 9000
          dhcpOptions:
            routeMetric: 4096
          vlans:
            - *vlan2040

    - hostname: work5.cluster-2.${secret_domain}
      ipAddress: work5.cluster-2.${secret_domain}
      controlPlane: false
      disableSearchDomain: true
      nodeLabels:
        node-role.kubernetes.io/rook-osd-node: "true"
      nodeTaints:
        storage-node: true:NoSchedule
      installDiskSelector:
        size: <= 50GB
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        # 1G Internal Port
        - deviceSelector:
            driver: bcmgenet
          dhcp: false
          vlans:
            - *vlan2002
        # 2.5G PICe Port
        - deviceSelector:
            # Talos cant detect MAC address at boot, so it assigns a random one.
            # Using pciID to get a consistant naming scheme
            driver: r8169
          dhcp: false
          # mtu: 9000
          dhcpOptions:
            routeMetric: 4096
          vlans:
            - *vlan2040

    - hostname: work6.cluster-2.${secret_domain}
      ipAddress: work6.cluster-2.${secret_domain}
      controlPlane: false
      disableSearchDomain: true
      nodeLabels:
        node-role.kubernetes.io/rook-osd-node: "true"
      nodeTaints:
        storage-node: true:NoSchedule
      installDiskSelector:
        size: <= 50GB
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        # 1G Internal Port
        - deviceSelector:
            driver: bcmgenet
          dhcp: false
          vlans:
            - *vlan2002
        # 2.5G PICe Port
        - deviceSelector:
            # Talos cant detect MAC address at boot, so it assigns a random one.
            # Using pciID to get a consistant naming scheme
            driver: r8169
          dhcp: false
          # mtu: 9000
          dhcpOptions:
            routeMetric: 4096
          vlans:
            - *vlan2040

    - hostname: work7.cluster-2.${secret_domain}
      ipAddress: work7.cluster-2.${secret_domain}
      controlPlane: false
      disableSearchDomain: true
      nodeLabels:
        node-role.kubernetes.io/rook-osd-node: "true"
      nodeTaints:
        storage-node: true:NoSchedule
      installDiskSelector:
        size: <= 50GB
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        # 1G Internal Port
        - deviceSelector:
            driver: bcmgenet
          dhcp: false
          vlans:
            - *vlan2002
        # 2.5G PICe Port
        - deviceSelector:
            # Talos cant detect MAC address at boot, so it assigns a random one.
            # Using pciID to get a consistant naming scheme
            driver: r8169
          dhcp: false
          # mtu: 9000
          dhcpOptions:
            routeMetric: 4096
          vlans:
            - *vlan2040

    - hostname: work8.cluster-2.${secret_domain}
      ipAddress: work8.cluster-2.${secret_domain}
      controlPlane: false
      disableSearchDomain: true
      nodeLabels:
        node-role.kubernetes.io/rook-osd-node: "true"
      nodeTaints:
        storage-node: true:NoSchedule
      installDiskSelector:
        size: <= 50GB
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        # 1G Internal Port
        - deviceSelector:
            driver: bcmgenet
          dhcp: false
          vlans:
            - *vlan2002
        # 2.5G PICe Port
        - deviceSelector:
            # Talos cant detect MAC address at boot, so it assigns a random one.
            # Using pciID to get a consistant naming scheme
            driver: r8169
          dhcp: false
          # mtu: 9000
          dhcpOptions:
            routeMetric: 4096
          vlans:
            - *vlan2040

    - hostname: mon1.cluster-2.${secret_domain}
      ipAddress: mon1.cluster-2.${secret_domain}
      controlPlane: false
      disableSearchDomain: true
      installDiskSelector:
        type: nvme
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        # 1G Internal Port
        - deviceSelector:
            driver: bcmgenet
          dhcp: false
          vlans:
            - *vlan2002
            - &vlan2040-noMTU
              vlanId: 2040
              dhcp: true
              dhcpOptions:
                routeMetric: 2048

    - hostname: temp1.cluster-2.${secret_domain}
      ipAddress: temp1.cluster-2.${secret_domain}
      controlPlane: false
      disableSearchDomain: true
      nodeLabels:
        node-role.kubernetes.io/rook-mon-node: "true"
        node-role.kubernetes.io/rook-mgr-node: "true"
      installDiskSelector:
        size: <= 50GB
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        - deviceSelector:
            driver: virtio_net
            hardwareAddr: "52:53:e4:5a:89:e1"
          dhcp: true
          # mtu: 9000
        - deviceSelector:
            driver: virtio_net
            hardwareAddr: "52:53:e4:5a:89:e2"
          dhcp: true
          # mtu: 9000
          dhcpOptions:
            routeMetric: 2048

    - hostname: temp2.cluster-2.${secret_domain}
      ipAddress: temp2.cluster-2.${secret_domain}
      controlPlane: false
      disableSearchDomain: true
      nodeLabels:
        node-role.kubernetes.io/rook-mon-node: "true"
        node-role.kubernetes.io/rook-mgr-node: "true"
      installDiskSelector:
        size: <= 50GB
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        - deviceSelector:
            driver: virtio_net
            hardwareAddr: "52:53:e4:5a:89:e3"
          dhcp: true
          # mtu: 9000
        - deviceSelector:
            driver: virtio_net
            hardwareAddr: "52:53:e4:5a:89:e4"
          dhcp: true
          # mtu: 9000
          dhcpOptions:
            routeMetric: 2048

    - hostname: temp3.cluster-2.${secret_domain}
      ipAddress: temp3.cluster-2.${secret_domain}
      controlPlane: false
      disableSearchDomain: true
      nodeLabels:
        node-role.kubernetes.io/rook-mon-node: "true"
        node-role.kubernetes.io/rook-mgr-node: "true"
      installDiskSelector:
        size: <= 50GB
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        - deviceSelector:
            driver: virtio_net
            hardwareAddr: "52:53:e4:5a:89:e5"
          dhcp: true
          # mtu: 9000
        - deviceSelector:
            driver: virtio_net
            hardwareAddr: "52:53:e4:5a:89:e6"
          dhcp: true
          # mtu: 9000
          dhcpOptions:
            routeMetric: 2048

controlPlane:
  schematic:
    customization:
      extraKernelArgs:
        - net.ifnames=0
      systemExtensions:
        officialExtensions: &extensions
          # - siderolabs/intel-ucode
          # - siderolabs/i915-ucode
          # - siderolabs/tailscale
          - siderolabs/util-linux-tools
          # - siderolabs/nut-client
          # - siderolabs/stargz-snapshotter
  patches:
    # Disable search domain everywhere
    - &disableSearchDomainPatch |-
      machine:
        network:
          disableSearchDomain: true

    # Configure NTP
    - &ntpPatch |-
      machine:
        time:
          disabled: false
          servers:
            - 10.255.253.1

    # Force nameserver
    - &nameserverPatch |-
      machine:
        network:
          nameservers:
            - 10.0.0.4

    # Disable kube-proxy. I use an HAProxy instance externally to roundrobin
    - |-
      cluster:
        proxy:
          disabled: true
        scheduler:
          extraArgs:
            bind-address: 0.0.0.0
        controllerManager:
          extraArgs:
            bind-address: 0.0.0.0

    # ETCD configuration
    - |-
      cluster:
        etcd:
          advertisedSubnets:
            - 10.200.2.0/24

    # Configure containerd
    - &containerdPatch |-
      machine:
        files:
          - op: create
            path: /etc/cri/conf.d/20-customization.part
            content: |-
              [plugins."io.containerd.grpc.v1.cri"]
                enable_unprivileged_ports = true
                enable_unprivileged_icmp = true
              [plugins."io.containerd.grpc.v1.cri".containerd]
                discard_unpacked_layers = false
              [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
                discard_unpacked_layers = false

    # Enable cluster discovery
    - &discoveryPatch |-
      cluster:
        discovery:
          enabled: true
          registries:
            kubernetes:
              disabled: false
            service:
              disabled: false

    # Configure kubelet
    - &kubeletPatch |-
      machine:
        kubelet:
          extraArgs:
            feature-gates: GracefulNodeShutdown=true
            rotate-server-certificates: true
          extraConfig:
            maxPods: 200
          nodeIP:
            validSubnets:
              - 10.200.2.0/24

    # Enable KubePrism
    - &kubePrismPatch |-
      machine:
        features:
          kubePrism:
            enabled: true
            port: 7445

    # Custom sysctl settings
    - &sysctlPatch |-
      machine:
        sysctls:
          fs.inotify.max_user_watches: 1048576
          fs.inotify.max_user_instances: 8192
          kernel.randomize_va_space: 0
          net.core.netdev_max_backlog: 30000
          net.core.rmem_max: 67108864
          net.core.wmem_max: 67108864
          net.ipv4.tcp_rmem: 4096 87380 33554432
          net.ipv4.tcp_wmem: 4096 65536 33554432
          net.ipv4.tcp_tw_reuse: 1
          net.ipv4.tcp_window_scaling: 1

    # Custom Talos installer patch
    - &talosPatch |-
      machine:
        install:
          extraKernelArgs:
            - mitigations=off
            - net.ifnames=0

    # Rook Ceph encrypted OSDs
    # TODO: https://github.com/siderolabs/talos/issues/3129
    - &encryptedOSD |-
      machine:
        files:
          - op: overwrite
            path: /etc/lvm/lvm.conf
            permissions: 0o644
            content: |
              backup {
                      backup = 0
                      archive = 0
              }

    # Disable default API server admission plugins.
    - |-
      - op: remove
        path: /cluster/apiServer/admissionControl

    # Enable K8s Talos API Access
    - |-
      machine:
        features:
          kubernetesTalosAPIAccess:
            enabled: true
            allowedRoles:
              - os:admin
            allowedKubernetesNamespaces:
              - kube-system

worker:
  schematic:
    customization:
      extraKernelArgs:
        - net.ifnames=0
      systemExtensions:
        officialExtensions: *extensions
  patches:
    - *containerdPatch
    - *disableSearchDomainPatch
    - *discoveryPatch
    - *kubeletPatch
    - *kubePrismPatch
    - *nameserverPatch
    - *ntpPatch
    - *sysctlPatch
    - *talosPatch
    # - *pullThroughCachePatch
    - *encryptedOSD



