clusterName: cluster-2

talosVersion: v1.6.1
kubernetesVersion: v1.29.0

# Image URL rendered on https://factory.talos.dev
# customization:
#     extraKernelArgs:
#         - net.ifnames=0
#     systemExtensions:
#         officialExtensions:
#             - siderolabs/tailscale
#             - siderolabs/util-linux-tools
#             - siderolabs/nut-client
#             - siderolabs/stargz-snapshotter
talosImageURL: factory.talos.dev/installer/5d23ac0c63801a5c79388cdbb6c9d05966af3b8be2b478f7862c283b0dbafbb2

endpoint: https://cluster-2.${secret_domain}:6443
# domain: cluster-2.${secret_domain}
allowSchedulingOnMasters: false
cniConfig:
  name: none
additionalApiServerCertSans: &san
  - cluster-2
  - cluster-2.${secret_domain}
  - "127.0.0.1" # KubePrism
additionalMachineCertSans: *san
clusterPodNets:
    - ${pod_cidr}
clusterSvcNets:
    - ${svc_cidr}

nodes:
    - hostname: cp1.cluster-2.${secret_domain}
      ipAddress: cp1.cluster-2.${secret_domain}
      controlPlane: true
      # Image URL rendered on https://factory.talos.dev
      # customization:
      #     extraKernelArgs:
      #         - net.ifnames=0
      #     systemExtensions:
      #         officialExtensions:
      #             - siderolabs/gvisor
      #             - siderolabs/qemu-guest-agent
      #             - siderolabs/intel-ucode    
      talosImageURL: factory.talos.dev/installer/8a2ad5c57a1985acd0d33b6bb0ad3f6b9bc77b3226a2b39e4381109cef58d4bd
      disableSearchDomain: true
      installDiskSelector:
        size: <= 50GB
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        - deviceSelector:
            hardwareAddr: "f6:ce:9a:7b:a7:b3"
          dhcp: true
          mtu: 9000

    - hostname: cp2.cluster-2.${secret_domain}
      ipAddress: cp2.cluster-2.${secret_domain}
      controlPlane: true
      # Image URL rendered on https://factory.talos.dev
      # customization:
      #     extraKernelArgs:
      #         - net.ifnames=0
      #     systemExtensions:
      #         officialExtensions:
      #             - siderolabs/gvisor
      #             - siderolabs/qemu-guest-agent
      #             - siderolabs/intel-ucode    
      talosImageURL: factory.talos.dev/installer/8a2ad5c57a1985acd0d33b6bb0ad3f6b9bc77b3226a2b39e4381109cef58d4bd
      disableSearchDomain: true
      installDiskSelector:
        size: <= 50GB
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        - deviceSelector:
            hardwareAddr: "06:5e:c2:d2:3f:c3"
          dhcp: true
          mtu: 9000

    - hostname: cp3.cluster-2.${secret_domain}
      ipAddress: cp3.cluster-2.${secret_domain}
      controlPlane: true
      # Image URL rendered on https://factory.talos.dev
      # customization:
      #     extraKernelArgs:
      #         - net.ifnames=0
      #     systemExtensions:
      #         officialExtensions:
      #             - siderolabs/gvisor
      #             - siderolabs/qemu-guest-agent
      #             - siderolabs/intel-ucode    
      talosImageURL: factory.talos.dev/installer/8a2ad5c57a1985acd0d33b6bb0ad3f6b9bc77b3226a2b39e4381109cef58d4bd
      disableSearchDomain: true
      installDiskSelector:
        size: <= 50GB
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        - deviceSelector:
            hardwareAddr: "da:82:bd:f5:37:5f"
          dhcp: true
          mtu: 9000

    - hostname: work1.cluster-2.${secret_domain}
      ipAddress: work1.cluster-2.${secret_domain}
      controlPlane: false
      disableSearchDomain: true
      nodeLabels:
        node-role.kubernetes.io/rook-osd-node: "true"
      installDiskSelector:
        size: <= 50GB
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        # 1G Internal Port
        - deviceSelector:
            driver: bcmgenet
          dhcp: false
          # mtu: 9000
          vlans:
            - &vlan2002
              vlanId: 2002
              dhcp: true
              # mtu: 9000
        # 2.5G PICe Port
        - deviceSelector:
            # Talos cant detect MAC address at boot, so it assigns a random one.
            # Using pciID to get a consistant naming scheme
            driver: r8169
          dhcp: false
          mtu: 9000
          dhcpOptions:
            routeMetric: 4096
          vlans:
            - &vlan2040
              vlanId: 2040
              dhcp: true
              mtu: 9000
              dhcpOptions:
                routeMetric: 2048

    - hostname: work2.cluster-2.${secret_domain}
      ipAddress: work2.cluster-2.${secret_domain}
      controlPlane: false
      disableSearchDomain: true
      nodeLabels:
        node-role.kubernetes.io/rook-osd-node: "true"
      installDiskSelector:
        size: <= 50GB
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        # 1G Internal Port
        - deviceSelector:
            driver: bcmgenet
          dhcp: false
          # mtu: 9000
          vlans:
            - *vlan2002
        # 2.5G PICe Port
        - deviceSelector:
            # Talos cant detect MAC address at boot, so it assigns a random one.
            # Using pciID to get a consistant naming scheme
            driver: r8169
          dhcp: false
          mtu: 9000
          dhcpOptions:
            routeMetric: 4096
          vlans:
            - *vlan2040

    - hostname: work3.cluster-2.${secret_domain}
      ipAddress: work3.cluster-2.${secret_domain}
      controlPlane: false
      disableSearchDomain: true
      nodeLabels:
        node-role.kubernetes.io/rook-osd-node: "true"
      installDiskSelector:
        size: <= 50GB
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        # 1G Internal Port
        - deviceSelector:
            driver: bcmgenet
          dhcp: false
          # mtu: 9000
          vlans:
            - *vlan2002
        # 2.5G PICe Port
        - deviceSelector:
            # Talos cant detect MAC address at boot, so it assigns a random one.
            # Using pciID to get a consistant naming scheme
            driver: r8169
          dhcp: false
          mtu: 9000
          dhcpOptions:
            routeMetric: 4096
          vlans:
            - *vlan2040

    - hostname: work4.cluster-2.${secret_domain}
      ipAddress: work4.cluster-2.${secret_domain}
      controlPlane: false
      disableSearchDomain: true
      nodeLabels:
        node-role.kubernetes.io/rook-osd-node: "true"
      installDiskSelector:
        size: <= 50GB
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        # 1G Internal Port
        - deviceSelector:
            driver: bcmgenet
          dhcp: false
          vlans:
            - *vlan2002
        # 2.5G PICe Port
        - deviceSelector:
            # Talos cant detect MAC address at boot, so it assigns a random one.
            # Using pciID to get a consistant naming scheme
            driver: r8169
          dhcp: false
          mtu: 9000
          dhcpOptions:
            routeMetric: 4096
          vlans:
            - *vlan2040

    - hostname: work5.cluster-2.${secret_domain}
      ipAddress: work5.cluster-2.${secret_domain}
      controlPlane: false
      disableSearchDomain: true
      nodeLabels:
        node-role.kubernetes.io/rook-osd-node: "true"
      installDiskSelector:
        size: <= 50GB
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        # 1G Internal Port
        - deviceSelector:
            driver: bcmgenet
          dhcp: false
          vlans:
            - *vlan2002
        # 2.5G PICe Port
        - deviceSelector:
            # Talos cant detect MAC address at boot, so it assigns a random one.
            # Using pciID to get a consistant naming scheme
            driver: r8169
          dhcp: false
          mtu: 9000
          dhcpOptions:
            routeMetric: 4096
          vlans:
            - *vlan2040

    - hostname: work6.cluster-2.${secret_domain}
      ipAddress: work6.cluster-2.${secret_domain}
      controlPlane: false
      disableSearchDomain: true
      nodeLabels:
        node-role.kubernetes.io/rook-osd-node: "true"
      installDiskSelector:
        size: <= 50GB
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        # 1G Internal Port
        - deviceSelector:
            driver: bcmgenet
          dhcp: false
          vlans:
            - *vlan2002
        # 2.5G PICe Port
        - deviceSelector:
            # Talos cant detect MAC address at boot, so it assigns a random one.
            # Using pciID to get a consistant naming scheme
            driver: r8169
          dhcp: false
          mtu: 9000
          dhcpOptions:
            routeMetric: 4096
          vlans:
            - *vlan2040

    - hostname: work7.cluster-2.${secret_domain}
      ipAddress: work7.cluster-2.${secret_domain}
      controlPlane: false
      disableSearchDomain: true
      nodeLabels:
        node-role.kubernetes.io/rook-osd-node: "true"
      installDiskSelector:
        size: <= 50GB
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        # 1G Internal Port
        - deviceSelector:
            driver: bcmgenet
          dhcp: false
          vlans:
            - *vlan2002
        # 2.5G PICe Port
        - deviceSelector:
            # Talos cant detect MAC address at boot, so it assigns a random one.
            # Using pciID to get a consistant naming scheme
            driver: r8169
          dhcp: false
          mtu: 9000
          dhcpOptions:
            routeMetric: 4096
          vlans:
            - *vlan2040

    - hostname: work8.cluster-2.${secret_domain}
      ipAddress: work8.cluster-2.${secret_domain}
      controlPlane: false
      disableSearchDomain: true
      nodeLabels:
        node-role.kubernetes.io/rook-osd-node: "true"
      installDiskSelector:
        size: <= 50GB
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        # 1G Internal Port
        - deviceSelector:
            driver: bcmgenet
          dhcp: false
          vlans:
            - *vlan2002
        # 2.5G PICe Port
        - deviceSelector:
            # Talos cant detect MAC address at boot, so it assigns a random one.
            # Using pciID to get a consistant naming scheme
            driver: r8169
          dhcp: false
          mtu: 9000
          dhcpOptions:
            routeMetric: 4096
          vlans:
            - *vlan2040

    - hostname: temp1.cluster-2.${secret_domain}
      ipAddress: temp1.cluster-2.${secret_domain}
      controlPlane: false
      disableSearchDomain: true
      nodeLabels:
        node-role.kubernetes.io/rook-mon-node: "true"
        node-role.kubernetes.io/rook-mgr-node: "true"
      installDiskSelector:
        size: <= 50GB
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        - deviceSelector:
            driver: virtio_net
            hardwareAddr: "52:53:e4:5a:89:e1"
          dhcp: true
          mtu: 9000
        - deviceSelector:
            driver: virtio_net
            hardwareAddr: "52:53:e4:5a:89:e2"
          dhcp: true
          mtu: 9000
          dhcpOptions:
            routeMetric: 2048

    - hostname: temp2.cluster-2.${secret_domain}
      ipAddress: temp2.cluster-2.${secret_domain}
      controlPlane: false
      disableSearchDomain: true
      nodeLabels:
        node-role.kubernetes.io/rook-mon-node: "true"
        node-role.kubernetes.io/rook-mgr-node: "true"
      installDiskSelector:
        size: <= 50GB
      nameservers:
        - 10.0.0.4
      networkInterfaces:
        - deviceSelector:
            driver: virtio_net
            hardwareAddr: "52:53:e4:5a:89:e3"
          dhcp: true
          mtu: 9000
        - deviceSelector:
            driver: virtio_net
            hardwareAddr: "52:53:e4:5a:89:e4"
          dhcp: true
          mtu: 9000
          dhcpOptions:
            routeMetric: 2048

controlPlane:
  schematic:
    customization:
      extraKernelArgs:
        - net.ifnames=0
      systemExtensions:
        officialExtensions: &extensions
          # - siderolabs/intel-ucode
          # - siderolabs/i915-ucode
          - siderolabs/tailscale
          - siderolabs/util-linux-tools
          - siderolabs/nut-client
          - siderolabs/stargz-snapshotter
  patches:
  # To get consistent naming for interfaces
  #   - |-
  #     - op: add
  #       path: /machine/install/extraKernelArgs
  #       value:
  #         - net.ifnames=0
    # Disable search domain everywhere
    - |-
      machine:
        network:
          disableSearchDomain: true

    # Configure NTP
    - |-
      machine:
        time:
          disabled: false
          servers:
            - 10.255.253.1
    # Disable kube-proxy. I use an HAProxy instance externally to roundrobin
    - |-
      cluster:
        proxy:
          disabled: true

    # Configure pull through cache
    # - |-
    #   machine:
    #     registries:
    #       mirrors:
    #         docker.io:
    #           endpoints:
    #             - https://zot.bjw-s.dev/v2/docker.io
    #           overridePath: true
    #         ghcr.io:
    #           endpoints:
    #             - https://zot.bjw-s.dev/v2/ghcr.io
    #           overridePath: true
    #         quay.io:
    #           endpoints:
    #             - https://zot.bjw-s.dev/v2/quay.io
    #           overridePath: true
    #         gcr.io:
    #           endpoints:
    #             - https://zot.bjw-s.dev/v2/gcr.io
    #           overridePath: true
    #         registry.k8s.io:
    #           endpoints:
    #             - https://zot.bjw-s.dev/v2/registry.k8s.io
    #           overridePath: true
    #         public.ecr.aws:
    #           endpoints:
    #             - https://zot.bjw-s.dev/v2/public.ecr.aws
    #           overridePath: true

    # ETCD configuration
    - |-
      cluster:
        etcd:
          advertisedSubnets:
            - 10.200.2.0/24

    # Configure containerd
    - |-
      machine:
        files:
          - op: create
            path: /etc/cri/conf.d/20-customization.part
            content: |
              [plugins]
                [plugins."io.containerd.grpc.v1.cri"]
                  enable_unprivileged_ports = true
                  enable_unprivileged_icmp = true

    # Disable default API server admission plugins.
    - |-
      - op: remove
        path: /cluster/apiServer/admissionControl

    # Kubelet configuration
    - |-
      machine:
        kubelet:
          extraArgs:
            feature-gates: GracefulNodeShutdown=true,NewVolumeManagerReconstruction=false
            rotate-server-certificates: "true"
          extraConfig:
            maxPods: 150
          nodeIP:
            validSubnets:
                - 10.200.2.0/24

    # Custom sysctls
    - |-
      machine:
        sysctls:
          fs.inotify.max_user_watches: "1048576"
          fs.inotify.max_user_instances: "8192"

worker:
  schematic:
    customization:
      extraKernelArgs:
        - net.ifnames=0
      systemExtensions:
        officialExtensions: *extensions
  patches:
  # To get consistent naming for interfaces
    # - |-
    #   - op: add
    #     path: /machine/install/extraKernelArgs
    #     value:
    #       - net.ifnames=0
    # Kubelet configuration
    - |-
      machine:
        kubelet:
          extraArgs:
            feature-gates: GracefulNodeShutdown=true,NewVolumeManagerReconstruction=false
            rotate-server-certificates: "true"
          extraConfig:
            maxPods: 150
          nodeIP:
            validSubnets:
                - 10.200.2.0/24
    - |-
      machine:
        time:
          disabled: false
          servers:
            - 10.255.253.1
    # Custom sysctls
    - |-
      machine:
        sysctls:
          fs.inotify.max_user_watches: "1048576"
          fs.inotify.max_user_instances: "8192"
          # For CloudflareD QUIC, sets maximum receive buffer size to roughly 2.5 MB. 
          # https://github.com/quic-go/quic-go/wiki/UDP-Receive-Buffer-Size
          net.core.rmem_max: 2500000
    # Configure containerd
    - |-
      machine:
        files:
          - op: create
            path: /etc/cri/conf.d/20-customization.part
            content: |
              [plugins]
                [plugins."io.containerd.grpc.v1.cri"]
                  enable_unprivileged_ports = true
                  enable_unprivileged_icmp = true
